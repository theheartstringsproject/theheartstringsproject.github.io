/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "test/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	__webpack_require__(76);
	__webpack_require__(252);
	__webpack_require__(276);
	__webpack_require__(338);
	__webpack_require__(339);
	__webpack_require__(342);
	__webpack_require__(343);
	__webpack_require__(345);
	__webpack_require__(358);
	__webpack_require__(360);
	__webpack_require__(362);
	__webpack_require__(364);
	__webpack_require__(366);
	__webpack_require__(368);
	module.exports = __webpack_require__(370);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _actions = __webpack_require__(31);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	describe('Actions', function () {
	
		describe('Navigation Actions', function () {
			it('should create an action for advanging a page', function () {
				var expectedAction = {
					type: types.ADVANCE_PAGE
				};
				(0, _expect2.default)(actions.advancePage()).toEqual(expectedAction);
			});
	
			it('should create an action for receding a page', function () {
				var expectedAction = {
					type: types.RECEDE_PAGE
				};
				(0, _expect2.default)(actions.recedePage()).toEqual(expectedAction);
			});
	
			it('should create an action for jumping to a page', function () {
				var page = 7;
				var expectedAction = {
					type: types.JUMP_TO_PAGE,
					page: page
				};
				(0, _expect2.default)(actions.jumpToPage(page)).toEqual(expectedAction);
			});
	
			it('should create an action for jumping to the previous page', function () {
				var expectedAction = {
					type: types.JUMP_TO_PREVIOUS_PAGE
				};
				(0, _expect2.default)(actions.jumpToPreviousPage()).toEqual(expectedAction);
			});
		});
	
		it('should create an action for setting email', function () {
			var email = 'jeremy@lubin.com',
			    status = inputStates.VALID;
			var expectedAction = {
				type: 'SET_EMAIL',
				status: status,
				email: email
			};
	
			(0, _expect2.default)(actions.setEmail(email, status)).toEqual(expectedAction);
		});
	
		it('should create an action for setting credit card number', function () {
			var cardNumber = '1234567891098876',
			    formattedCardNumber = '•••• •••• •••• 8876',
			    cardNumberCursorPosition = '3',
			    cardType = 'amex',
			    status = inputStates.VALID,
			    formState = {};
			var expectedAction = {
				type: 'SET_CREDIT_CARD_NUMBER',
				status: status,
				cardNumber: cardNumber,
				cardType: cardType,
				formattedCardNumber: formattedCardNumber,
				cardNumberCursorPosition: cardNumberCursorPosition,
				formState: formState
			};
	
			(0, _expect2.default)(actions.setCreditCardNumber(cardNumber, cardType, formattedCardNumber, status, cardNumberCursorPosition, formState)).toEqual(expectedAction);
		});
	
		it('should create an action for setting credit card expiration date', function () {
			var expirationDate = '12/20',
			    expirationDateCursorPosition = '3',
			    status = inputStates.VALID;
			var expectedAction = {
				type: 'SET_CREDIT_CARD_EXPIRATION_DATE',
				status: status,
				expirationDate: expirationDate,
				expirationDateCursorPosition: expirationDateCursorPosition
			};
	
			(0, _expect2.default)(actions.setCreditCardExpirationDate(expirationDate, status, expirationDateCursorPosition)).toEqual(expectedAction);
		});
	
		it('should create an action for setting credit card security code', function () {
			var securityCode = '1220',
			    securityCodeCursorPosition = '3',
			    status = inputStates.VALID;
			var expectedAction = {
				type: 'SET_CREDIT_CARD_SECURITY_CODE',
				status: status,
				securityCode: securityCode,
				securityCodeCursorPosition: securityCodeCursorPosition
			};
	
			(0, _expect2.default)(actions.setCreditCardSecurityCode(securityCode, status, securityCodeCursorPosition)).toEqual(expectedAction);
		});
	
		it('should create an action for beginning to edit the credit card number', function () {
			var expectedAction = {
				type: types.DID_START_EDITING_CREDIT_CARD_NUMBER
			};
	
			(0, _expect2.default)(actions.didStartEditingCreditCardNumber()).toEqual(expectedAction);
		});
	
		it('should create an action for beginning to edit the credit card expiration date', function () {
			var expectedAction = {
				type: types.DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE
			};
	
			(0, _expect2.default)(actions.didStartEditingCreditCardExpirationDate()).toEqual(expectedAction);
		});
	
		it('should create an action for beginning to edit the credit card security code', function () {
			var expectedAction = {
				type: types.DID_START_EDITING_CREDIT_CARD_SECURITY_CODE
			};
	
			(0, _expect2.default)(actions.didStartEditingCreditCardSecurityCode()).toEqual(expectedAction);
		});
	
		it('should create an action for ending credit card number editing', function () {
			var expectedAction = {
				type: types.DID_FINISH_EDITING_CREDIT_CARD_NUMBER
			};
	
			(0, _expect2.default)(actions.didFinishEditingCreditCardNumber()).toEqual(expectedAction);
		});
	
		it('should create an action for setting editing to expiration date', function () {
			var expectedAction = {
				type: types.SET_EDITING_CREDIT_CARD_EXPIRATION_DATE
			};
	
			(0, _expect2.default)(actions.setEditingCreditCardExpirationDate()).toEqual(expectedAction);
		});
	
		it('should create an action for setting editing to security code', function () {
			var expectedAction = {
				type: types.SET_EDITING_CREDIT_CARD_SECURITY_CODE
			};
	
			(0, _expect2.default)(actions.setEditingCreditCardSecurityCode()).toEqual(expectedAction);
		});
	
		it('should create an action for having attempted email validation', function () {
			var expectedAction = {
				type: types.HAS_ATTEMPTED_EMAIL_VALIDATION
			};
	
			(0, _expect2.default)(actions.hasAttemptedEmailValidation()).toEqual(expectedAction);
		});
	
		it('should create an action for an invalid credit card number', function () {
			var error = {};
			var expectedAction = {
				type: types.INVALID_CREDIT_CARD_NUMBER,
				error: error
			};
	
			(0, _expect2.default)(actions.invalidCreditCardNumber(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an invalid credit card expiration month', function () {
			var error = {};
			var expectedAction = {
				type: types.INVALID_CREDIT_CARD_EXPIRATION_MONTH,
				error: error
			};
	
			(0, _expect2.default)(actions.invalidCreditCardExpirationMonth(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an invalid credit card expiration year', function () {
			var error = {};
			var expectedAction = {
				type: types.INVALID_CREDIT_CARD_EXPIRATION_YEAR,
				error: error
			};
	
			(0, _expect2.default)(actions.invalidCreditCardExpirationYear(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an invalid credit card security code', function () {
			var error = {};
			var expectedAction = {
				type: types.INVALID_CREDIT_CARD_SECURITY_CODE,
				error: error
			};
	
			(0, _expect2.default)(actions.invalidCreditCardSecurityCode(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an incorrect credit card number', function () {
			var error = {};
			var expectedAction = {
				type: types.INCORRECT_CREDIT_CARD_NUMBER,
				error: error
			};
	
			(0, _expect2.default)(actions.incorrectCreditCardNumber(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an incorrect credit card security code', function () {
			var error = {};
			var expectedAction = {
				type: types.INCORRECT_CREDIT_CARD_SECURITY_CODE,
				error: error
			};
	
			(0, _expect2.default)(actions.incorrectCreditCardSecurityCode(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an expired credit card', function () {
			var error = {};
			var expectedAction = {
				type: types.EXPIRED_CREDIT_CARD,
				error: error
			};
	
			(0, _expect2.default)(actions.expiredCreditCard(error)).toEqual(expectedAction);
		});
	
		it('should create an action for a declined credit card', function () {
			var error = {};
			var expectedAction = {
				type: types.DECLINED_CREDIT_CARD,
				error: error
			};
	
			(0, _expect2.default)(actions.declinedCreditCard(error)).toEqual(expectedAction);
		});
	
		it('should create an action for an unrecoverable error', function () {
			var error = {};
			var expectedAction = {
				type: types.UNRECOVERABLE_ERROR,
				error: error
			};
	
			(0, _expect2.default)(actions.unrecoverableError(error)).toEqual(expectedAction);
		});
	
		it('should create an action for requesting a payment token', function () {
			var expectedAction = {
				type: types.REQUEST_PAYMENT_TOKEN
			};
	
			(0, _expect2.default)(actions.requestPaymentToken()).toEqual(expectedAction);
		});
	
		// it('should create an action for a failed payment token request', function() {
		// 	const error = {}
		// 	const expectedAction = {
		// 		type: types.PAYMENT_TOKEN_REQUEST_FAILED,
		// 		error
		// 	}
	
		// 	expect( actions.paymentTokenRequestFailed( error ) ).toEqual( expectedAction )
		// })
	
		it('should create an action for a successful payment token request', function () {
			var response = {};
			var expectedAction = {
				type: types.PAYMENT_TOKEN_RECEIVED,
				response: response
			};
	
			(0, _expect2.default)(actions.paymentTokenReceived(response)).toEqual(expectedAction);
		});
	});

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _Expectation = __webpack_require__(3);
	
	var _Expectation2 = _interopRequireDefault(_Expectation);
	
	var _SpyUtils = __webpack_require__(11);
	
	var _assert = __webpack_require__(9);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _extend = __webpack_require__(30);
	
	var _extend2 = _interopRequireDefault(_extend);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	function expect(actual) {
	  return new _Expectation2.default(actual);
	}
	
	expect.createSpy = _SpyUtils.createSpy;
	expect.spyOn = _SpyUtils.spyOn;
	expect.isSpy = _SpyUtils.isSpy;
	expect.restoreSpies = _SpyUtils.restoreSpies;
	expect.assert = _assert2.default;
	expect.extend = _extend2.default;
	
	module.exports = expect;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};
	
	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();
	
	var _has = __webpack_require__(4);
	
	var _has2 = _interopRequireDefault(_has);
	
	var _tmatch = __webpack_require__(7);
	
	var _tmatch2 = _interopRequireDefault(_tmatch);
	
	var _isRegex = __webpack_require__(8);
	
	var _isRegex2 = _interopRequireDefault(_isRegex);
	
	var _assert = __webpack_require__(9);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _SpyUtils = __webpack_require__(11);
	
	var _TestUtils = __webpack_require__(16);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	/**
	 * An Expectation is a wrapper around an assertion that allows it to be written
	 * in a more natural style, without the need to remember the order of arguments.
	 * This helps prevent you from making mistakes when writing tests.
	 */
	
	var Expectation = function () {
	  function Expectation(actual) {
	    _classCallCheck(this, Expectation);
	
	    this.actual = actual;
	
	    if ((0, _TestUtils.isFunction)(actual)) {
	      this.context = null;
	      this.args = [];
	    }
	  }
	
	  _createClass(Expectation, [{
	    key: 'toExist',
	    value: function toExist(message) {
	      (0, _assert2.default)(this.actual, message || 'Expected %s to exist', this.actual);
	
	      return this;
	    }
	  }, {
	    key: 'toNotExist',
	    value: function toNotExist(message) {
	      (0, _assert2.default)(!this.actual, message || 'Expected %s to not exist', this.actual);
	
	      return this;
	    }
	  }, {
	    key: 'toBe',
	    value: function toBe(value, message) {
	      (0, _assert2.default)(this.actual === value, message || 'Expected %s to be %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toNotBe',
	    value: function toNotBe(value, message) {
	      (0, _assert2.default)(this.actual !== value, message || 'Expected %s to not be %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toEqual',
	    value: function toEqual(value, message) {
	      try {
	        (0, _assert2.default)((0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to equal %s', this.actual, value);
	      } catch (error) {
	        // These attributes are consumed by Mocha to produce a diff output.
	        error.actual = this.actual;
	        error.expected = value;
	        error.showDiff = true;
	        throw error;
	      }
	
	      return this;
	    }
	  }, {
	    key: 'toNotEqual',
	    value: function toNotEqual(value, message) {
	      (0, _assert2.default)(!(0, _TestUtils.isEqual)(this.actual, value), message || 'Expected %s to not equal %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toThrow',
	    value: function toThrow(value, message) {
	      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The "actual" argument in expect(actual).toThrow() must be a function, %s was given', this.actual);
	
	      (0, _assert2.default)((0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to throw %s', this.actual, value || 'an error');
	
	      return this;
	    }
	  }, {
	    key: 'toNotThrow',
	    value: function toNotThrow(value, message) {
	      (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The "actual" argument in expect(actual).toNotThrow() must be a function, %s was given', this.actual);
	
	      (0, _assert2.default)(!(0, _TestUtils.functionThrows)(this.actual, this.context, this.args, value), message || 'Expected %s to not throw %s', this.actual, value || 'an error');
	
	      return this;
	    }
	  }, {
	    key: 'toBeA',
	    value: function toBeA(value, message) {
	      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The "value" argument in toBeA(value) must be a function or a string');
	
	      (0, _assert2.default)((0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to be a %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toNotBeA',
	    value: function toNotBeA(value, message) {
	      (0, _assert2.default)((0, _TestUtils.isFunction)(value) || typeof value === 'string', 'The "value" argument in toNotBeA(value) must be a function or a string');
	
	      (0, _assert2.default)(!(0, _TestUtils.isA)(this.actual, value), message || 'Expected %s to be a %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toMatch',
	    value: function toMatch(pattern, message) {
	      var matches = false;
	
	      if (typeof this.actual === 'string') {
	        (0, _assert2.default)((0, _isRegex2.default)(pattern), 'The "pattern" argument in expect(string).toMatch(pattern) must be a RegExp');
	
	        matches = pattern.test(this.actual);
	      } else if ((0, _TestUtils.isObject)(this.actual)) {
	        matches = (0, _tmatch2.default)(this.actual, pattern);
	      } else {
	        (0, _assert2.default)(false, 'The "actual" argument in expect(actual).toMatch() must be a string or an object');
	      }
	
	      (0, _assert2.default)(matches, message || 'Expected %s to match %s', this.actual, pattern);
	
	      return this;
	    }
	  }, {
	    key: 'toNotMatch',
	    value: function toNotMatch(pattern, message) {
	      var matches = false;
	
	      if (typeof this.actual === 'string') {
	        (0, _assert2.default)((0, _isRegex2.default)(pattern), 'The "pattern" argument in expect(string).toNotMatch(pattern) must be a RegExp');
	
	        matches = pattern.test(this.actual);
	      } else if ((0, _TestUtils.isObject)(this.actual)) {
	        matches = (0, _tmatch2.default)(this.actual, pattern);
	      } else {
	        (0, _assert2.default)(false, 'The "actual" argument in expect(actual).toNotMatch() must be a string or an object');
	      }
	
	      (0, _assert2.default)(!matches, message || 'Expected %s to not match %s', this.actual, pattern);
	
	      return this;
	    }
	  }, {
	    key: 'toBeLessThan',
	    value: function toBeLessThan(value, message) {
	      (0, _assert2.default)(typeof this.actual === 'number', 'The "actual" argument in expect(actual).toBeLessThan() must be a number');
	
	      (0, _assert2.default)(typeof value === 'number', 'The "value" argument in toBeLessThan(value) must be a number');
	
	      (0, _assert2.default)(this.actual < value, message || 'Expected %s to be less than %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toBeLessThanOrEqualTo',
	    value: function toBeLessThanOrEqualTo(value, message) {
	      (0, _assert2.default)(typeof this.actual === 'number', 'The "actual" argument in expect(actual).toBeLessThanOrEqualTo() must be a number');
	
	      (0, _assert2.default)(typeof value === 'number', 'The "value" argument in toBeLessThanOrEqualTo(value) must be a number');
	
	      (0, _assert2.default)(this.actual <= value, message || 'Expected %s to be less than or equal to %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toBeGreaterThan',
	    value: function toBeGreaterThan(value, message) {
	      (0, _assert2.default)(typeof this.actual === 'number', 'The "actual" argument in expect(actual).toBeGreaterThan() must be a number');
	
	      (0, _assert2.default)(typeof value === 'number', 'The "value" argument in toBeGreaterThan(value) must be a number');
	
	      (0, _assert2.default)(this.actual > value, message || 'Expected %s to be greater than %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toBeGreaterThanOrEqualTo',
	    value: function toBeGreaterThanOrEqualTo(value, message) {
	      (0, _assert2.default)(typeof this.actual === 'number', 'The "actual" argument in expect(actual).toBeGreaterThanOrEqualTo() must be a number');
	
	      (0, _assert2.default)(typeof value === 'number', 'The "value" argument in toBeGreaterThanOrEqualTo(value) must be a number');
	
	      (0, _assert2.default)(this.actual >= value, message || 'Expected %s to be greater than or equal to %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toInclude',
	    value: function toInclude(value, compareValues, message) {
	      if (typeof compareValues === 'string') {
	        message = compareValues;
	        compareValues = null;
	      }
	
	      if (compareValues == null) compareValues = _TestUtils.isEqual;
	
	      var contains = false;
	
	      if ((0, _TestUtils.isArray)(this.actual)) {
	        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);
	      } else if ((0, _TestUtils.isObject)(this.actual)) {
	        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);
	      } else if (typeof this.actual === 'string') {
	        contains = (0, _TestUtils.stringContains)(this.actual, value);
	      } else {
	        (0, _assert2.default)(false, 'The "actual" argument in expect(actual).toInclude() must be an array, object, or a string');
	      }
	
	      (0, _assert2.default)(contains, message || 'Expected %s to include %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toExclude',
	    value: function toExclude(value, compareValues, message) {
	      if (typeof compareValues === 'string') {
	        message = compareValues;
	        compareValues = null;
	      }
	
	      if (compareValues == null) compareValues = _TestUtils.isEqual;
	
	      var contains = false;
	
	      if ((0, _TestUtils.isArray)(this.actual)) {
	        contains = (0, _TestUtils.arrayContains)(this.actual, value, compareValues);
	      } else if ((0, _TestUtils.isObject)(this.actual)) {
	        contains = (0, _TestUtils.objectContains)(this.actual, value, compareValues);
	      } else if (typeof this.actual === 'string') {
	        contains = (0, _TestUtils.stringContains)(this.actual, value);
	      } else {
	        (0, _assert2.default)(false, 'The "actual" argument in expect(actual).toExclude() must be an array, object, or a string');
	      }
	
	      (0, _assert2.default)(!contains, message || 'Expected %s to exclude %s', this.actual, value);
	
	      return this;
	    }
	  }, {
	    key: 'toIncludeKeys',
	    value: function toIncludeKeys(keys, comparator, message) {
	      var _this = this;
	
	      if (typeof comparator === 'string') {
	        message = comparator;
	        comparator = null;
	      }
	
	      if (comparator == null) comparator = _has2.default;
	
	      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The "actual" argument in expect(actual).toIncludeKeys() must be an object, not %s', this.actual);
	
	      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The "keys" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);
	
	      var contains = keys.every(function (key) {
	        return comparator(_this.actual, key);
	      });
	
	      (0, _assert2.default)(contains, message || 'Expected %s to include key(s) %s', this.actual, keys.join(', '));
	
	      return this;
	    }
	  }, {
	    key: 'toIncludeKey',
	    value: function toIncludeKey(key) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return this.toIncludeKeys.apply(this, [[key]].concat(args));
	    }
	  }, {
	    key: 'toExcludeKeys',
	    value: function toExcludeKeys(keys, comparator, message) {
	      var _this2 = this;
	
	      if (typeof comparator === 'string') {
	        message = comparator;
	        comparator = null;
	      }
	
	      if (comparator == null) comparator = _has2.default;
	
	      (0, _assert2.default)(_typeof(this.actual) === 'object', 'The "actual" argument in expect(actual).toExcludeKeys() must be an object, not %s', this.actual);
	
	      (0, _assert2.default)((0, _TestUtils.isArray)(keys), 'The "keys" argument in expect(actual).toIncludeKeys(keys) must be an array, not %s', keys);
	
	      var contains = keys.every(function (key) {
	        return comparator(_this2.actual, key);
	      });
	
	      (0, _assert2.default)(!contains, message || 'Expected %s to exclude key(s) %s', this.actual, keys.join(', '));
	
	      return this;
	    }
	  }, {
	    key: 'toExcludeKey',
	    value: function toExcludeKey(key) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }
	
	      return this.toExcludeKeys.apply(this, [[key]].concat(args));
	    }
	  }, {
	    key: 'toHaveBeenCalled',
	    value: function toHaveBeenCalled(message) {
	      var spy = this.actual;
	
	      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The "actual" argument in expect(actual).toHaveBeenCalled() must be a spy');
	
	      (0, _assert2.default)(spy.calls.length > 0, message || 'spy was not called');
	
	      return this;
	    }
	  }, {
	    key: 'toHaveBeenCalledWith',
	    value: function toHaveBeenCalledWith() {
	      for (var _len3 = arguments.length, expectedArgs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        expectedArgs[_key3] = arguments[_key3];
	      }
	
	      var spy = this.actual;
	
	      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The "actual" argument in expect(actual).toHaveBeenCalledWith() must be a spy');
	
	      (0, _assert2.default)(spy.calls.some(function (call) {
	        return (0, _TestUtils.isEqual)(call.arguments, expectedArgs);
	      }), 'spy was never called with %s', expectedArgs);
	
	      return this;
	    }
	  }, {
	    key: 'toNotHaveBeenCalled',
	    value: function toNotHaveBeenCalled(message) {
	      var spy = this.actual;
	
	      (0, _assert2.default)((0, _SpyUtils.isSpy)(spy), 'The "actual" argument in expect(actual).toNotHaveBeenCalled() must be a spy');
	
	      (0, _assert2.default)(spy.calls.length === 0, message || 'spy was not supposed to be called');
	
	      return this;
	    }
	  }]);
	
	  return Expectation;
	}();
	
	var deprecate = function deprecate(fn, message) {
	  var alreadyWarned = false;
	
	  return function () {
	    if (!alreadyWarned) {
	      alreadyWarned = true;
	      console.warn(message);
	    }
	
	    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	      args[_key4] = arguments[_key4];
	    }
	
	    return fn.apply(this, args);
	  };
	};
	
	Expectation.prototype.withContext = deprecate(function (context) {
	  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The "actual" argument in expect(actual).withContext() must be a function');
	
	  this.context = context;
	
	  return this;
	}, '\nwithContext is deprecated; use a closure instead.\n\n  expect(fn).withContext(context).toThrow()\n\nbecomes\n\n  expect(() => fn.call(context)).toThrow()\n');
	
	Expectation.prototype.withArgs = deprecate(function () {
	  var _args;
	
	  (0, _assert2.default)((0, _TestUtils.isFunction)(this.actual), 'The "actual" argument in expect(actual).withArgs() must be a function');
	
	  if (arguments.length) this.args = (_args = this.args).concat.apply(_args, arguments);
	
	  return this;
	}, '\nwithArgs is deprecated; use a closure instead.\n\n  expect(fn).withArgs(a, b, c).toThrow()\n\nbecomes\n\n  expect(() => fn(a, b, c)).toThrow()\n');
	
	var aliases = {
	  toBeAn: 'toBeA',
	  toNotBeAn: 'toNotBeA',
	  toBeTruthy: 'toExist',
	  toBeFalsy: 'toNotExist',
	  toBeFewerThan: 'toBeLessThan',
	  toBeMoreThan: 'toBeGreaterThan',
	  toContain: 'toInclude',
	  toNotContain: 'toExclude',
	  toNotInclude: 'toExclude',
	  toContainKeys: 'toIncludeKeys',
	  toNotContainKeys: 'toExcludeKeys',
	  toNotIncludeKeys: 'toExcludeKeys',
	  toContainKey: 'toIncludeKey',
	  toNotContainKey: 'toExcludeKey',
	  toNotIncludeKey: 'toExcludeKey'
	};
	
	for (var alias in aliases) {
	  if (aliases.hasOwnProperty(alias)) Expectation.prototype[alias] = Expectation.prototype[aliases[alias]];
	}exports.default = Expectation;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var bind = __webpack_require__(5);
	
	module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var implementation = __webpack_require__(6);
	
	module.exports = Function.prototype.bind || implementation;

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
	var slice = Array.prototype.slice;
	var toStr = Object.prototype.toString;
	var funcType = '[object Function]';
	
	module.exports = function bind(that) {
	    var target = this;
	    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
	        throw new TypeError(ERROR_MESSAGE + target);
	    }
	    var args = slice.call(arguments, 1);
	
	    var bound;
	    var binder = function binder() {
	        if (this instanceof bound) {
	            var result = target.apply(this, args.concat(slice.call(arguments)));
	            if (Object(result) === result) {
	                return result;
	            }
	            return this;
	        } else {
	            return target.apply(that, args.concat(slice.call(arguments)));
	        }
	    };
	
	    var boundLength = Math.max(0, target.length - args.length);
	    var boundArgs = [];
	    for (var i = 0; i < boundLength; i++) {
	        boundArgs.push('$' + i);
	    }
	
	    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
	
	    if (target.prototype) {
	        var Empty = function Empty() {};
	        Empty.prototype = target.prototype;
	        bound.prototype = new Empty();
	        Empty.prototype = null;
	    }
	
	    return bound;
	};

/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	function isArguments(obj) {
	  return Object.prototype.toString.call(obj) === '[object Arguments]';
	}
	
	module.exports = match;
	
	function match(obj, pattern) {
	  return match_(obj, pattern, [], []);
	}
	
	/* istanbul ignore next */
	var log = /\btmatch\b/.test(process.env.NODE_DEBUG || '') ? console.error : function () {};
	
	function match_(obj, pattern, ca, cb) {
	  log('TMATCH', typeof obj === 'undefined' ? 'undefined' : _typeof(obj), pattern);
	  if (obj == pattern) {
	    log('TMATCH same object or simple value, or problem');
	    // if one is object, and the other isn't, then this is bogus
	    if (obj === null || pattern === null) {
	      return true;
	    } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'object') {
	      return true;
	    } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {
	      return false;
	    } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'object') {
	      return false;
	    } else {
	      return true;
	    }
	  } else if (obj === null || pattern === null) {
	    log('TMATCH null test, already failed ==');
	    return false;
	  } else if (typeof obj === 'string' && pattern instanceof RegExp) {
	    log('TMATCH string~=regexp test');
	    return pattern.test(obj);
	  } else if (typeof obj === 'string' && typeof pattern === 'string' && pattern) {
	    log('TMATCH string~=string test');
	    return obj.indexOf(pattern) !== -1;
	  } else if (obj instanceof Date && pattern instanceof Date) {
	    log('TMATCH date test');
	    return obj.getTime() === pattern.getTime();
	  } else if (obj instanceof Date && typeof pattern === 'string') {
	    log('TMATCH date~=string test');
	    return obj.getTime() === new Date(pattern).getTime();
	  } else if (isArguments(obj) || isArguments(pattern)) {
	    log('TMATCH arguments test');
	    var slice = Array.prototype.slice;
	    return match_(slice.call(obj), slice.call(pattern), ca, cb);
	  } else if (pattern === Buffer) {
	    log('TMATCH Buffer ctor');
	    return Buffer.isBuffer(obj);
	  } else if (pattern === Function) {
	    log('TMATCH Function ctor');
	    return typeof obj === 'function';
	  } else if (pattern === Number) {
	    log('TMATCH Number ctor (finite, not NaN)');
	    return typeof obj === 'number' && obj === obj && isFinite(obj);
	  } else if (pattern !== pattern) {
	    log('TMATCH NaN');
	    return obj !== obj;
	  } else if (pattern === String) {
	    log('TMATCH String ctor');
	    return typeof obj === 'string';
	  } else if (pattern === Boolean) {
	    log('TMATCH Boolean ctor');
	    return typeof obj === 'boolean';
	  } else if (pattern === Array) {
	    log('TMATCH Array ctor', pattern, Array.isArray(obj));
	    return Array.isArray(obj);
	  } else if (typeof pattern === 'function' && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    log('TMATCH object~=function');
	    return obj instanceof pattern;
	  } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {
	    log('TMATCH obj is not object, pattern is not object, false');
	    return false;
	  } else if (obj instanceof RegExp && pattern instanceof RegExp) {
	    log('TMATCH regexp~=regexp test');
	    return obj.source === pattern.source && obj.global === pattern.global && obj.multiline === pattern.multiline && obj.lastIndex === pattern.lastIndex && obj.ignoreCase === pattern.ignoreCase;
	  } else if (Buffer.isBuffer(obj) && Buffer.isBuffer(pattern)) {
	    log('TMATCH buffer test');
	    if (obj.equals) {
	      return obj.equals(pattern);
	    } else {
	      if (obj.length !== pattern.length) return false;
	
	      for (var j = 0; j < obj.length; j++) {
	        if (obj[j] != pattern[j]) return false;
	      }return true;
	    }
	  } else {
	    // both are objects.  interesting case!
	    log('TMATCH object~=object test');
	    var kobj = Object.keys(obj);
	    var kpat = Object.keys(pattern);
	    log('  TMATCH patternkeys=%j objkeys=%j', kpat, kobj);
	
	    // don't bother with stack acrobatics if there's nothing there
	    if (kobj.length === 0 && kpat.length === 0) return true;
	
	    // if we've seen this exact pattern and object already, then
	    // it means that pattern and obj have matching cyclicalness
	    // however, non-cyclical patterns can match cyclical objects
	    log('  TMATCH check seen objects...');
	    var cal = ca.length;
	    while (cal--) {
	      if (ca[cal] === obj && cb[cal] === pattern) return true;
	    }ca.push(obj);cb.push(pattern);
	    log('  TMATCH not seen previously');
	
	    var key;
	    for (var l = kpat.length - 1; l >= 0; l--) {
	      key = kpat[l];
	      log('  TMATCH test obj[%j]', key, obj[key], pattern[key]);
	      if (!match_(obj[key], pattern[key], ca, cb)) return false;
	    }
	
	    ca.pop();
	    cb.pop();
	
	    log('  TMATCH object pass');
	    return true;
	  }
	
	  /* istanbul ignore next */
	  throw new Error('impossible to reach this point');
	}

/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var regexExec = RegExp.prototype.exec;
	var tryRegexExec = function tryRegexExec(value) {
		try {
			regexExec.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	var toStr = Object.prototype.toString;
	var regexClass = '[object RegExp]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isRegex(value) {
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
			return false;
		}
		return hasToStringTag ? tryRegexExec(value) : toStr.call(value) === regexClass;
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectInspect = __webpack_require__(10);
	
	var _objectInspect2 = _interopRequireDefault(_objectInspect);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	var formatString = function formatString(string, args) {
	  var index = 0;
	  return string.replace(/%s/g, function () {
	    return (0, _objectInspect2.default)(args[index++]);
	  });
	};
	
	var assert = function assert(condition, createMessage) {
	  for (var _len = arguments.length, extraArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    extraArgs[_key - 2] = arguments[_key];
	  }
	
	  if (condition) return;
	
	  var message = typeof createMessage === 'string' ? formatString(createMessage, extraArgs) : createMessage(extraArgs);
	
	  throw new Error(message);
	};
	
	exports.default = assert;

/***/ },
/* 10 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var hasMap = typeof Map === 'function' && Map.prototype;
	var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
	var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
	var mapForEach = hasMap && Map.prototype.forEach;
	var hasSet = typeof Set === 'function' && Set.prototype;
	var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
	var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
	var setForEach = hasSet && Set.prototype.forEach;
	var booleanValueOf = Boolean.prototype.valueOf;
	
	module.exports = function inspect_(obj, opts, depth, seen) {
	    if (!opts) opts = {};
	
	    var maxDepth = opts.depth === undefined ? 5 : opts.depth;
	    if (depth === undefined) depth = 0;
	    if (depth >= maxDepth && maxDepth > 0 && obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	        return '[Object]';
	    }
	
	    if (seen === undefined) seen = [];else if (indexOf(seen, obj) >= 0) {
	        return '[Circular]';
	    }
	
	    function inspect(value, from) {
	        if (from) {
	            seen = seen.slice();
	            seen.push(from);
	        }
	        return inspect_(value, opts, depth + 1, seen);
	    }
	
	    if (typeof obj === 'string') {
	        return inspectString(obj);
	    } else if (typeof obj === 'function') {
	        var name = nameOf(obj);
	        return '[Function' + (name ? ': ' + name : '') + ']';
	    } else if (obj === null) {
	        return 'null';
	    } else if (isSymbol(obj)) {
	        var symString = Symbol.prototype.toString.call(obj);
	        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' ? 'Object(' + symString + ')' : symString;
	    } else if (isElement(obj)) {
	        var s = '<' + String(obj.nodeName).toLowerCase();
	        var attrs = obj.attributes || [];
	        for (var i = 0; i < attrs.length; i++) {
	            s += ' ' + attrs[i].name + '="' + quote(attrs[i].value) + '"';
	        }
	        s += '>';
	        if (obj.childNodes && obj.childNodes.length) s += '...';
	        s += '</' + String(obj.nodeName).toLowerCase() + '>';
	        return s;
	    } else if (isArray(obj)) {
	        if (obj.length === 0) return '[]';
	        var xs = Array(obj.length);
	        for (var i = 0; i < obj.length; i++) {
	            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
	        }
	        return '[ ' + xs.join(', ') + ' ]';
	    } else if (isError(obj)) {
	        var parts = [];
	        for (var key in obj) {
	            if (!has(obj, key)) continue;
	
	            if (/[^\w$]/.test(key)) {
	                parts.push(inspect(key) + ': ' + inspect(obj[key]));
	            } else {
	                parts.push(key + ': ' + inspect(obj[key]));
	            }
	        }
	        if (parts.length === 0) return '[' + obj + ']';
	        return '{ [' + obj + '] ' + parts.join(', ') + ' }';
	    } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.inspect === 'function') {
	        return obj.inspect();
	    } else if (isMap(obj)) {
	        var parts = [];
	        mapForEach.call(obj, function (value, key) {
	            parts.push(inspect(key, obj) + ' => ' + inspect(value, obj));
	        });
	        return 'Map (' + mapSize.call(obj) + ') {' + parts.join(', ') + '}';
	    } else if (isSet(obj)) {
	        var parts = [];
	        setForEach.call(obj, function (value) {
	            parts.push(inspect(value, obj));
	        });
	        return 'Set (' + setSize.call(obj) + ') {' + parts.join(', ') + '}';
	    } else if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
	        return String(obj);
	    } else if (isNumber(obj)) {
	        return 'Object(' + Number(obj) + ')';
	    } else if (isBoolean(obj)) {
	        return 'Object(' + booleanValueOf.call(obj) + ')';
	    } else if (isString(obj)) {
	        return 'Object(' + inspect(String(obj)) + ')';
	    } else if (!isDate(obj) && !isRegExp(obj)) {
	        var xs = [],
	            keys = [];
	        for (var key in obj) {
	            if (has(obj, key)) keys.push(key);
	        }
	        keys.sort();
	        for (var i = 0; i < keys.length; i++) {
	            var key = keys[i];
	            if (/[^\w$]/.test(key)) {
	                xs.push(inspect(key) + ': ' + inspect(obj[key], obj));
	            } else xs.push(key + ': ' + inspect(obj[key], obj));
	        }
	        if (xs.length === 0) return '{}';
	        return '{ ' + xs.join(', ') + ' }';
	    } else return String(obj);
	};
	
	function quote(s) {
	    return String(s).replace(/"/g, '&quot;');
	}
	
	function isArray(obj) {
	    return toStr(obj) === '[object Array]';
	}
	function isDate(obj) {
	    return toStr(obj) === '[object Date]';
	}
	function isRegExp(obj) {
	    return toStr(obj) === '[object RegExp]';
	}
	function isError(obj) {
	    return toStr(obj) === '[object Error]';
	}
	function isSymbol(obj) {
	    return toStr(obj) === '[object Symbol]';
	}
	function isString(obj) {
	    return toStr(obj) === '[object String]';
	}
	function isNumber(obj) {
	    return toStr(obj) === '[object Number]';
	}
	function isBoolean(obj) {
	    return toStr(obj) === '[object Boolean]';
	}
	
	var hasOwn = Object.prototype.hasOwnProperty || function (key) {
	    return key in this;
	};
	function has(obj, key) {
	    return hasOwn.call(obj, key);
	}
	
	function toStr(obj) {
	    return Object.prototype.toString.call(obj);
	}
	
	function nameOf(f) {
	    if (f.name) return f.name;
	    var m = f.toString().match(/^function\s*([\w$]+)/);
	    if (m) return m[1];
	}
	
	function indexOf(xs, x) {
	    if (xs.indexOf) return xs.indexOf(x);
	    for (var i = 0, l = xs.length; i < l; i++) {
	        if (xs[i] === x) return i;
	    }
	    return -1;
	}
	
	function isMap(x) {
	    if (!mapSize) {
	        return false;
	    }
	    try {
	        mapSize.call(x);
	        return true;
	    } catch (e) {}
	    return false;
	}
	
	function isSet(x) {
	    if (!setSize) {
	        return false;
	    }
	    try {
	        setSize.call(x);
	        return true;
	    } catch (e) {}
	    return false;
	}
	
	function isElement(x) {
	    if (!x || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object') return false;
	    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
	        return true;
	    }
	    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
	}
	
	function inspectString(str) {
	    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
	    return "'" + s + "'";
	
	    function lowbyte(c) {
	        var n = c.charCodeAt(0);
	        var x = { 8: 'b', 9: 't', 10: 'n', 12: 'f', 13: 'r' }[n];
	        if (x) return '\\' + x;
	        return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16);
	    }
	}

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.spyOn = exports.createSpy = exports.restoreSpies = exports.isSpy = undefined;
	
	var _defineProperties = __webpack_require__(12);
	
	var _assert = __webpack_require__(9);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _TestUtils = __webpack_require__(16);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	} /* eslint-disable prefer-rest-params */
	
	var noop = function noop() {};
	
	var supportsConfigurableFnLength = _defineProperties.supportsDescriptors && Object.getOwnPropertyDescriptor(function () {}, 'length').configurable;
	
	var isSpy = exports.isSpy = function isSpy(object) {
	  return object && object.__isSpy === true;
	};
	
	var spies = [];
	
	var restoreSpies = exports.restoreSpies = function restoreSpies() {
	  for (var i = spies.length - 1; i >= 0; i--) {
	    spies[i].restore();
	  }spies = [];
	};
	
	var createSpy = exports.createSpy = function createSpy(fn) {
	  var restore = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];
	
	  if (fn == null) fn = noop;
	
	  (0, _assert2.default)((0, _TestUtils.isFunction)(fn), 'createSpy needs a function');
	
	  var targetFn = void 0,
	      thrownValue = void 0,
	      returnValue = void 0,
	      spy = void 0;
	
	  function spyLogic() {
	    spy.calls.push({
	      context: this,
	      arguments: Array.prototype.slice.call(arguments, 0)
	    });
	
	    if (targetFn) return targetFn.apply(this, arguments);
	
	    if (thrownValue) throw thrownValue;
	
	    return returnValue;
	  }
	
	  if (supportsConfigurableFnLength) {
	    spy = Object.defineProperty(spyLogic, 'length', { value: fn.length, writable: false, enumerable: false, configurable: true });
	  } else {
	    spy = new Function('spy', 'return function(' + // eslint-disable-line no-new-func
	    [].concat(_toConsumableArray(Array(fn.length))).map(function (_, i) {
	      return '_' + i;
	    }).join(',') + ') {\n      return spy.apply(this, arguments)\n    }')(spyLogic);
	  }
	
	  spy.calls = [];
	
	  spy.andCall = function (otherFn) {
	    targetFn = otherFn;
	    return spy;
	  };
	
	  spy.andCallThrough = function () {
	    return spy.andCall(fn);
	  };
	
	  spy.andThrow = function (value) {
	    thrownValue = value;
	    return spy;
	  };
	
	  spy.andReturn = function (value) {
	    returnValue = value;
	    return spy;
	  };
	
	  spy.getLastCall = function () {
	    return spy.calls[spy.calls.length - 1];
	  };
	
	  spy.reset = function () {
	    spy.calls = [];
	  };
	
	  spy.restore = spy.destroy = restore;
	
	  spy.__isSpy = true;
	
	  spies.push(spy);
	
	  return spy;
	};
	
	var spyOn = exports.spyOn = function spyOn(object, methodName) {
	  var original = object[methodName];
	
	  if (!isSpy(original)) {
	    (0, _assert2.default)((0, _TestUtils.isFunction)(original), 'Cannot spyOn the %s property; it is not a function', methodName);
	
	    object[methodName] = createSpy(original, function () {
	      object[methodName] = original;
	    });
	  }
	
	  return object[methodName];
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var keys = __webpack_require__(13);
	var foreach = __webpack_require__(15);
	var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';
	
	var toStr = Object.prototype.toString;
	
	var isFunction = function isFunction(fn) {
		return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
	};
	
	var arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {
		var obj = {};
		try {
			Object.defineProperty(obj, 'x', { enumerable: false, value: obj });
			/* eslint-disable no-unused-vars, no-restricted-syntax */
			for (var _ in obj) {
				return false;
			}
			/* eslint-enable no-unused-vars, no-restricted-syntax */
			return obj.x === obj;
		} catch (e) {
			/* this is IE 8. */
			return false;
		}
	};
	var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();
	
	var defineProperty = function defineProperty(object, name, value, predicate) {
		if (name in object && (!isFunction(predicate) || !predicate())) {
			return;
		}
		if (supportsDescriptors) {
			Object.defineProperty(object, name, {
				configurable: true,
				enumerable: false,
				value: value,
				writable: true
			});
		} else {
			object[name] = value;
		}
	};
	
	var defineProperties = function defineProperties(object, map) {
		var predicates = arguments.length > 2 ? arguments[2] : {};
		var props = keys(map);
		if (hasSymbols) {
			props = props.concat(Object.getOwnPropertySymbols(map));
		}
		foreach(props, function (name) {
			defineProperty(object, name, map[name], predicates[name]);
		});
	};
	
	defineProperties.supportsDescriptors = !!supportsDescriptors;
	
	module.exports = defineProperties;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// modified from https://github.com/es-shims/es5-shim
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(14);
	var hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
	var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
	var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
	var equalsConstructorPrototype = function equalsConstructorPrototype(o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var blacklistedKeys = {
		$console: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$parent: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = function () {
		/* global window */
		if (typeof window === 'undefined') {
			return false;
		}
		for (var k in window) {
			try {
				if (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && _typeof(window[k]) === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}();
	var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};
	
	var keysShim = function keys(object) {
		var isObject = object !== null && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];
	
		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}
	
		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}
	
		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}
	
		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = function () {
				// Safari 5.0 bug
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2);
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) {
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' && value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';
	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;
	
	module.exports = function forEach(obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.stringContains = exports.objectContains = exports.arrayContains = exports.functionThrows = exports.isA = exports.isObject = exports.isArray = exports.isFunction = exports.isEqual = exports.whyNotEqual = undefined;
	
	var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof2(obj);
	};
	
	var _isRegex = __webpack_require__(8);
	
	var _isRegex2 = _interopRequireDefault(_isRegex);
	
	var _why = __webpack_require__(17);
	
	var _why2 = _interopRequireDefault(_why);
	
	var _objectKeys = __webpack_require__(28);
	
	var _objectKeys2 = _interopRequireDefault(_objectKeys);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	/**
	 * Returns the reason why the given arguments are not *conceptually*
	 * equal, if any; the empty string otherwise.
	 */
	var whyNotEqual = exports.whyNotEqual = function whyNotEqual(a, b) {
	  return a == b ? '' : (0, _why2.default)(a, b);
	};
	
	/**
	 * Returns true if the given arguments are *conceptually* equal.
	 */
	var isEqual = exports.isEqual = function isEqual(a, b) {
	  return whyNotEqual(a, b) === '';
	};
	
	/**
	 * Returns true if the given object is a function.
	 */
	var isFunction = exports.isFunction = function isFunction(object) {
	  return typeof object === 'function';
	};
	
	/**
	 * Returns true if the given object is an array.
	 */
	var isArray = exports.isArray = function isArray(object) {
	  return Array.isArray(object);
	};
	
	/**
	 * Returns true if the given object is an object.
	 */
	var isObject = exports.isObject = function isObject(object) {
	  return object && !isArray(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';
	};
	
	/**
	 * Returns true if the given object is an instanceof value
	 * or its typeof is the given value.
	 */
	var isA = exports.isA = function isA(object, value) {
	  if (isFunction(value)) return object instanceof value;
	
	  if (value === 'array') return Array.isArray(object);
	
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === value;
	};
	
	/**
	 * Returns true if the given function throws the given value
	 * when invoked. The value may be:
	 *
	 * - undefined, to merely assert there was a throw
	 * - a constructor function, for comparing using instanceof
	 * - a regular expression, to compare with the error message
	 * - a string, to find in the error message
	 */
	var functionThrows = exports.functionThrows = function functionThrows(fn, context, args, value) {
	  try {
	    fn.apply(context, args);
	  } catch (error) {
	    if (value == null) return true;
	
	    if (isFunction(value) && error instanceof value) return true;
	
	    var message = error.message || error;
	
	    if (typeof message === 'string') {
	      if ((0, _isRegex2.default)(value) && value.test(error.message)) return true;
	
	      if (typeof value === 'string' && message.indexOf(value) !== -1) return true;
	    }
	  }
	
	  return false;
	};
	
	/**
	 * Returns true if the given array contains the value, false
	 * otherwise. The compareValues function must return false to
	 * indicate a non-match.
	 */
	var arrayContains = exports.arrayContains = function arrayContains(array, value, compareValues) {
	  return array.some(function (item) {
	    return compareValues(item, value) !== false;
	  });
	};
	
	var ownEnumerableKeys = function ownEnumerableKeys(object) {
	  if ((typeof Reflect === 'undefined' ? 'undefined' : _typeof(Reflect)) === 'object' && typeof Reflect.ownKeys === 'function') {
	    return Reflect.ownKeys(object).filter(function (key) {
	      return Object.getOwnPropertyDescriptor(object, key).enumerable;
	    });
	  }
	
	  if (typeof Object.getOwnPropertySymbols === 'function') {
	    return Object.getOwnPropertySymbols(object).filter(function (key) {
	      return Object.getOwnPropertyDescriptor(object, key).enumerable;
	    }).concat((0, _objectKeys2.default)(object));
	  }
	
	  return (0, _objectKeys2.default)(object);
	};
	
	/**
	 * Returns true if the given object contains the value, false
	 * otherwise. The compareValues function must return false to
	 * indicate a non-match.
	 */
	var objectContains = exports.objectContains = function objectContains(object, value, compareValues) {
	  return ownEnumerableKeys(value).every(function (k) {
	    if (isObject(object[k]) && isObject(value[k])) return objectContains(object[k], value[k], compareValues);
	
	    return compareValues(object[k], value[k]);
	  });
	};
	
	/**
	 * Returns true if the given string contains the value, false otherwise.
	 */
	var stringContains = exports.stringContains = function stringContains(string, value) {
	  return string.indexOf(value) !== -1;
	};

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ObjectPrototype = Object.prototype;
	var toStr = ObjectPrototype.toString;
	var booleanValue = Boolean.prototype.valueOf;
	var has = __webpack_require__(4);
	var isArrowFunction = __webpack_require__(18);
	var isBoolean = __webpack_require__(20);
	var isDate = __webpack_require__(21);
	var isGenerator = __webpack_require__(22);
	var isNumber = __webpack_require__(23);
	var isRegex = __webpack_require__(8);
	var isString = __webpack_require__(24);
	var isSymbol = __webpack_require__(25);
	var isCallable = __webpack_require__(19);
	
	var isProto = Object.prototype.isPrototypeOf;
	
	var foo = function foo() {};
	var functionsHaveNames = foo.name === 'foo';
	
	var symbolValue = typeof Symbol === 'function' ? Symbol.prototype.valueOf : null;
	var symbolIterator = __webpack_require__(26)();
	
	var collectionsForEach = __webpack_require__(27)();
	
	var getPrototypeOf = Object.getPrototypeOf;
	if (!getPrototypeOf) {
		/* eslint-disable no-proto */
		if (_typeof('test'.__proto__) === 'object') {
			getPrototypeOf = function getPrototypeOf(obj) {
				return obj.__proto__;
			};
		} else {
			getPrototypeOf = function getPrototypeOf(obj) {
				var constructor = obj.constructor,
				    oldConstructor;
				if (has(obj, 'constructor')) {
					oldConstructor = constructor;
					if (! delete obj.constructor) {
						// reset constructor
						return null; // can't delete obj.constructor, return null
					}
					constructor = obj.constructor; // get real constructor
					obj.constructor = oldConstructor; // restore constructor
				}
				return constructor ? constructor.prototype : ObjectPrototype; // needed for IE
			};
		}
		/* eslint-enable no-proto */
	}
	
	var isArray = Array.isArray || function (value) {
		return toStr.call(value) === '[object Array]';
	};
	
	var normalizeFnWhitespace = function normalizeFnWhitespace(fnStr) {
		// this is needed in IE 9, at least, which has inconsistencies here.
		return fnStr.replace(/^function ?\(/, 'function (').replace('){', ') {');
	};
	
	var tryMapSetEntries = function tryMapSetEntries(collection) {
		var foundEntries = [];
		try {
			collectionsForEach.Map.call(collection, function (key, value) {
				foundEntries.push([key, value]);
			});
		} catch (notMap) {
			try {
				collectionsForEach.Set.call(collection, function (value) {
					foundEntries.push([value]);
				});
			} catch (notSet) {
				return false;
			}
		}
		return foundEntries;
	};
	
	module.exports = function whyNotEqual(value, other) {
		if (value === other) {
			return '';
		}
		if (value == null || other == null) {
			return value === other ? '' : String(value) + ' !== ' + String(other);
		}
	
		var valToStr = toStr.call(value);
		var otherToStr = toStr.call(other);
		if (valToStr !== otherToStr) {
			return 'toStringTag is not the same: ' + valToStr + ' !== ' + otherToStr;
		}
	
		var valIsBool = isBoolean(value);
		var otherIsBool = isBoolean(other);
		if (valIsBool || otherIsBool) {
			if (!valIsBool) {
				return 'first argument is not a boolean; second argument is';
			}
			if (!otherIsBool) {
				return 'second argument is not a boolean; first argument is';
			}
			var valBoolVal = booleanValue.call(value);
			var otherBoolVal = booleanValue.call(other);
			if (valBoolVal === otherBoolVal) {
				return '';
			}
			return 'primitive value of boolean arguments do not match: ' + valBoolVal + ' !== ' + otherBoolVal;
		}
	
		var valIsNumber = isNumber(value);
		var otherIsNumber = isNumber(value);
		if (valIsNumber || otherIsNumber) {
			if (!valIsNumber) {
				return 'first argument is not a number; second argument is';
			}
			if (!otherIsNumber) {
				return 'second argument is not a number; first argument is';
			}
			var valNum = Number(value);
			var otherNum = Number(other);
			if (valNum === otherNum) {
				return '';
			}
			var valIsNaN = isNaN(value);
			var otherIsNaN = isNaN(other);
			if (valIsNaN && !otherIsNaN) {
				return 'first argument is NaN; second is not';
			} else if (!valIsNaN && otherIsNaN) {
				return 'second argument is NaN; first is not';
			} else if (valIsNaN && otherIsNaN) {
				return '';
			}
			return 'numbers are different: ' + value + ' !== ' + other;
		}
	
		var valIsString = isString(value);
		var otherIsString = isString(other);
		if (valIsString || otherIsString) {
			if (!valIsString) {
				return 'second argument is string; first is not';
			}
			if (!otherIsString) {
				return 'first argument is string; second is not';
			}
			var stringVal = String(value);
			var otherVal = String(other);
			if (stringVal === otherVal) {
				return '';
			}
			return 'string values are different: "' + stringVal + '" !== "' + otherVal + '"';
		}
	
		var valIsDate = isDate(value);
		var otherIsDate = isDate(other);
		if (valIsDate || otherIsDate) {
			if (!valIsDate) {
				return 'second argument is Date, first is not';
			}
			if (!otherIsDate) {
				return 'first argument is Date, second is not';
			}
			var valTime = +value;
			var otherTime = +other;
			if (valTime === otherTime) {
				return '';
			}
			return 'Dates have different time values: ' + valTime + ' !== ' + otherTime;
		}
	
		var valIsRegex = isRegex(value);
		var otherIsRegex = isRegex(other);
		if (valIsRegex || otherIsRegex) {
			if (!valIsRegex) {
				return 'second argument is RegExp, first is not';
			}
			if (!otherIsRegex) {
				return 'first argument is RegExp, second is not';
			}
			var regexStringVal = String(value);
			var regexStringOther = String(other);
			if (regexStringVal === regexStringOther) {
				return '';
			}
			return 'regular expressions differ: ' + regexStringVal + ' !== ' + regexStringOther;
		}
	
		var valIsArray = isArray(value);
		var otherIsArray = isArray(other);
		if (valIsArray || otherIsArray) {
			if (!valIsArray) {
				return 'second argument is an Array, first is not';
			}
			if (!otherIsArray) {
				return 'first argument is an Array, second is not';
			}
			if (value.length !== other.length) {
				return 'arrays have different length: ' + value.length + ' !== ' + other.length;
			}
			if (String(value) !== String(other)) {
				return 'stringified Arrays differ';
			}
	
			var index = value.length - 1;
			var equal = '';
			var valHasIndex, otherHasIndex;
			while (equal === '' && index >= 0) {
				valHasIndex = has(value, index);
				otherHasIndex = has(other, index);
				if (!valHasIndex && otherHasIndex) {
					return 'second argument has index ' + index + '; first does not';
				}
				if (valHasIndex && !otherHasIndex) {
					return 'first argument has index ' + index + '; second does not';
				}
				equal = whyNotEqual(value[index], other[index]);
				index -= 1;
			}
			return equal;
		}
	
		var valueIsSym = isSymbol(value);
		var otherIsSym = isSymbol(other);
		if (valueIsSym !== otherIsSym) {
			if (valueIsSym) {
				return 'first argument is Symbol; second is not';
			}
			return 'second argument is Symbol; first is not';
		}
		if (valueIsSym && otherIsSym) {
			return symbolValue.call(value) === symbolValue.call(other) ? '' : 'first Symbol value !== second Symbol value';
		}
	
		var valueIsGen = isGenerator(value);
		var otherIsGen = isGenerator(other);
		if (valueIsGen !== otherIsGen) {
			if (valueIsGen) {
				return 'first argument is a Generator; second is not';
			}
			return 'second argument is a Generator; first is not';
		}
	
		var valueIsArrow = isArrowFunction(value);
		var otherIsArrow = isArrowFunction(other);
		if (valueIsArrow !== otherIsArrow) {
			if (valueIsArrow) {
				return 'first argument is an Arrow function; second is not';
			}
			return 'second argument is an Arrow function; first is not';
		}
	
		if (isCallable(value) || isCallable(other)) {
			if (functionsHaveNames && whyNotEqual(value.name, other.name) !== '') {
				return 'Function names differ: "' + value.name + '" !== "' + other.name + '"';
			}
			if (whyNotEqual(value.length, other.length) !== '') {
				return 'Function lengths differ: ' + value.length + ' !== ' + other.length;
			}
	
			var valueStr = normalizeFnWhitespace(String(value));
			var otherStr = normalizeFnWhitespace(String(other));
			if (whyNotEqual(valueStr, otherStr) === '') {
				return '';
			}
	
			if (!valueIsGen && !valueIsArrow) {
				return whyNotEqual(valueStr.replace(/\)\s*\{/, '){'), otherStr.replace(/\)\s*\{/, '){')) === '' ? '' : 'Function string representations differ';
			}
			return whyNotEqual(valueStr, otherStr) === '' ? '' : 'Function string representations differ';
		}
	
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || (typeof other === 'undefined' ? 'undefined' : _typeof(other)) === 'object') {
			if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== (typeof other === 'undefined' ? 'undefined' : _typeof(other))) {
				return 'arguments have a different typeof: ' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + ' !== ' + (typeof other === 'undefined' ? 'undefined' : _typeof(other));
			}
			if (isProto.call(value, other)) {
				return 'first argument is the [[Prototype]] of the second';
			}
			if (isProto.call(other, value)) {
				return 'second argument is the [[Prototype]] of the first';
			}
			if (getPrototypeOf(value) !== getPrototypeOf(other)) {
				return 'arguments have a different [[Prototype]]';
			}
	
			if (symbolIterator) {
				var valueIteratorFn = value[symbolIterator];
				var valueIsIterable = isCallable(valueIteratorFn);
				var otherIteratorFn = other[symbolIterator];
				var otherIsIterable = isCallable(otherIteratorFn);
				if (valueIsIterable !== otherIsIterable) {
					if (valueIsIterable) {
						return 'first argument is iterable; second is not';
					}
					return 'second argument is iterable; first is not';
				}
				if (valueIsIterable && otherIsIterable) {
					var valueIterator = valueIteratorFn.call(value);
					var otherIterator = otherIteratorFn.call(other);
					var valueNext, otherNext, nextWhy;
					do {
						valueNext = valueIterator.next();
						otherNext = otherIterator.next();
						if (!valueNext.done && !otherNext.done) {
							nextWhy = whyNotEqual(valueNext, otherNext);
							if (nextWhy !== '') {
								return 'iteration results are not equal: ' + nextWhy;
							}
						}
					} while (!valueNext.done && !otherNext.done);
					if (valueNext.done && !otherNext.done) {
						return 'first argument finished iterating before second';
					}
					if (!valueNext.done && otherNext.done) {
						return 'second argument finished iterating before first';
					}
					return '';
				}
			} else if (collectionsForEach.Map || collectionsForEach.Set) {
				var valueEntries = tryMapSetEntries(value);
				var otherEntries = tryMapSetEntries(other);
				var valueEntriesIsArray = isArray(valueEntries);
				var otherEntriesIsArray = isArray(otherEntries);
				if (valueEntriesIsArray && !otherEntriesIsArray) {
					return 'first argument has Collection entries, second does not';
				}
				if (!valueEntriesIsArray && otherEntriesIsArray) {
					return 'second argument has Collection entries, first does not';
				}
				if (valueEntriesIsArray && otherEntriesIsArray) {
					var entriesWhy = whyNotEqual(valueEntries, otherEntries);
					return entriesWhy === '' ? '' : 'Collection entries differ: ' + entriesWhy;
				}
			}
	
			var key, valueKeyIsRecursive, otherKeyIsRecursive, keyWhy;
			for (key in value) {
				if (has(value, key)) {
					if (!has(other, key)) {
						return 'first argument has key "' + key + '"; second does not';
					}
					valueKeyIsRecursive = !!value[key] && value[key][key] === value;
					otherKeyIsRecursive = !!other[key] && other[key][key] === other;
					if (valueKeyIsRecursive !== otherKeyIsRecursive) {
						if (valueKeyIsRecursive) {
							return 'first argument has a circular reference at key "' + key + '"; second does not';
						}
						return 'second argument has a circular reference at key "' + key + '"; first does not';
					}
					if (!valueKeyIsRecursive && !otherKeyIsRecursive) {
						keyWhy = whyNotEqual(value[key], other[key]);
						if (keyWhy !== '') {
							return 'value at key "' + key + '" differs: ' + keyWhy;
						}
					}
				}
			}
			for (key in other) {
				if (has(other, key) && !has(value, key)) {
					return 'second argument has key "' + key + '"; first does not';
				}
			}
			return '';
		}
	
		return false;
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isCallable = __webpack_require__(19);
	var fnToStr = Function.prototype.toString;
	var isNonArrowFnRegex = /^\s*function/;
	var isArrowFnWithParensRegex = /^\([^\)]*\) *=>/;
	var isArrowFnWithoutParensRegex = /^[^=]*=>/;
	
	module.exports = function isArrowFunction(fn) {
		if (!isCallable(fn)) {
			return false;
		}
		var fnStr = fnToStr.call(fn);
		return fnStr.length > 0 && !isNonArrowFnRegex.test(fnStr) && (isArrowFnWithParensRegex.test(fnStr) || isArrowFnWithoutParensRegex.test(fnStr));
	};

/***/ },
/* 19 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var fnToStr = Function.prototype.toString;
	
	var constructorRegex = /^\s*class /;
	var isES6ClassFn = function isES6ClassFn(value) {
		try {
			var fnStr = fnToStr.call(value);
			var singleStripped = fnStr.replace(/\/\/.*\n/g, '');
			var multiStripped = singleStripped.replace(/\/\*[.\s\S]*\*\//g, '');
			var spaceStripped = multiStripped.replace(/\n/mg, ' ').replace(/ {2}/g, ' ');
			return constructorRegex.test(spaceStripped);
		} catch (e) {
			return false; // not a function
		}
	};
	
	var tryFunctionObject = function tryFunctionObject(value) {
		try {
			if (isES6ClassFn(value)) {
				return false;
			}
			fnToStr.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	var toStr = Object.prototype.toString;
	var fnClass = '[object Function]';
	var genClass = '[object GeneratorFunction]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isCallable(value) {
		if (!value) {
			return false;
		}
		if (typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
			return false;
		}
		if (hasToStringTag) {
			return tryFunctionObject(value);
		}
		if (isES6ClassFn(value)) {
			return false;
		}
		var strClass = toStr.call(value);
		return strClass === fnClass || strClass === genClass;
	};

/***/ },
/* 20 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var boolToStr = Boolean.prototype.toString;
	
	var tryBooleanObject = function tryBooleanObject(value) {
		try {
			boolToStr.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	var toStr = Object.prototype.toString;
	var boolClass = '[object Boolean]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isBoolean(value) {
		if (typeof value === 'boolean') {
			return true;
		}
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
			return false;
		}
		return hasToStringTag ? tryBooleanObject(value) : toStr.call(value) === boolClass;
	};

/***/ },
/* 21 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var getDay = Date.prototype.getDay;
	var tryDateObject = function tryDateObject(value) {
		try {
			getDay.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	
	var toStr = Object.prototype.toString;
	var dateClass = '[object Date]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isDateObject(value) {
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {
			return false;
		}
		return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
	};

/***/ },
/* 22 */
/***/ function(module, exports) {

	'use strict';
	
	var toStr = Object.prototype.toString;
	var fnToStr = Function.prototype.toString;
	var isFnRegex = /^\s*function\*/;
	
	module.exports = function isGeneratorFunction(fn) {
		if (typeof fn !== 'function') {
			return false;
		}
		var fnStr = toStr.call(fn);
		return (fnStr === '[object Function]' || fnStr === '[object GeneratorFunction]') && isFnRegex.test(fnToStr.call(fn));
	};

/***/ },
/* 23 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var numToStr = Number.prototype.toString;
	var tryNumberObject = function tryNumberObject(value) {
		try {
			numToStr.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	var toStr = Object.prototype.toString;
	var numClass = '[object Number]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isNumberObject(value) {
		if (typeof value === 'number') {
			return true;
		}
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
			return false;
		}
		return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;
	};

/***/ },
/* 24 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var strValue = String.prototype.valueOf;
	var tryStringObject = function tryStringObject(value) {
		try {
			strValue.call(value);
			return true;
		} catch (e) {
			return false;
		}
	};
	var toStr = Object.prototype.toString;
	var strClass = '[object String]';
	var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
	
	module.exports = function isString(value) {
		if (typeof value === 'string') {
			return true;
		}
		if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
			return false;
		}
		return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
	};

/***/ },
/* 25 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var toStr = Object.prototype.toString;
	var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';
	
	if (hasSymbols) {
		var symToStr = Symbol.prototype.toString;
		var symStringRegex = /^Symbol\(.*\)$/;
		var isSymbolObject = function isSymbolObject(value) {
			if (_typeof(value.valueOf()) !== 'symbol') {
				return false;
			}
			return symStringRegex.test(symToStr.call(value));
		};
		module.exports = function isSymbol(value) {
			if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol') {
				return true;
			}
			if (toStr.call(value) !== '[object Symbol]') {
				return false;
			}
			try {
				return isSymbolObject(value);
			} catch (e) {
				return false;
			}
		};
	} else {
		module.exports = function isSymbol(value) {
			// this environment does not support Symbols.
			return false;
		};
	}

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isSymbol = __webpack_require__(25);
	
	module.exports = function getSymbolIterator() {
		var symbolIterator = typeof Symbol === 'function' && isSymbol(Symbol.iterator) ? Symbol.iterator : null;
	
		if (typeof Object.getOwnPropertyNames === 'function' && typeof Map === 'function' && typeof Map.prototype.entries === 'function') {
			Object.getOwnPropertyNames(Map.prototype).forEach(function (name) {
				if (name !== 'entries' && name !== 'size' && Map.prototype[name] === Map.prototype.entries) {
					symbolIterator = name;
				}
			});
		}
	
		return symbolIterator;
	};

/***/ },
/* 27 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function () {
		var mapForEach = function () {
			if (typeof Map !== 'function') {
				return null;
			}
			try {
				Map.prototype.forEach.call({}, function () {});
			} catch (e) {
				return Map.prototype.forEach;
			}
			return null;
		}();
	
		var setForEach = function () {
			if (typeof Set !== 'function') {
				return null;
			}
			try {
				Set.prototype.forEach.call({}, function () {});
			} catch (e) {
				return Set.prototype.forEach;
			}
			return null;
		}();
	
		return { Map: mapForEach, Set: setForEach };
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// modified from https://github.com/es-shims/es5-shim
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(29);
	var hasDontEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
	var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
	var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
	var equalsConstructorPrototype = function equalsConstructorPrototype(o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var blacklistedKeys = {
		$console: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$parent: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = function () {
		/* global window */
		if (typeof window === 'undefined') {
			return false;
		}
		for (var k in window) {
			try {
				if (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && _typeof(window[k]) === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}();
	var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};
	
	var keysShim = function keys(object) {
		var isObject = object !== null && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];
	
		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}
	
		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}
	
		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}
	
		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = function () {
				// Safari 5.0 bug
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2);
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) {
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;

/***/ },
/* 29 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' && value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Expectation = __webpack_require__(3);
	
	var _Expectation2 = _interopRequireDefault(_Expectation);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	var Extensions = [];
	
	function extend(extension) {
	  if (Extensions.indexOf(extension) === -1) {
	    Extensions.push(extension);
	
	    for (var p in extension) {
	      if (extension.hasOwnProperty(p)) _Expectation2.default.prototype[p] = extension[p];
	    }
	  }
	}
	
	exports.default = extend;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.paymentTokenRequestFailed = exports.paymentTokenReceived = exports.requestPaymentToken = exports.unrecoverableError = exports.declinedCreditCard = exports.expiredCreditCard = exports.incorrectCreditCardSecurityCode = exports.incorrectCreditCardNumber = exports.invalidCreditCardSecurityCode = exports.invalidCreditCardExpirationYear = exports.invalidCreditCardExpirationMonth = exports.invalidCreditCardNumber = exports.hasAttemptedEmailValidation = exports.setEditingCreditCardSecurityCode = exports.setEditingCreditCardExpirationDate = exports.setEditingCreditCardNumber = exports.didFinishEditingCreditCardNumber = exports.didStartEditingCreditCardSecurityCode = exports.didStartEditingCreditCardExpirationDate = exports.didStartEditingCreditCardNumber = exports.setCreditCardSecurityCode = exports.setCreditCardExpirationDate = exports.setCreditCardNumber = exports.setEmail = exports.confirmContribution = exports.chooseContributionAmount = exports.jumpToPreviousPage = exports.jumpToPage = exports.recedePage = exports.advancePage = undefined;
	exports.fetchPaymentToken = fetchPaymentToken;
	
	var _isomorphicFetch = __webpack_require__(32);
	
	var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _StripeErrors = __webpack_require__(73);
	
	var _Pages = __webpack_require__(74);
	
	var views = _interopRequireWildcard(_Pages);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var advancePage = exports.advancePage = function advancePage() {
		return {
			type: types.ADVANCE_PAGE
		};
	};
	
	var recedePage = exports.recedePage = function recedePage() {
		return {
			type: types.RECEDE_PAGE
		};
	};
	
	var jumpToPage = exports.jumpToPage = function jumpToPage(page) {
		return {
			type: types.JUMP_TO_PAGE,
			page: page
		};
	};
	
	var jumpToPreviousPage = exports.jumpToPreviousPage = function jumpToPreviousPage(page) {
		return {
			type: types.JUMP_TO_PREVIOUS_PAGE
		};
	};
	
	var chooseContributionAmount = exports.chooseContributionAmount = function chooseContributionAmount(amount) {
		return {
			type: types.CHOOSE_CONTRIBUTION_AMOUNT,
			amount: amount
		};
	};
	
	var confirmContribution = exports.confirmContribution = function confirmContribution() {
		return {
			type: types.CONFIRM_CONTRIBUTION
		};
	};
	
	var setEmail = exports.setEmail = function setEmail(email, status) {
		return {
			type: types.SET_EMAIL,
			status: status,
			email: email
		};
	};
	
	var setCreditCardNumber = exports.setCreditCardNumber = function setCreditCardNumber(cardNumber, cardType, formattedCardNumber, status, cardNumberCursorPosition, formState) {
		return {
			type: types.SET_CREDIT_CARD_NUMBER,
			status: status,
			cardNumber: cardNumber,
			cardType: cardType,
			formattedCardNumber: formattedCardNumber,
			cardNumberCursorPosition: cardNumberCursorPosition,
			formState: formState
		};
	};
	
	var setCreditCardExpirationDate = exports.setCreditCardExpirationDate = function setCreditCardExpirationDate(expirationDate, status, expirationDateCursorPosition) {
		return {
			type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
			status: status,
			expirationDate: expirationDate,
			expirationDateCursorPosition: expirationDateCursorPosition
		};
	};
	
	var setCreditCardSecurityCode = exports.setCreditCardSecurityCode = function setCreditCardSecurityCode(securityCode, status, securityCodeCursorPosition) {
		return {
			type: types.SET_CREDIT_CARD_SECURITY_CODE,
			status: status,
			securityCode: securityCode,
			securityCodeCursorPosition: securityCodeCursorPosition
		};
	};
	
	var didStartEditingCreditCardNumber = exports.didStartEditingCreditCardNumber = function didStartEditingCreditCardNumber() {
		return {
			type: types.DID_START_EDITING_CREDIT_CARD_NUMBER
		};
	};
	
	var didStartEditingCreditCardExpirationDate = exports.didStartEditingCreditCardExpirationDate = function didStartEditingCreditCardExpirationDate() {
		return {
			type: types.DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE
		};
	};
	
	var didStartEditingCreditCardSecurityCode = exports.didStartEditingCreditCardSecurityCode = function didStartEditingCreditCardSecurityCode() {
		return {
			type: types.DID_START_EDITING_CREDIT_CARD_SECURITY_CODE
		};
	};
	
	var didFinishEditingCreditCardNumber = exports.didFinishEditingCreditCardNumber = function didFinishEditingCreditCardNumber() {
		return {
			type: types.DID_FINISH_EDITING_CREDIT_CARD_NUMBER
		};
	};
	
	var setEditingCreditCardNumber = exports.setEditingCreditCardNumber = function setEditingCreditCardNumber() {
		return {
			type: types.SET_EDITING_CREDIT_CARD_NUMBER
		};
	};
	
	var setEditingCreditCardExpirationDate = exports.setEditingCreditCardExpirationDate = function setEditingCreditCardExpirationDate() {
		return {
			type: types.SET_EDITING_CREDIT_CARD_EXPIRATION_DATE
		};
	};
	
	var setEditingCreditCardSecurityCode = exports.setEditingCreditCardSecurityCode = function setEditingCreditCardSecurityCode() {
		return {
			type: types.SET_EDITING_CREDIT_CARD_SECURITY_CODE
		};
	};
	
	var hasAttemptedEmailValidation = exports.hasAttemptedEmailValidation = function hasAttemptedEmailValidation() {
		return {
			type: types.HAS_ATTEMPTED_EMAIL_VALIDATION
		};
	};
	
	var invalidCreditCardNumber = exports.invalidCreditCardNumber = function invalidCreditCardNumber(error) {
		return {
			type: types.INVALID_CREDIT_CARD_NUMBER,
			error: error
		};
	};
	
	var invalidCreditCardExpirationMonth = exports.invalidCreditCardExpirationMonth = function invalidCreditCardExpirationMonth(error) {
		return {
			type: types.INVALID_CREDIT_CARD_EXPIRATION_MONTH,
			error: error
		};
	};
	
	var invalidCreditCardExpirationYear = exports.invalidCreditCardExpirationYear = function invalidCreditCardExpirationYear(error) {
		return {
			type: types.INVALID_CREDIT_CARD_EXPIRATION_YEAR,
			error: error
		};
	};
	
	var invalidCreditCardSecurityCode = exports.invalidCreditCardSecurityCode = function invalidCreditCardSecurityCode(error) {
		return {
			type: types.INVALID_CREDIT_CARD_SECURITY_CODE,
			error: error
		};
	};
	
	var incorrectCreditCardNumber = exports.incorrectCreditCardNumber = function incorrectCreditCardNumber(error) {
		return {
			type: types.INCORRECT_CREDIT_CARD_NUMBER,
			error: error
		};
	};
	
	var incorrectCreditCardSecurityCode = exports.incorrectCreditCardSecurityCode = function incorrectCreditCardSecurityCode(error) {
		return {
			type: types.INCORRECT_CREDIT_CARD_SECURITY_CODE,
			error: error
		};
	};
	
	var expiredCreditCard = exports.expiredCreditCard = function expiredCreditCard(error) {
		return {
			type: types.EXPIRED_CREDIT_CARD,
			error: error
		};
	};
	
	var declinedCreditCard = exports.declinedCreditCard = function declinedCreditCard(error) {
		return {
			type: types.DECLINED_CREDIT_CARD,
			error: error
		};
	};
	
	var unrecoverableError = exports.unrecoverableError = function unrecoverableError(error) {
		return {
			type: types.UNRECOVERABLE_ERROR,
			error: error
		};
	};
	
	var requestPaymentToken = exports.requestPaymentToken = function requestPaymentToken() {
		return {
			type: types.REQUEST_PAYMENT_TOKEN
		};
	};
	
	var paymentTokenReceived = exports.paymentTokenReceived = function paymentTokenReceived(response) {
		return {
			type: types.PAYMENT_TOKEN_RECEIVED,
			response: response
		};
	};
	
	var paymentTokenRequestFailed = exports.paymentTokenRequestFailed = function paymentTokenRequestFailed(error) {
		return function (dispatch) {
	
			// Determine whether this is a card error that the user can fix
			// or something that is out of the user's control
			if (error.type === _StripeErrors.stripeErrorTypes.CARD_ERROR) {
	
				// Go back to the payment page for any of these errors
				dispatch(jumpToPage(views.pages.indexOf(views.PAYMENT_PAGE)));
	
				switch (error.code) {
	
					case _StripeErrors.stripeErrorCodes.INVALID_NUMBER:
	
						// Reveal the card number field
						dispatch(setEditingCreditCardNumber());
	
						return dispatch(invalidCreditCardNumber(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.INVALID_EXPIRY_MONTH:
	
						// Reveal the expiration date field
						dispatch(setEditingCreditCardExpirationDate());
	
						return dispatch(invalidCreditCardExpirationMonth(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.INVALID_EXPIRY_YEAR:
	
						// Reveal the expiration date field
						dispatch(setEditingCreditCardExpirationDate());
	
						return dispatch(invalidCreditCardExpirationYear(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.INVALID_CVC:
	
						// Reveal the security code field
						dispatch(setEditingCreditCardSecurityCode());
	
						return dispatch(invalidCreditCardSecurityCode(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.INCORRECT_NUMBER:
	
						// Reveal the card number field
						dispatch(setEditingCreditCardNumber());
	
						return dispatch(incorrectCreditCardNumber(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.INCORRECT_CVC:
	
						// Reveal the security code field
						dispatch(setEditingCreditCardSecurityCode());
	
						return dispatch(incorrectCreditCardSecurityCode(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.EXPIRED_CARD:
	
						// Reveal the card number field
						dispatch(setEditingCreditCardNumber());
	
						return dispatch(expiredCreditCard(error));
						break;
	
					case _StripeErrors.stripeErrorCodes.CARD_DECLINED:
	
						// Reveal the card number field
						dispatch(setEditingCreditCardNumber());
	
						return dispatch(declinedCreditCard(error));
						break;
	
					default:
	
						// Go back to the payment page for any of these errors
						dispatch(jumpToPage(views.pages.indexOf(views.ERROR_PAGE)));
	
						return dispatch(unrecoverableError(error));
				}
			} else {
	
				// Go back to the payment page for any of these errors
				dispatch(jumpToPage(views.pages.indexOf(views.ERROR_PAGE)));
	
				return dispatch(unrecoverableError(error));
			}
		};
	};
	
	function fetchPaymentToken(payment, contribution) {
	
		return function (dispatch) {
			dispatch(requestPaymentToken());
	
			// return dispatch( paymentTokenRequestFailed( {
			// 	type: "card_error", // Type of error
			//   		code: "invalid_number", // Optional identifier of specific error
			// } ) )
	
			Stripe.card.createToken({
				number: payment.cardNumber.value,
				cvc: payment.securityCode.value,
				exp_month: payment.expirationDate.values.month,
				exp_year: payment.expirationDate.values.year
			}, function (status, response) {
				if (response.error) {
					dispatch(paymentTokenRequestFailed(response.error));
				} else {
					dispatch(paymentTokenReceived(response));
	
					return (0, _isomorphicFetch2.default)('http://localhost:8000/', {
						method: 'post',
						headers: {
							'Accept': 'application/json'
						},
						body: JSON.stringify({
							amount: contribution.amount * 100, // Transform the amount from dollars into cents for Stripe
							email: payment.email.value,
							campaign_id: '1',
							stripeToken: response.id
						})
					}).then(function (response) {
						response.json().then(function (response) {
							if (response.status === 'success') {
								dispatch(advancePage());
							} else {
								throw response.error;
							}
						});
					}).catch(function (err) {
						// Go back to the payment page for any of these errors
						dispatch(jumpToPage(views.pages.indexOf(views.ERROR_PAGE)));
						return dispatch(unrecoverableError(err));
					});
				}
			});
		};
	}

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var realFetch = __webpack_require__(33);
	module.exports = function (url, options) {
		if (/^\/\//.test(url)) {
			url = 'https:' + url;
		}
		return realFetch.call(this, url, options);
	};
	
	if (!global.fetch) {
		global.fetch = module.exports;
		global.Response = realFetch.Response;
		global.Headers = realFetch.Headers;
		global.Request = realFetch.Request;
	}

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	/**
	 * index.js
	 *
	 * a request API compatible with window.fetch
	 */
	
	var parse_url = __webpack_require__(34).parse;
	var resolve_url = __webpack_require__(34).resolve;
	var http = __webpack_require__(35);
	var https = __webpack_require__(36);
	var zlib = __webpack_require__(37);
	var stream = __webpack_require__(38);
	
	var Body = __webpack_require__(39);
	var Response = __webpack_require__(69);
	var Headers = __webpack_require__(70);
	var Request = __webpack_require__(71);
	var FetchError = __webpack_require__(67);
	
	// commonjs
	module.exports = Fetch;
	// es6 default export compatibility
	module.exports.default = module.exports;
	
	/**
	 * Fetch class
	 *
	 * @param   Mixed    url   Absolute url or Request instance
	 * @param   Object   opts  Fetch options
	 * @return  Promise
	 */
	function Fetch(url, opts) {
	
		// allow call as function
		if (!(this instanceof Fetch)) return new Fetch(url, opts);
	
		// allow custom promise
		if (!Fetch.Promise) {
			throw new Error('native promise missing, set Fetch.Promise to your favorite alternative');
		}
	
		Body.Promise = Fetch.Promise;
	
		var self = this;
	
		// wrap http.request into fetch
		return new Fetch.Promise(function (resolve, reject) {
			// build request object
			var options = new Request(url, opts);
	
			if (!options.protocol || !options.hostname) {
				throw new Error('only absolute urls are supported');
			}
	
			if (options.protocol !== 'http:' && options.protocol !== 'https:') {
				throw new Error('only http(s) protocols are supported');
			}
	
			var send;
			if (options.protocol === 'https:') {
				send = https.request;
			} else {
				send = http.request;
			}
	
			// normalize headers
			var headers = new Headers(options.headers);
	
			if (options.compress) {
				headers.set('accept-encoding', 'gzip,deflate');
			}
	
			if (!headers.has('user-agent')) {
				headers.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
			}
	
			if (!headers.has('connection') && !options.agent) {
				headers.set('connection', 'close');
			}
	
			if (!headers.has('accept')) {
				headers.set('accept', '*/*');
			}
	
			// detect form data input from form-data module, this hack avoid the need to pass multipart header manually
			if (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {
				headers.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());
			}
	
			// bring node-fetch closer to browser behavior by setting content-length automatically
			if (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {
				if (typeof options.body === 'string') {
					headers.set('content-length', Buffer.byteLength(options.body));
					// detect form data input from form-data module, this hack avoid the need to add content-length header manually
				} else if (options.body && typeof options.body.getLengthSync === 'function' && options.body._lengthRetrievers.length == 0) {
						headers.set('content-length', options.body.getLengthSync().toString());
						// this is only necessary for older nodejs releases (before iojs merge)
					} else if (options.body === undefined || options.body === null) {
							headers.set('content-length', '0');
						}
			}
	
			options.headers = headers.raw();
	
			// http.request only support string as host header, this hack make custom host header possible
			if (options.headers.host) {
				options.headers.host = options.headers.host[0];
			}
	
			// send request
			var req = send(options);
			var reqTimeout;
	
			if (options.timeout) {
				req.once('socket', function (socket) {
					reqTimeout = setTimeout(function () {
						req.abort();
						reject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));
					}, options.timeout);
				});
			}
	
			req.on('error', function (err) {
				clearTimeout(reqTimeout);
				reject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));
			});
	
			req.on('response', function (res) {
				clearTimeout(reqTimeout);
	
				// handle redirect
				if (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {
					if (options.redirect === 'error') {
						reject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));
						return;
					}
	
					if (options.counter >= options.follow) {
						reject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));
						return;
					}
	
					if (!res.headers.location) {
						reject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));
						return;
					}
	
					// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect
					if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST') {
						options.method = 'GET';
						delete options.body;
						delete options.headers['content-length'];
					}
	
					options.counter++;
	
					resolve(Fetch(resolve_url(options.url, res.headers.location), options));
					return;
				}
	
				// handle compression
				var body = res.pipe(new stream.PassThrough());
				var headers = new Headers(res.headers);
	
				if (options.compress && headers.has('content-encoding')) {
					var name = headers.get('content-encoding');
	
					// no need to pipe no content and not modified response body
					if (res.statusCode !== 204 && res.statusCode !== 304) {
						if (name == 'gzip' || name == 'x-gzip') {
							body = body.pipe(zlib.createGunzip());
						} else if (name == 'deflate' || name == 'x-deflate') {
							body = body.pipe(zlib.createInflate());
						}
					}
				}
	
				// normalize location header for manual redirect mode
				if (options.redirect === 'manual' && headers.has('location')) {
					headers.set('location', resolve_url(options.url, headers.get('location')));
				}
	
				// response object
				var output = new Response(body, {
					url: options.url,
					status: res.statusCode,
					statusText: res.statusMessage,
					headers: headers,
					size: options.size,
					timeout: options.timeout
				});
	
				resolve(output);
			});
	
			// accept string or readable stream as body
			if (typeof options.body === 'string') {
				req.write(options.body);
				req.end();
			} else if (_typeof(options.body) === 'object' && options.body.pipe) {
				options.body.pipe(req);
			} else {
				req.end();
			}
		});
	};
	
	/**
	 * Redirect code matching
	 *
	 * @param   Number   code  Status code
	 * @return  Boolean
	 */
	Fetch.prototype.isRedirect = function (code) {
		return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
	};
	
	// expose Promise
	Fetch.Promise = global.Promise;
	Fetch.Response = Response;
	Fetch.Headers = Headers;
	Fetch.Request = Request;

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("url");

/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = require("https");

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = require("zlib");

/***/ },
/* 38 */
/***/ function(module, exports) {

	module.exports = require("stream");

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * body.js
	 *
	 * Body interface provides common methods for Request and Response
	 */
	
	var convert = __webpack_require__(40).convert;
	var bodyStream = __webpack_require__(66);
	var PassThrough = __webpack_require__(38).PassThrough;
	var FetchError = __webpack_require__(67);
	
	module.exports = Body;
	
	/**
	 * Body class
	 *
	 * @param   Stream  body  Readable stream
	 * @param   Object  opts  Response options
	 * @return  Void
	 */
	function Body(body, opts) {
	
		opts = opts || {};
	
		this.body = body;
		this.bodyUsed = false;
		this.size = opts.size || 0;
		this.timeout = opts.timeout || 0;
		this._raw = [];
		this._abort = false;
	}
	
	/**
	 * Decode response as json
	 *
	 * @return  Promise
	 */
	Body.prototype.json = function () {
	
		return this._decode().then(function (text) {
			return JSON.parse(text);
		});
	};
	
	/**
	 * Decode response as text
	 *
	 * @return  Promise
	 */
	Body.prototype.text = function () {
	
		return this._decode();
	};
	
	/**
	 * Decode buffers into utf-8 string
	 *
	 * @return  Promise
	 */
	Body.prototype._decode = function () {
	
		var self = this;
	
		if (this.bodyUsed) {
			return Body.Promise.reject(new Error('body used already for: ' + this.url));
		}
	
		this.bodyUsed = true;
		this._bytes = 0;
		this._abort = false;
		this._raw = [];
	
		return new Body.Promise(function (resolve, reject) {
			var resTimeout;
	
			if (typeof self.body === 'string') {
				self._bytes = self.body.length;
				self._raw = [new Buffer(self.body)];
				return resolve(self._convert());
			}
	
			if (self.body instanceof Buffer) {
				self._bytes = self.body.length;
				self._raw = [self.body];
				return resolve(self._convert());
			}
	
			// allow timeout on slow response body
			if (self.timeout) {
				resTimeout = setTimeout(function () {
					self._abort = true;
					reject(new FetchError('response timeout at ' + self.url + ' over limit: ' + self.timeout, 'body-timeout'));
				}, self.timeout);
			}
	
			// handle stream error, such as incorrect content-encoding
			self.body.on('error', function (err) {
				reject(new FetchError('invalid response body at: ' + self.url + ' reason: ' + err.message, 'system', err));
			});
	
			self.body.on('data', function (chunk) {
				if (self._abort || chunk === null) {
					return;
				}
	
				if (self.size && self._bytes + chunk.length > self.size) {
					self._abort = true;
					reject(new FetchError('content size at ' + self.url + ' over limit: ' + self.size, 'max-size'));
					return;
				}
	
				self._bytes += chunk.length;
				self._raw.push(chunk);
			});
	
			self.body.on('end', function () {
				if (self._abort) {
					return;
				}
	
				clearTimeout(resTimeout);
				resolve(self._convert());
			});
		});
	};
	
	/**
	 * Detect buffer encoding and convert to target encoding
	 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
	 *
	 * @param   String  encoding  Target encoding
	 * @return  String
	 */
	Body.prototype._convert = function (encoding) {
	
		encoding = encoding || 'utf-8';
	
		var charset = 'utf-8';
		var res, str;
	
		// header
		if (this.headers.has('content-type')) {
			res = /charset=([^;]*)/i.exec(this.headers.get('content-type'));
		}
	
		// no charset in content type, peek at response body for at most 1024 bytes
		if (!res && this._raw.length > 0) {
			for (var i = 0; i < this._raw.length; i++) {
				str += this._raw[i].toString();
				if (str.length > 1024) {
					break;
				}
			}
			str = str.substr(0, 1024);
		}
	
		// html5
		if (!res && str) {
			res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
		}
	
		// html4
		if (!res && str) {
			res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
	
			if (res) {
				res = /charset=(.*)/i.exec(res.pop());
			}
		}
	
		// xml
		if (!res && str) {
			res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
		}
	
		// found charset
		if (res) {
			charset = res.pop();
	
			// prevent decode issues when sites use incorrect encoding
			// ref: https://hsivonen.fi/encoding-menu/
			if (charset === 'gb2312' || charset === 'gbk') {
				charset = 'gb18030';
			}
		}
	
		// turn raw buffers into utf-8 string
		return convert(Buffer.concat(this._raw), encoding, charset).toString();
	};
	
	/**
	 * Clone body given Res/Req instance
	 *
	 * @param   Mixed  instance  Response or Request instance
	 * @return  Mixed
	 */
	Body.prototype._clone = function (instance) {
		var p1, p2;
		var body = instance.body;
	
		// don't allow cloning a used body
		if (instance.bodyUsed) {
			throw new Error('cannot clone body after it is used');
		}
	
		// check that body is a stream and not form-data object
		// note: we can't clone the form-data object without having it as a dependency
		if (bodyStream(body) && typeof body.getBoundary !== 'function') {
			// tee instance body
			p1 = new PassThrough();
			p2 = new PassThrough();
			body.pipe(p1);
			body.pipe(p2);
			// set instance body to teed body and return the other teed body
			instance.body = p1;
			body = p2;
		}
	
		return body;
	};
	
	// expose Promise
	Body.Promise = global.Promise;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var iconvLite = __webpack_require__(41);
	// Load Iconv from an external file to be able to disable Iconv for webpack
	// Add /\/iconv-loader$/ to webpack.IgnorePlugin to ignore it
	var Iconv = __webpack_require__(64);
	
	// Expose to the world
	module.exports.convert = convert;
	
	/**
	 * Convert encoding of an UTF-8 string or a buffer
	 *
	 * @param {String|Buffer} str String to be converted
	 * @param {String} to Encoding to be converted to
	 * @param {String} [from='UTF-8'] Encoding to be converted from
	 * @param {Boolean} useLite If set to ture, force to use iconvLite
	 * @return {Buffer} Encoded string
	 */
	function convert(str, to, from, useLite) {
	    from = checkEncoding(from || 'UTF-8');
	    to = checkEncoding(to || 'UTF-8');
	    str = str || '';
	
	    var result;
	
	    if (from !== 'UTF-8' && typeof str === 'string') {
	        str = new Buffer(str, 'binary');
	    }
	
	    if (from === to) {
	        if (typeof str === 'string') {
	            result = new Buffer(str);
	        } else {
	            result = str;
	        }
	    } else if (Iconv && !useLite) {
	        try {
	            result = convertIconv(str, to, from);
	        } catch (E) {
	            console.error(E);
	            try {
	                result = convertIconvLite(str, to, from);
	            } catch (E) {
	                console.error(E);
	                result = str;
	            }
	        }
	    } else {
	        try {
	            result = convertIconvLite(str, to, from);
	        } catch (E) {
	            console.error(E);
	            result = str;
	        }
	    }
	
	    if (typeof result === 'string') {
	        result = new Buffer(result, 'utf-8');
	    }
	
	    return result;
	}
	
	/**
	 * Convert encoding of a string with node-iconv (if available)
	 *
	 * @param {String|Buffer} str String to be converted
	 * @param {String} to Encoding to be converted to
	 * @param {String} [from='UTF-8'] Encoding to be converted from
	 * @return {Buffer} Encoded string
	 */
	function convertIconv(str, to, from) {
	    var response, iconv;
	    iconv = new Iconv(from, to + '//TRANSLIT//IGNORE');
	    response = iconv.convert(str);
	    return response.slice(0, response.length);
	}
	
	/**
	 * Convert encoding of astring with iconv-lite
	 *
	 * @param {String|Buffer} str String to be converted
	 * @param {String} to Encoding to be converted to
	 * @param {String} [from='UTF-8'] Encoding to be converted from
	 * @return {Buffer} Encoded string
	 */
	function convertIconvLite(str, to, from) {
	    if (to === 'UTF-8') {
	        return iconvLite.decode(str, from);
	    } else if (from === 'UTF-8') {
	        return iconvLite.encode(str, to);
	    } else {
	        return iconvLite.encode(iconvLite.decode(str, from), to);
	    }
	}
	
	/**
	 * Converts charset name if needed
	 *
	 * @param {String} name Character set
	 * @return {String} Character set name
	 */
	function checkEncoding(name) {
	    return (name || '').toString().trim().replace(/^latin[\-_]?(\d+)$/i, 'ISO-8859-$1').replace(/^win(?:dows)?[\-_]?(\d+)$/i, 'WINDOWS-$1').replace(/^utf[\-_]?(\d+)$/i, 'UTF-$1').replace(/^ks_c_5601\-1987$/i, 'CP949').replace(/^us[\-_]?ascii$/i, 'ASCII').toUpperCase();
	}

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var bomHandling = __webpack_require__(42),
	    iconv = module.exports;
	
	// All codecs and aliases are kept here, keyed by encoding name/alias.
	// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.
	iconv.encodings = null;
	
	// Characters emitted in case of error.
	iconv.defaultCharUnicode = '�';
	iconv.defaultCharSingleByte = '?';
	
	// Public API.
	iconv.encode = function encode(str, encoding, options) {
	    str = "" + (str || ""); // Ensure string.
	
	    var encoder = iconv.getEncoder(encoding, options);
	
	    var res = encoder.write(str);
	    var trail = encoder.end();
	
	    return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;
	};
	
	iconv.decode = function decode(buf, encoding, options) {
	    if (typeof buf === 'string') {
	        if (!iconv.skipDecodeWarning) {
	            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');
	            iconv.skipDecodeWarning = true;
	        }
	
	        buf = new Buffer("" + (buf || ""), "binary"); // Ensure buffer.
	    }
	
	    var decoder = iconv.getDecoder(encoding, options);
	
	    var res = decoder.write(buf);
	    var trail = decoder.end();
	
	    return trail ? res + trail : res;
	};
	
	iconv.encodingExists = function encodingExists(enc) {
	    try {
	        iconv.getCodec(enc);
	        return true;
	    } catch (e) {
	        return false;
	    }
	};
	
	// Legacy aliases to convert functions
	iconv.toEncoding = iconv.encode;
	iconv.fromEncoding = iconv.decode;
	
	// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.
	iconv._codecDataCache = {};
	iconv.getCodec = function getCodec(encoding) {
	    if (!iconv.encodings) iconv.encodings = __webpack_require__(43); // Lazy load all encoding definitions.
	
	    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.
	    var enc = ('' + encoding).toLowerCase().replace(/[^0-9a-z]|:\d{4}$/g, "");
	
	    // Traverse iconv.encodings to find actual codec.
	    var codecOptions = {};
	    while (true) {
	        var codec = iconv._codecDataCache[enc];
	        if (codec) return codec;
	
	        var codecDef = iconv.encodings[enc];
	
	        switch (typeof codecDef === 'undefined' ? 'undefined' : _typeof(codecDef)) {
	            case "string":
	                // Direct alias to other encoding.
	                enc = codecDef;
	                break;
	
	            case "object":
	                // Alias with options. Can be layered.
	                for (var key in codecDef) {
	                    codecOptions[key] = codecDef[key];
	                }if (!codecOptions.encodingName) codecOptions.encodingName = enc;
	
	                enc = codecDef.type;
	                break;
	
	            case "function":
	                // Codec itself.
	                if (!codecOptions.encodingName) codecOptions.encodingName = enc;
	
	                // The codec function must load all tables and return object with .encoder and .decoder methods.
	                // It'll be called only once (for each different options object).
	                codec = new codecDef(codecOptions, iconv);
	
	                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.
	                return codec;
	
	            default:
	                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '" + enc + "')");
	        }
	    }
	};
	
	iconv.getEncoder = function getEncoder(encoding, options) {
	    var codec = iconv.getCodec(encoding),
	        encoder = new codec.encoder(options, codec);
	
	    if (codec.bomAware && options && options.addBOM) encoder = new bomHandling.PrependBOM(encoder, options);
	
	    return encoder;
	};
	
	iconv.getDecoder = function getDecoder(encoding, options) {
	    var codec = iconv.getCodec(encoding),
	        decoder = new codec.decoder(options, codec);
	
	    if (codec.bomAware && !(options && options.stripBOM === false)) decoder = new bomHandling.StripBOM(decoder, options);
	
	    return decoder;
	};
	
	// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.
	var nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;
	if (nodeVer) {
	
	    // Load streaming support in Node v0.10+
	    var nodeVerArr = nodeVer.split(".").map(Number);
	    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {
	        __webpack_require__(61)(iconv);
	    }
	
	    // Load Node primitive extensions.
	    __webpack_require__(62)(iconv);
	}

/***/ },
/* 42 */
/***/ function(module, exports) {

	"use strict";
	
	var BOMChar = '﻿';
	
	exports.PrependBOM = PrependBOMWrapper;
	function PrependBOMWrapper(encoder, options) {
	    this.encoder = encoder;
	    this.addBOM = true;
	}
	
	PrependBOMWrapper.prototype.write = function (str) {
	    if (this.addBOM) {
	        str = BOMChar + str;
	        this.addBOM = false;
	    }
	
	    return this.encoder.write(str);
	};
	
	PrependBOMWrapper.prototype.end = function () {
	    return this.encoder.end();
	};
	
	//------------------------------------------------------------------------------
	
	exports.StripBOM = StripBOMWrapper;
	function StripBOMWrapper(decoder, options) {
	    this.decoder = decoder;
	    this.pass = false;
	    this.options = options || {};
	}
	
	StripBOMWrapper.prototype.write = function (buf) {
	    var res = this.decoder.write(buf);
	    if (this.pass || !res) return res;
	
	    if (res[0] === BOMChar) {
	        res = res.slice(1);
	        if (typeof this.options.stripBOM === 'function') this.options.stripBOM();
	    }
	
	    this.pass = true;
	    return res;
	};
	
	StripBOMWrapper.prototype.end = function () {
	    return this.decoder.end();
	};

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	// Update this array if you add/rename/remove files in this directory.
	// We support Browserify by skipping automatic module discovery and requiring modules directly.
	
	var modules = [__webpack_require__(44), __webpack_require__(46), __webpack_require__(47), __webpack_require__(48), __webpack_require__(49), __webpack_require__(50), __webpack_require__(51), __webpack_require__(52)];
	
	// Put all encoding/alias/codec definitions to single object and export it.
	for (var i = 0; i < modules.length; i++) {
	    var _module = modules[i];
	    for (var enc in _module) {
	        if (Object.prototype.hasOwnProperty.call(_module, enc)) exports[enc] = _module[enc];
	    }
	}

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	// Export Node.js internal encodings.
	
	module.exports = {
	    // Encodings
	    utf8: { type: "_internal", bomAware: true },
	    cesu8: { type: "_internal", bomAware: true },
	    unicode11utf8: "utf8",
	
	    ucs2: { type: "_internal", bomAware: true },
	    utf16le: "ucs2",
	
	    binary: { type: "_internal" },
	    base64: { type: "_internal" },
	    hex: { type: "_internal" },
	
	    // Codec.
	    _internal: InternalCodec
	};
	
	//------------------------------------------------------------------------------
	
	function InternalCodec(codecOptions, iconv) {
	    this.enc = codecOptions.encodingName;
	    this.bomAware = codecOptions.bomAware;
	
	    if (this.enc === "base64") this.encoder = InternalEncoderBase64;else if (this.enc === "cesu8") {
	        this.enc = "utf8"; // Use utf8 for decoding.
	        this.encoder = InternalEncoderCesu8;
	
	        // Add decoder for versions of Node not supporting CESU-8
	        if (new Buffer("eda080", 'hex').toString().length == 3) {
	            this.decoder = InternalDecoderCesu8;
	            this.defaultCharUnicode = iconv.defaultCharUnicode;
	        }
	    }
	}
	
	InternalCodec.prototype.encoder = InternalEncoder;
	InternalCodec.prototype.decoder = InternalDecoder;
	
	//------------------------------------------------------------------------------
	
	// We use node.js internal decoder. Its signature is the same as ours.
	var StringDecoder = __webpack_require__(45).StringDecoder;
	
	if (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.
	    StringDecoder.prototype.end = function () {};
	
	function InternalDecoder(options, codec) {
	    StringDecoder.call(this, codec.enc);
	}
	
	InternalDecoder.prototype = StringDecoder.prototype;
	
	//------------------------------------------------------------------------------
	// Encoder is mostly trivial
	
	function InternalEncoder(options, codec) {
	    this.enc = codec.enc;
	}
	
	InternalEncoder.prototype.write = function (str) {
	    return new Buffer(str, this.enc);
	};
	
	InternalEncoder.prototype.end = function () {};
	
	//------------------------------------------------------------------------------
	// Except base64 encoder, which must keep its state.
	
	function InternalEncoderBase64(options, codec) {
	    this.prevStr = '';
	}
	
	InternalEncoderBase64.prototype.write = function (str) {
	    str = this.prevStr + str;
	    var completeQuads = str.length - str.length % 4;
	    this.prevStr = str.slice(completeQuads);
	    str = str.slice(0, completeQuads);
	
	    return new Buffer(str, "base64");
	};
	
	InternalEncoderBase64.prototype.end = function () {
	    return new Buffer(this.prevStr, "base64");
	};
	
	//------------------------------------------------------------------------------
	// CESU-8 encoder is also special.
	
	function InternalEncoderCesu8(options, codec) {}
	
	InternalEncoderCesu8.prototype.write = function (str) {
	    var buf = new Buffer(str.length * 3),
	        bufIdx = 0;
	    for (var i = 0; i < str.length; i++) {
	        var charCode = str.charCodeAt(i);
	        // Naive implementation, but it works because CESU-8 is especially easy
	        // to convert from UTF-16 (which all JS strings are encoded in).
	        if (charCode < 0x80) buf[bufIdx++] = charCode;else if (charCode < 0x800) {
	            buf[bufIdx++] = 0xC0 + (charCode >>> 6);
	            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
	        } else {
	            // charCode will always be < 0x10000 in javascript.
	            buf[bufIdx++] = 0xE0 + (charCode >>> 12);
	            buf[bufIdx++] = 0x80 + (charCode >>> 6 & 0x3f);
	            buf[bufIdx++] = 0x80 + (charCode & 0x3f);
	        }
	    }
	    return buf.slice(0, bufIdx);
	};
	
	InternalEncoderCesu8.prototype.end = function () {};
	
	//------------------------------------------------------------------------------
	// CESU-8 decoder is not implemented in Node v4.0+
	
	function InternalDecoderCesu8(options, codec) {
	    this.acc = 0;
	    this.contBytes = 0;
	    this.accBytes = 0;
	    this.defaultCharUnicode = codec.defaultCharUnicode;
	}
	
	InternalDecoderCesu8.prototype.write = function (buf) {
	    var acc = this.acc,
	        contBytes = this.contBytes,
	        accBytes = this.accBytes,
	        res = '';
	    for (var i = 0; i < buf.length; i++) {
	        var curByte = buf[i];
	        if ((curByte & 0xC0) !== 0x80) {
	            // Leading byte
	            if (contBytes > 0) {
	                // Previous code is invalid
	                res += this.defaultCharUnicode;
	                contBytes = 0;
	            }
	
	            if (curByte < 0x80) {
	                // Single-byte code
	                res += String.fromCharCode(curByte);
	            } else if (curByte < 0xE0) {
	                // Two-byte code
	                acc = curByte & 0x1F;
	                contBytes = 1;accBytes = 1;
	            } else if (curByte < 0xF0) {
	                // Three-byte code
	                acc = curByte & 0x0F;
	                contBytes = 2;accBytes = 1;
	            } else {
	                // Four or more are not supported for CESU-8.
	                res += this.defaultCharUnicode;
	            }
	        } else {
	            // Continuation byte
	            if (contBytes > 0) {
	                // We're waiting for it.
	                acc = acc << 6 | curByte & 0x3f;
	                contBytes--;accBytes++;
	                if (contBytes === 0) {
	                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)
	                    if (accBytes === 2 && acc < 0x80 && acc > 0) res += this.defaultCharUnicode;else if (accBytes === 3 && acc < 0x800) res += this.defaultCharUnicode;else
	                        // Actually add character.
	                        res += String.fromCharCode(acc);
	                }
	            } else {
	                // Unexpected continuation byte
	                res += this.defaultCharUnicode;
	            }
	        }
	    }
	    this.acc = acc;this.contBytes = contBytes;this.accBytes = accBytes;
	    return res;
	};
	
	InternalDecoderCesu8.prototype.end = function () {
	    var res = 0;
	    if (this.contBytes > 0) res += this.defaultCharUnicode;
	    return res;
	};

/***/ },
/* 45 */
/***/ function(module, exports) {

	module.exports = require("string_decoder");

/***/ },
/* 46 */
/***/ function(module, exports) {

	"use strict";
	
	// == UTF16-BE codec. ==========================================================
	
	exports.utf16be = Utf16BECodec;
	function Utf16BECodec() {}
	
	Utf16BECodec.prototype.encoder = Utf16BEEncoder;
	Utf16BECodec.prototype.decoder = Utf16BEDecoder;
	Utf16BECodec.prototype.bomAware = true;
	
	// -- Encoding
	
	function Utf16BEEncoder() {}
	
	Utf16BEEncoder.prototype.write = function (str) {
	    var buf = new Buffer(str, 'ucs2');
	    for (var i = 0; i < buf.length; i += 2) {
	        var tmp = buf[i];buf[i] = buf[i + 1];buf[i + 1] = tmp;
	    }
	    return buf;
	};
	
	Utf16BEEncoder.prototype.end = function () {};
	
	// -- Decoding
	
	function Utf16BEDecoder() {
	    this.overflowByte = -1;
	}
	
	Utf16BEDecoder.prototype.write = function (buf) {
	    if (buf.length == 0) return '';
	
	    var buf2 = new Buffer(buf.length + 1),
	        i = 0,
	        j = 0;
	
	    if (this.overflowByte !== -1) {
	        buf2[0] = buf[0];
	        buf2[1] = this.overflowByte;
	        i = 1;j = 2;
	    }
	
	    for (; i < buf.length - 1; i += 2, j += 2) {
	        buf2[j] = buf[i + 1];
	        buf2[j + 1] = buf[i];
	    }
	
	    this.overflowByte = i == buf.length - 1 ? buf[buf.length - 1] : -1;
	
	    return buf2.slice(0, j).toString('ucs2');
	};
	
	Utf16BEDecoder.prototype.end = function () {};
	
	// == UTF-16 codec =============================================================
	// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.
	// Defaults to UTF-16LE, as it's prevalent and default in Node.
	// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le
	// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});
	
	// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).
	
	exports.utf16 = Utf16Codec;
	function Utf16Codec(codecOptions, iconv) {
	    this.iconv = iconv;
	}
	
	Utf16Codec.prototype.encoder = Utf16Encoder;
	Utf16Codec.prototype.decoder = Utf16Decoder;
	
	// -- Encoding (pass-through)
	
	function Utf16Encoder(options, codec) {
	    options = options || {};
	    if (options.addBOM === undefined) options.addBOM = true;
	    this.encoder = codec.iconv.getEncoder('utf-16le', options);
	}
	
	Utf16Encoder.prototype.write = function (str) {
	    return this.encoder.write(str);
	};
	
	Utf16Encoder.prototype.end = function () {
	    return this.encoder.end();
	};
	
	// -- Decoding
	
	function Utf16Decoder(options, codec) {
	    this.decoder = null;
	    this.initialBytes = [];
	    this.initialBytesLen = 0;
	
	    this.options = options || {};
	    this.iconv = codec.iconv;
	}
	
	Utf16Decoder.prototype.write = function (buf) {
	    if (!this.decoder) {
	        // Codec is not chosen yet. Accumulate initial bytes.
	        this.initialBytes.push(buf);
	        this.initialBytesLen += buf.length;
	
	        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)
	            return '';
	
	        // We have enough bytes -> detect endianness.
	        var buf = Buffer.concat(this.initialBytes),
	            encoding = detectEncoding(buf, this.options.defaultEncoding);
	        this.decoder = this.iconv.getDecoder(encoding, this.options);
	        this.initialBytes.length = this.initialBytesLen = 0;
	    }
	
	    return this.decoder.write(buf);
	};
	
	Utf16Decoder.prototype.end = function () {
	    if (!this.decoder) {
	        var buf = Buffer.concat(this.initialBytes),
	            encoding = detectEncoding(buf, this.options.defaultEncoding);
	        this.decoder = this.iconv.getDecoder(encoding, this.options);
	
	        var res = this.decoder.write(buf),
	            trail = this.decoder.end();
	
	        return trail ? res + trail : res;
	    }
	    return this.decoder.end();
	};
	
	function detectEncoding(buf, defaultEncoding) {
	    var enc = defaultEncoding || 'utf-16le';
	
	    if (buf.length >= 2) {
	        // Check BOM.
	        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM
	            enc = 'utf-16be';else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM
	            enc = 'utf-16le';else {
	            // No BOM found. Try to deduce encoding from initial content.
	            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.
	            // So, we count ASCII as if it was LE or BE, and decide from that.
	            var asciiCharsLE = 0,
	                asciiCharsBE = 0,
	                // Counts of chars in both positions
	            _len = Math.min(buf.length - buf.length % 2, 64); // Len is always even.
	
	            for (var i = 0; i < _len; i += 2) {
	                if (buf[i] === 0 && buf[i + 1] !== 0) asciiCharsBE++;
	                if (buf[i] !== 0 && buf[i + 1] === 0) asciiCharsLE++;
	            }
	
	            if (asciiCharsBE > asciiCharsLE) enc = 'utf-16be';else if (asciiCharsBE < asciiCharsLE) enc = 'utf-16le';
	        }
	    }
	
	    return enc;
	}

/***/ },
/* 47 */
/***/ function(module, exports) {

	"use strict";
	
	// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152
	// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3
	
	exports.utf7 = Utf7Codec;
	exports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7
	function Utf7Codec(codecOptions, iconv) {
	    this.iconv = iconv;
	};
	
	Utf7Codec.prototype.encoder = Utf7Encoder;
	Utf7Codec.prototype.decoder = Utf7Decoder;
	Utf7Codec.prototype.bomAware = true;
	
	// -- Encoding
	
	var nonDirectChars = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
	
	function Utf7Encoder(options, codec) {
	    this.iconv = codec.iconv;
	}
	
	Utf7Encoder.prototype.write = function (str) {
	    // Naive implementation.
	    // Non-direct chars are encoded as "+<base64>-"; single "+" char is encoded as "+-".
	    return new Buffer(str.replace(nonDirectChars, function (chunk) {
	        return "+" + (chunk === '+' ? '' : this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) + "-";
	    }.bind(this)));
	};
	
	Utf7Encoder.prototype.end = function () {};
	
	// -- Decoding
	
	function Utf7Decoder(options, codec) {
	    this.iconv = codec.iconv;
	    this.inBase64 = false;
	    this.base64Accum = '';
	}
	
	var base64Regex = /[A-Za-z0-9\/+]/;
	var base64Chars = [];
	for (var i = 0; i < 256; i++) {
	    base64Chars[i] = base64Regex.test(String.fromCharCode(i));
	}var plusChar = '+'.charCodeAt(0),
	    minusChar = '-'.charCodeAt(0),
	    andChar = '&'.charCodeAt(0);
	
	Utf7Decoder.prototype.write = function (buf) {
	    var res = "",
	        lastI = 0,
	        inBase64 = this.inBase64,
	        base64Accum = this.base64Accum;
	
	    // The decoder is more involved as we must handle chunks in stream.
	
	    for (var i = 0; i < buf.length; i++) {
	        if (!inBase64) {
	            // We're in direct mode.
	            // Write direct chars until '+'
	            if (buf[i] == plusChar) {
	                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
	                lastI = i + 1;
	                inBase64 = true;
	            }
	        } else {
	            // We decode base64.
	            if (!base64Chars[buf[i]]) {
	                // Base64 ended.
	                if (i == lastI && buf[i] == minusChar) {
	                    // "+-" -> "+"
	                    res += "+";
	                } else {
	                    var b64str = base64Accum + buf.slice(lastI, i).toString();
	                    res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
	                }
	
	                if (buf[i] != minusChar) // Minus is absorbed after base64.
	                    i--;
	
	                lastI = i + 1;
	                inBase64 = false;
	                base64Accum = '';
	            }
	        }
	    }
	
	    if (!inBase64) {
	        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
	    } else {
	            var b64str = base64Accum + buf.slice(lastI).toString();
	
	            var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
	            base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
	            b64str = b64str.slice(0, canBeDecoded);
	
	            res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
	        }
	
	    this.inBase64 = inBase64;
	    this.base64Accum = base64Accum;
	
	    return res;
	};
	
	Utf7Decoder.prototype.end = function () {
	    var res = "";
	    if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), "utf16-be");
	
	    this.inBase64 = false;
	    this.base64Accum = '';
	    return res;
	};
	
	// UTF-7-IMAP codec.
	// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)
	// Differences:
	//  * Base64 part is started by "&" instead of "+"
	//  * Direct characters are 0x20-0x7E, except "&" (0x26)
	//  * In Base64, "," is used instead of "/"
	//  * Base64 must not be used to represent direct characters.
	//  * No implicit shift back from Base64 (should always end with '-')
	//  * String must end in non-shifted position.
	//  * "-&" while in base64 is not allowed.
	
	exports.utf7imap = Utf7IMAPCodec;
	function Utf7IMAPCodec(codecOptions, iconv) {
	    this.iconv = iconv;
	};
	
	Utf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;
	Utf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;
	Utf7IMAPCodec.prototype.bomAware = true;
	
	// -- Encoding
	
	function Utf7IMAPEncoder(options, codec) {
	    this.iconv = codec.iconv;
	    this.inBase64 = false;
	    this.base64Accum = new Buffer(6);
	    this.base64AccumIdx = 0;
	}
	
	Utf7IMAPEncoder.prototype.write = function (str) {
	    var inBase64 = this.inBase64,
	        base64Accum = this.base64Accum,
	        base64AccumIdx = this.base64AccumIdx,
	        buf = new Buffer(str.length * 5 + 10),
	        bufIdx = 0;
	
	    for (var i = 0; i < str.length; i++) {
	        var uChar = str.charCodeAt(i);
	        if (0x20 <= uChar && uChar <= 0x7E) {
	            // Direct character or '&'.
	            if (inBase64) {
	                if (base64AccumIdx > 0) {
	                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
	                    base64AccumIdx = 0;
	                }
	
	                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
	                inBase64 = false;
	            }
	
	            if (!inBase64) {
	                buf[bufIdx++] = uChar; // Write direct character
	
	                if (uChar === andChar) // Ampersand -> '&-'
	                    buf[bufIdx++] = minusChar;
	            }
	        } else {
	            // Non-direct character
	            if (!inBase64) {
	                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.
	                inBase64 = true;
	            }
	            if (inBase64) {
	                base64Accum[base64AccumIdx++] = uChar >> 8;
	                base64Accum[base64AccumIdx++] = uChar & 0xFF;
	
	                if (base64AccumIdx == base64Accum.length) {
	                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\//g, ','), bufIdx);
	                    base64AccumIdx = 0;
	                }
	            }
	        }
	    }
	
	    this.inBase64 = inBase64;
	    this.base64AccumIdx = base64AccumIdx;
	
	    return buf.slice(0, bufIdx);
	};
	
	Utf7IMAPEncoder.prototype.end = function () {
	    var buf = new Buffer(10),
	        bufIdx = 0;
	    if (this.inBase64) {
	        if (this.base64AccumIdx > 0) {
	            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\//g, ',').replace(/=+$/, ''), bufIdx);
	            this.base64AccumIdx = 0;
	        }
	
	        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.
	        this.inBase64 = false;
	    }
	
	    return buf.slice(0, bufIdx);
	};
	
	// -- Decoding
	
	function Utf7IMAPDecoder(options, codec) {
	    this.iconv = codec.iconv;
	    this.inBase64 = false;
	    this.base64Accum = '';
	}
	
	var base64IMAPChars = base64Chars.slice();
	base64IMAPChars[','.charCodeAt(0)] = true;
	
	Utf7IMAPDecoder.prototype.write = function (buf) {
	    var res = "",
	        lastI = 0,
	        inBase64 = this.inBase64,
	        base64Accum = this.base64Accum;
	
	    // The decoder is more involved as we must handle chunks in stream.
	    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).
	
	    for (var i = 0; i < buf.length; i++) {
	        if (!inBase64) {
	            // We're in direct mode.
	            // Write direct chars until '&'
	            if (buf[i] == andChar) {
	                res += this.iconv.decode(buf.slice(lastI, i), "ascii"); // Write direct chars.
	                lastI = i + 1;
	                inBase64 = true;
	            }
	        } else {
	            // We decode base64.
	            if (!base64IMAPChars[buf[i]]) {
	                // Base64 ended.
	                if (i == lastI && buf[i] == minusChar) {
	                    // "&-" -> "&"
	                    res += "&";
	                } else {
	                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');
	                    res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
	                }
	
	                if (buf[i] != minusChar) // Minus may be absorbed after base64.
	                    i--;
	
	                lastI = i + 1;
	                inBase64 = false;
	                base64Accum = '';
	            }
	        }
	    }
	
	    if (!inBase64) {
	        res += this.iconv.decode(buf.slice(lastI), "ascii"); // Write direct chars.
	    } else {
	            var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');
	
	            var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.
	            base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.
	            b64str = b64str.slice(0, canBeDecoded);
	
	            res += this.iconv.decode(new Buffer(b64str, 'base64'), "utf16-be");
	        }
	
	    this.inBase64 = inBase64;
	    this.base64Accum = base64Accum;
	
	    return res;
	};
	
	Utf7IMAPDecoder.prototype.end = function () {
	    var res = "";
	    if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(new Buffer(this.base64Accum, 'base64'), "utf16-be");
	
	    this.inBase64 = false;
	    this.base64Accum = '';
	    return res;
	};

/***/ },
/* 48 */
/***/ function(module, exports) {

	"use strict";
	
	// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
	// correspond to encoded bytes (if 128 - then lower half is ASCII).
	
	exports._sbcs = SBCSCodec;
	function SBCSCodec(codecOptions, iconv) {
	    if (!codecOptions) throw new Error("SBCS codec is called without the data.");
	
	    // Prepare char buffer for decoding.
	    if (!codecOptions.chars || codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256) throw new Error("Encoding '" + codecOptions.type + "' has incorrect 'chars' (must be of len 128 or 256)");
	
	    if (codecOptions.chars.length === 128) {
	        var asciiString = "";
	        for (var i = 0; i < 128; i++) {
	            asciiString += String.fromCharCode(i);
	        }codecOptions.chars = asciiString + codecOptions.chars;
	    }
	
	    this.decodeBuf = new Buffer(codecOptions.chars, 'ucs2');
	
	    // Encoding buffer.
	    var encodeBuf = new Buffer(65536);
	    encodeBuf.fill(iconv.defaultCharSingleByte.charCodeAt(0));
	
	    for (var i = 0; i < codecOptions.chars.length; i++) {
	        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;
	    }this.encodeBuf = encodeBuf;
	}
	
	SBCSCodec.prototype.encoder = SBCSEncoder;
	SBCSCodec.prototype.decoder = SBCSDecoder;
	
	function SBCSEncoder(options, codec) {
	    this.encodeBuf = codec.encodeBuf;
	}
	
	SBCSEncoder.prototype.write = function (str) {
	    var buf = new Buffer(str.length);
	    for (var i = 0; i < str.length; i++) {
	        buf[i] = this.encodeBuf[str.charCodeAt(i)];
	    }return buf;
	};
	
	SBCSEncoder.prototype.end = function () {};
	
	function SBCSDecoder(options, codec) {
	    this.decodeBuf = codec.decodeBuf;
	}
	
	SBCSDecoder.prototype.write = function (buf) {
	    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
	    var decodeBuf = this.decodeBuf;
	    var newBuf = new Buffer(buf.length * 2);
	    var idx1 = 0,
	        idx2 = 0;
	    for (var i = 0; i < buf.length; i++) {
	        idx1 = buf[i] * 2;idx2 = i * 2;
	        newBuf[idx2] = decodeBuf[idx1];
	        newBuf[idx2 + 1] = decodeBuf[idx1 + 1];
	    }
	    return newBuf.toString('ucs2');
	};
	
	SBCSDecoder.prototype.end = function () {};

/***/ },
/* 49 */
/***/ function(module, exports) {

	"use strict";
	
	// Manually added data to be used by sbcs codec in addition to generated one.
	
	module.exports = {
	    // Not supported by iconv, not sure why.
	    "10029": "maccenteuro",
	    "maccenteuro": {
	        "type": "_sbcs",
	        "chars": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"
	    },
	
	    "808": "cp808",
	    "ibm808": "cp808",
	    "cp808": {
	        "type": "_sbcs",
	        "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "
	    },
	
	    // Aliases of generated encodings.
	    "ascii8bit": "ascii",
	    "usascii": "ascii",
	    "ansix34": "ascii",
	    "ansix341968": "ascii",
	    "ansix341986": "ascii",
	    "csascii": "ascii",
	    "cp367": "ascii",
	    "ibm367": "ascii",
	    "isoir6": "ascii",
	    "iso646us": "ascii",
	    "iso646irv": "ascii",
	    "us": "ascii",
	
	    "latin1": "iso88591",
	    "latin2": "iso88592",
	    "latin3": "iso88593",
	    "latin4": "iso88594",
	    "latin5": "iso88599",
	    "latin6": "iso885910",
	    "latin7": "iso885913",
	    "latin8": "iso885914",
	    "latin9": "iso885915",
	    "latin10": "iso885916",
	
	    "csisolatin1": "iso88591",
	    "csisolatin2": "iso88592",
	    "csisolatin3": "iso88593",
	    "csisolatin4": "iso88594",
	    "csisolatincyrillic": "iso88595",
	    "csisolatinarabic": "iso88596",
	    "csisolatingreek": "iso88597",
	    "csisolatinhebrew": "iso88598",
	    "csisolatin5": "iso88599",
	    "csisolatin6": "iso885910",
	
	    "l1": "iso88591",
	    "l2": "iso88592",
	    "l3": "iso88593",
	    "l4": "iso88594",
	    "l5": "iso88599",
	    "l6": "iso885910",
	    "l7": "iso885913",
	    "l8": "iso885914",
	    "l9": "iso885915",
	    "l10": "iso885916",
	
	    "isoir14": "iso646jp",
	    "isoir57": "iso646cn",
	    "isoir100": "iso88591",
	    "isoir101": "iso88592",
	    "isoir109": "iso88593",
	    "isoir110": "iso88594",
	    "isoir144": "iso88595",
	    "isoir127": "iso88596",
	    "isoir126": "iso88597",
	    "isoir138": "iso88598",
	    "isoir148": "iso88599",
	    "isoir157": "iso885910",
	    "isoir166": "tis620",
	    "isoir179": "iso885913",
	    "isoir199": "iso885914",
	    "isoir203": "iso885915",
	    "isoir226": "iso885916",
	
	    "cp819": "iso88591",
	    "ibm819": "iso88591",
	
	    "cyrillic": "iso88595",
	
	    "arabic": "iso88596",
	    "arabic8": "iso88596",
	    "ecma114": "iso88596",
	    "asmo708": "iso88596",
	
	    "greek": "iso88597",
	    "greek8": "iso88597",
	    "ecma118": "iso88597",
	    "elot928": "iso88597",
	
	    "hebrew": "iso88598",
	    "hebrew8": "iso88598",
	
	    "turkish": "iso88599",
	    "turkish8": "iso88599",
	
	    "thai": "iso885911",
	    "thai8": "iso885911",
	
	    "celtic": "iso885914",
	    "celtic8": "iso885914",
	    "isoceltic": "iso885914",
	
	    "tis6200": "tis620",
	    "tis62025291": "tis620",
	    "tis62025330": "tis620",
	
	    "10000": "macroman",
	    "10006": "macgreek",
	    "10007": "maccyrillic",
	    "10079": "maciceland",
	    "10081": "macturkish",
	
	    "cspc8codepage437": "cp437",
	    "cspc775baltic": "cp775",
	    "cspc850multilingual": "cp850",
	    "cspcp852": "cp852",
	    "cspc862latinhebrew": "cp862",
	    "cpgr": "cp869",
	
	    "msee": "cp1250",
	    "mscyrl": "cp1251",
	    "msansi": "cp1252",
	    "msgreek": "cp1253",
	    "msturk": "cp1254",
	    "mshebr": "cp1255",
	    "msarab": "cp1256",
	    "winbaltrim": "cp1257",
	
	    "cp20866": "koi8r",
	    "20866": "koi8r",
	    "ibm878": "koi8r",
	    "cskoi8r": "koi8r",
	
	    "cp21866": "koi8u",
	    "21866": "koi8u",
	    "ibm1168": "koi8u",
	
	    "strk10482002": "rk1048",
	
	    "tcvn5712": "tcvn",
	    "tcvn57121": "tcvn",
	
	    "gb198880": "iso646cn",
	    "cn": "iso646cn",
	
	    "csiso14jisc6220ro": "iso646jp",
	    "jisc62201969ro": "iso646jp",
	    "jp": "iso646jp",
	
	    "cshproman8": "hproman8",
	    "r8": "hproman8",
	    "roman8": "hproman8",
	    "xroman8": "hproman8",
	    "ibm1051": "hproman8",
	
	    "mac": "macintosh",
	    "csmacintosh": "macintosh"
	};

/***/ },
/* 50 */
/***/ function(module, exports) {

	"use strict";
	
	// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.
	
	module.exports = {
	  "437": "cp437",
	  "737": "cp737",
	  "775": "cp775",
	  "850": "cp850",
	  "852": "cp852",
	  "855": "cp855",
	  "856": "cp856",
	  "857": "cp857",
	  "858": "cp858",
	  "860": "cp860",
	  "861": "cp861",
	  "862": "cp862",
	  "863": "cp863",
	  "864": "cp864",
	  "865": "cp865",
	  "866": "cp866",
	  "869": "cp869",
	  "874": "windows874",
	  "922": "cp922",
	  "1046": "cp1046",
	  "1124": "cp1124",
	  "1125": "cp1125",
	  "1129": "cp1129",
	  "1133": "cp1133",
	  "1161": "cp1161",
	  "1162": "cp1162",
	  "1163": "cp1163",
	  "1250": "windows1250",
	  "1251": "windows1251",
	  "1252": "windows1252",
	  "1253": "windows1253",
	  "1254": "windows1254",
	  "1255": "windows1255",
	  "1256": "windows1256",
	  "1257": "windows1257",
	  "1258": "windows1258",
	  "28591": "iso88591",
	  "28592": "iso88592",
	  "28593": "iso88593",
	  "28594": "iso88594",
	  "28595": "iso88595",
	  "28596": "iso88596",
	  "28597": "iso88597",
	  "28598": "iso88598",
	  "28599": "iso88599",
	  "28600": "iso885910",
	  "28601": "iso885911",
	  "28603": "iso885913",
	  "28604": "iso885914",
	  "28605": "iso885915",
	  "28606": "iso885916",
	  "windows874": {
	    "type": "_sbcs",
	    "chars": "€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
	  },
	  "win874": "windows874",
	  "cp874": "windows874",
	  "windows1250": {
	    "type": "_sbcs",
	    "chars": "€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
	  },
	  "win1250": "windows1250",
	  "cp1250": "windows1250",
	  "windows1251": {
	    "type": "_sbcs",
	    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
	  },
	  "win1251": "windows1251",
	  "cp1251": "windows1251",
	  "windows1252": {
	    "type": "_sbcs",
	    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
	  },
	  "win1252": "windows1252",
	  "cp1252": "windows1252",
	  "windows1253": {
	    "type": "_sbcs",
	    "chars": "€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
	  },
	  "win1253": "windows1253",
	  "cp1253": "windows1253",
	  "windows1254": {
	    "type": "_sbcs",
	    "chars": "€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
	  },
	  "win1254": "windows1254",
	  "cp1254": "windows1254",
	  "windows1255": {
	    "type": "_sbcs",
	    "chars": "€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹ�ֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
	  },
	  "win1255": "windows1255",
	  "cp1255": "windows1255",
	  "windows1256": {
	    "type": "_sbcs",
	    "chars": "€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"
	  },
	  "win1256": "windows1256",
	  "cp1256": "windows1256",
	  "windows1257": {
	    "type": "_sbcs",
	    "chars": "€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"
	  },
	  "win1257": "windows1257",
	  "cp1257": "windows1257",
	  "windows1258": {
	    "type": "_sbcs",
	    "chars": "€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
	  },
	  "win1258": "windows1258",
	  "cp1258": "windows1258",
	  "iso88591": {
	    "type": "_sbcs",
	    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
	  },
	  "cp28591": "iso88591",
	  "iso88592": {
	    "type": "_sbcs",
	    "chars": " Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"
	  },
	  "cp28592": "iso88592",
	  "iso88593": {
	    "type": "_sbcs",
	    "chars": " Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"
	  },
	  "cp28593": "iso88593",
	  "iso88594": {
	    "type": "_sbcs",
	    "chars": " ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"
	  },
	  "cp28594": "iso88594",
	  "iso88595": {
	    "type": "_sbcs",
	    "chars": " ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"
	  },
	  "cp28595": "iso88595",
	  "iso88596": {
	    "type": "_sbcs",
	    "chars": " ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"
	  },
	  "cp28596": "iso88596",
	  "iso88597": {
	    "type": "_sbcs",
	    "chars": " ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"
	  },
	  "cp28597": "iso88597",
	  "iso88598": {
	    "type": "_sbcs",
	    "chars": " �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"
	  },
	  "cp28598": "iso88598",
	  "iso88599": {
	    "type": "_sbcs",
	    "chars": " ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"
	  },
	  "cp28599": "iso88599",
	  "iso885910": {
	    "type": "_sbcs",
	    "chars": " ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"
	  },
	  "cp28600": "iso885910",
	  "iso885911": {
	    "type": "_sbcs",
	    "chars": " กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
	  },
	  "cp28601": "iso885911",
	  "iso885913": {
	    "type": "_sbcs",
	    "chars": " ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"
	  },
	  "cp28603": "iso885913",
	  "iso885914": {
	    "type": "_sbcs",
	    "chars": " Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"
	  },
	  "cp28604": "iso885914",
	  "iso885915": {
	    "type": "_sbcs",
	    "chars": " ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
	  },
	  "cp28605": "iso885915",
	  "iso885916": {
	    "type": "_sbcs",
	    "chars": " ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"
	  },
	  "cp28606": "iso885916",
	  "cp437": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm437": "cp437",
	  "csibm437": "cp437",
	  "cp737": {
	    "type": "_sbcs",
	    "chars": "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "
	  },
	  "ibm737": "cp737",
	  "csibm737": "cp737",
	  "cp775": {
	    "type": "_sbcs",
	    "chars": "ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "
	  },
	  "ibm775": "cp775",
	  "csibm775": "cp775",
	  "cp850": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
	  },
	  "ibm850": "cp850",
	  "csibm850": "cp850",
	  "cp852": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "
	  },
	  "ibm852": "cp852",
	  "csibm852": "cp852",
	  "cp855": {
	    "type": "_sbcs",
	    "chars": "ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "
	  },
	  "ibm855": "cp855",
	  "csibm855": "cp855",
	  "cp856": {
	    "type": "_sbcs",
	    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "
	  },
	  "ibm856": "cp856",
	  "csibm856": "cp856",
	  "cp857": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "
	  },
	  "ibm857": "cp857",
	  "csibm857": "cp857",
	  "cp858": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "
	  },
	  "ibm858": "cp858",
	  "csibm858": "cp858",
	  "cp860": {
	    "type": "_sbcs",
	    "chars": "ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm860": "cp860",
	  "csibm860": "cp860",
	  "cp861": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm861": "cp861",
	  "csibm861": "cp861",
	  "cp862": {
	    "type": "_sbcs",
	    "chars": "אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm862": "cp862",
	  "csibm862": "cp862",
	  "cp863": {
	    "type": "_sbcs",
	    "chars": "ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm863": "cp863",
	  "csibm863": "cp863",
	  "cp864": {
	    "type": "_sbcs",
	    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"
	  },
	  "ibm864": "cp864",
	  "csibm864": "cp864",
	  "cp865": {
	    "type": "_sbcs",
	    "chars": "ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "
	  },
	  "ibm865": "cp865",
	  "csibm865": "cp865",
	  "cp866": {
	    "type": "_sbcs",
	    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "
	  },
	  "ibm866": "cp866",
	  "csibm866": "cp866",
	  "cp869": {
	    "type": "_sbcs",
	    "chars": "������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "
	  },
	  "ibm869": "cp869",
	  "csibm869": "cp869",
	  "cp922": {
	    "type": "_sbcs",
	    "chars": " ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"
	  },
	  "ibm922": "cp922",
	  "csibm922": "cp922",
	  "cp1046": {
	    "type": "_sbcs",
	    "chars": "ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"
	  },
	  "ibm1046": "cp1046",
	  "csibm1046": "cp1046",
	  "cp1124": {
	    "type": "_sbcs",
	    "chars": " ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"
	  },
	  "ibm1124": "cp1124",
	  "csibm1124": "cp1124",
	  "cp1125": {
	    "type": "_sbcs",
	    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "
	  },
	  "ibm1125": "cp1125",
	  "csibm1125": "cp1125",
	  "cp1129": {
	    "type": "_sbcs",
	    "chars": " ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
	  },
	  "ibm1129": "cp1129",
	  "csibm1129": "cp1129",
	  "cp1133": {
	    "type": "_sbcs",
	    "chars": " ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"
	  },
	  "ibm1133": "cp1133",
	  "csibm1133": "cp1133",
	  "cp1161": {
	    "type": "_sbcs",
	    "chars": "��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "
	  },
	  "ibm1161": "cp1161",
	  "csibm1161": "cp1161",
	  "cp1162": {
	    "type": "_sbcs",
	    "chars": "€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
	  },
	  "ibm1162": "cp1162",
	  "csibm1162": "cp1162",
	  "cp1163": {
	    "type": "_sbcs",
	    "chars": " ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"
	  },
	  "ibm1163": "cp1163",
	  "csibm1163": "cp1163",
	  "maccroatian": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"
	  },
	  "maccyrillic": {
	    "type": "_sbcs",
	    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
	  },
	  "macgreek": {
	    "type": "_sbcs",
	    "chars": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"
	  },
	  "maciceland": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
	  },
	  "macroman": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
	  },
	  "macromania": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
	  },
	  "macthai": {
	    "type": "_sbcs",
	    "chars": "«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"
	  },
	  "macturkish": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"
	  },
	  "macukraine": {
	    "type": "_sbcs",
	    "chars": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"
	  },
	  "koi8r": {
	    "type": "_sbcs",
	    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
	  },
	  "koi8u": {
	    "type": "_sbcs",
	    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
	  },
	  "koi8ru": {
	    "type": "_sbcs",
	    "chars": "─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
	  },
	  "koi8t": {
	    "type": "_sbcs",
	    "chars": "қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"
	  },
	  "armscii8": {
	    "type": "_sbcs",
	    "chars": " �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"
	  },
	  "rk1048": {
	    "type": "_sbcs",
	    "chars": "ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
	  },
	  "tcvn": {
	    "type": "_sbcs",
	    "chars": "\u0000ÚỤ\u0003ỪỬỮ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010ỨỰỲỶỸÝỴ\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"
	  },
	  "georgianacademy": {
	    "type": "_sbcs",
	    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
	  },
	  "georgianps": {
	    "type": "_sbcs",
	    "chars": "‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"
	  },
	  "pt154": {
	    "type": "_sbcs",
	    "chars": "ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
	  },
	  "viscii": {
	    "type": "_sbcs",
	    "chars": "\u0000\u0001Ẳ\u0003\u0004ẴẪ\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013Ỷ\u0015\u0016\u0017\u0018Ỹ\u001a\u001b\u001c\u001dỴ\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"
	  },
	  "iso646cn": {
	    "type": "_sbcs",
	    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
	  },
	  "iso646jp": {
	    "type": "_sbcs",
	    "chars": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"
	  },
	  "hproman8": {
	    "type": "_sbcs",
	    "chars": " ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"
	  },
	  "macintosh": {
	    "type": "_sbcs",
	    "chars": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"
	  },
	  "ascii": {
	    "type": "_sbcs",
	    "chars": "��������������������������������������������������������������������������������������������������������������������������������"
	  },
	  "tis620": {
	    "type": "_sbcs",
	    "chars": "���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"
	  }
	};

/***/ },
/* 51 */
/***/ function(module, exports) {

	"use strict";
	
	// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.
	// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.
	// To save memory and loading time, we read table files only when requested.
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports._dbcs = DBCSCodec;
	
	var UNASSIGNED = -1,
	    GB18030_CODE = -2,
	    SEQ_START = -10,
	    NODE_START = -1000,
	    UNASSIGNED_NODE = new Array(0x100),
	    DEF_CHAR = -1;
	
	for (var i = 0; i < 0x100; i++) {
	    UNASSIGNED_NODE[i] = UNASSIGNED;
	} // Class DBCSCodec reads and initializes mapping tables.
	function DBCSCodec(codecOptions, iconv) {
	    this.encodingName = codecOptions.encodingName;
	    if (!codecOptions) throw new Error("DBCS codec is called without the data.");
	    if (!codecOptions.table) throw new Error("Encoding '" + this.encodingName + "' has no data.");
	
	    // Load tables.
	    var mappingTable = codecOptions.table();
	
	    // Decode tables: MBCS -> Unicode.
	
	    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.
	    // Trie root is decodeTables[0].
	    // Values: >=  0 -> unicode character code. can be > 0xFFFF
	    //         == UNASSIGNED -> unknown/unassigned sequence.
	    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.
	    //         <= NODE_START -> index of the next node in our trie to process next byte.
	    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.
	    this.decodeTables = [];
	    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.
	
	    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here.
	    this.decodeTableSeq = [];
	
	    // Actual mapping tables consist of chunks. Use them to fill up decode tables.
	    for (var i = 0; i < mappingTable.length; i++) {
	        this._addDecodeChunk(mappingTable[i]);
	    }this.defaultCharUnicode = iconv.defaultCharUnicode;
	
	    // Encode tables: Unicode -> DBCS.
	
	    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.
	    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.
	    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).
	    //         == UNASSIGNED -> no conversion found. Output a default char.
	    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.
	    this.encodeTable = [];
	
	    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of
	    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key
	    // means end of sequence (needed when one sequence is a strict subsequence of another).
	    // Objects are kept separately from encodeTable to increase performance.
	    this.encodeTableSeq = [];
	
	    // Some chars can be decoded, but need not be encoded.
	    var skipEncodeChars = {};
	    if (codecOptions.encodeSkipVals) for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {
	        var val = codecOptions.encodeSkipVals[i];
	        if (typeof val === 'number') skipEncodeChars[val] = true;else for (var j = val.from; j <= val.to; j++) {
	            skipEncodeChars[j] = true;
	        }
	    }
	
	    // Use decode trie to recursively fill out encode tables.
	    this._fillEncodeTable(0, 0, skipEncodeChars);
	
	    // Add more encoding pairs when needed.
	    if (codecOptions.encodeAdd) {
	        for (var uChar in codecOptions.encodeAdd) {
	            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar)) this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);
	        }
	    }
	
	    this.defCharSB = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];
	    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];
	    if (this.defCharSB === UNASSIGNED) this.defCharSB = "?".charCodeAt(0);
	
	    // Load & create GB18030 tables when needed.
	    if (typeof codecOptions.gb18030 === 'function') {
	        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.
	
	        // Add GB18030 decode tables.
	        var thirdByteNodeIdx = this.decodeTables.length;
	        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);
	
	        var fourthByteNodeIdx = this.decodeTables.length;
	        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);
	
	        for (var i = 0x81; i <= 0xFE; i++) {
	            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];
	            var secondByteNode = this.decodeTables[secondByteNodeIdx];
	            for (var j = 0x30; j <= 0x39; j++) {
	                secondByteNode[j] = NODE_START - thirdByteNodeIdx;
	            }
	        }
	        for (var i = 0x81; i <= 0xFE; i++) {
	            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;
	        }for (var i = 0x30; i <= 0x39; i++) {
	            fourthByteNode[i] = GB18030_CODE;
	        }
	    }
	}
	
	DBCSCodec.prototype.encoder = DBCSEncoder;
	DBCSCodec.prototype.decoder = DBCSDecoder;
	
	// Decoder helpers
	DBCSCodec.prototype._getDecodeTrieNode = function (addr) {
	    var bytes = [];
	    for (; addr > 0; addr >>= 8) {
	        bytes.push(addr & 0xFF);
	    }if (bytes.length == 0) bytes.push(0);
	
	    var node = this.decodeTables[0];
	    for (var i = bytes.length - 1; i > 0; i--) {
	        // Traverse nodes deeper into the trie.
	        var val = node[bytes[i]];
	
	        if (val == UNASSIGNED) {
	            // Create new node.
	            node[bytes[i]] = NODE_START - this.decodeTables.length;
	            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));
	        } else if (val <= NODE_START) {
	            // Existing node.
	            node = this.decodeTables[NODE_START - val];
	        } else throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + addr.toString(16));
	    }
	    return node;
	};
	
	DBCSCodec.prototype._addDecodeChunk = function (chunk) {
	    // First element of chunk is the hex mbcs code where we start.
	    var curAddr = parseInt(chunk[0], 16);
	
	    // Choose the decoding node where we'll write our chars.
	    var writeTable = this._getDecodeTrieNode(curAddr);
	    curAddr = curAddr & 0xFF;
	
	    // Write all other elements of the chunk to the table.
	    for (var k = 1; k < chunk.length; k++) {
	        var part = chunk[k];
	        if (typeof part === "string") {
	            // String, write as-is.
	            for (var l = 0; l < part.length;) {
	                var code = part.charCodeAt(l++);
	                if (0xD800 <= code && code < 0xDC00) {
	                    // Decode surrogate
	                    var codeTrail = part.charCodeAt(l++);
	                    if (0xDC00 <= codeTrail && codeTrail < 0xE000) writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);else throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + chunk[0]);
	                } else if (0x0FF0 < code && code <= 0x0FFF) {
	                    // Character sequence (our own encoding used)
	                    var len = 0xFFF - code + 2;
	                    var seq = [];
	                    for (var m = 0; m < len; m++) {
	                        seq.push(part.charCodeAt(l++));
	                    } // Simple variation: don't support surrogates or subsequences in seq.
	
	                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;
	                    this.decodeTableSeq.push(seq);
	                } else writeTable[curAddr++] = code; // Basic char
	            }
	        } else if (typeof part === "number") {
	                // Integer, meaning increasing sequence starting with prev character.
	                var charCode = writeTable[curAddr - 1] + 1;
	                for (var l = 0; l < part; l++) {
	                    writeTable[curAddr++] = charCode++;
	                }
	            } else throw new Error("Incorrect type '" + (typeof part === "undefined" ? "undefined" : _typeof(part)) + "' given in " + this.encodingName + " at chunk " + chunk[0]);
	    }
	    if (curAddr > 0xFF) throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + chunk[0] + ": too long" + curAddr);
	};
	
	// Encoder helpers
	DBCSCodec.prototype._getEncodeBucket = function (uCode) {
	    var high = uCode >> 8; // This could be > 0xFF because of astral characters.
	    if (this.encodeTable[high] === undefined) this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.
	    return this.encodeTable[high];
	};
	
	DBCSCodec.prototype._setEncodeChar = function (uCode, dbcsCode) {
	    var bucket = this._getEncodeBucket(uCode);
	    var low = uCode & 0xFF;
	    if (bucket[low] <= SEQ_START) this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.
	    else if (bucket[low] == UNASSIGNED) bucket[low] = dbcsCode;
	};
	
	DBCSCodec.prototype._setEncodeSequence = function (seq, dbcsCode) {
	
	    // Get the root of character tree according to first character of the sequence.
	    var uCode = seq[0];
	    var bucket = this._getEncodeBucket(uCode);
	    var low = uCode & 0xFF;
	
	    var node;
	    if (bucket[low] <= SEQ_START) {
	        // There's already a sequence with  - use it.
	        node = this.encodeTableSeq[SEQ_START - bucket[low]];
	    } else {
	        // There was no sequence object - allocate a new one.
	        node = {};
	        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.
	        bucket[low] = SEQ_START - this.encodeTableSeq.length;
	        this.encodeTableSeq.push(node);
	    }
	
	    // Traverse the character tree, allocating new nodes as needed.
	    for (var j = 1; j < seq.length - 1; j++) {
	        var oldVal = node[uCode];
	        if ((typeof oldVal === "undefined" ? "undefined" : _typeof(oldVal)) === 'object') node = oldVal;else {
	            node = node[uCode] = {};
	            if (oldVal !== undefined) node[DEF_CHAR] = oldVal;
	        }
	    }
	
	    // Set the leaf to given dbcsCode.
	    uCode = seq[seq.length - 1];
	    node[uCode] = dbcsCode;
	};
	
	DBCSCodec.prototype._fillEncodeTable = function (nodeIdx, prefix, skipEncodeChars) {
	    var node = this.decodeTables[nodeIdx];
	    for (var i = 0; i < 0x100; i++) {
	        var uCode = node[i];
	        var mbCode = prefix + i;
	        if (skipEncodeChars[mbCode]) continue;
	
	        if (uCode >= 0) this._setEncodeChar(uCode, mbCode);else if (uCode <= NODE_START) this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);else if (uCode <= SEQ_START) this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);
	    }
	};
	
	// == Encoder ==================================================================
	
	function DBCSEncoder(options, codec) {
	    // Encoder state
	    this.leadSurrogate = -1;
	    this.seqObj = undefined;
	
	    // Static data
	    this.encodeTable = codec.encodeTable;
	    this.encodeTableSeq = codec.encodeTableSeq;
	    this.defaultCharSingleByte = codec.defCharSB;
	    this.gb18030 = codec.gb18030;
	}
	
	DBCSEncoder.prototype.write = function (str) {
	    var newBuf = new Buffer(str.length * (this.gb18030 ? 4 : 3)),
	        leadSurrogate = this.leadSurrogate,
	        seqObj = this.seqObj,
	        nextChar = -1,
	        i = 0,
	        j = 0;
	
	    while (true) {
	        // 0. Get next character.
	        if (nextChar === -1) {
	            if (i == str.length) break;
	            var uCode = str.charCodeAt(i++);
	        } else {
	            var uCode = nextChar;
	            nextChar = -1;
	        }
	
	        // 1. Handle surrogates.
	        if (0xD800 <= uCode && uCode < 0xE000) {
	            // Char is one of surrogates.
	            if (uCode < 0xDC00) {
	                // We've got lead surrogate.
	                if (leadSurrogate === -1) {
	                    leadSurrogate = uCode;
	                    continue;
	                } else {
	                    leadSurrogate = uCode;
	                    // Double lead surrogate found.
	                    uCode = UNASSIGNED;
	                }
	            } else {
	                // We've got trail surrogate.
	                if (leadSurrogate !== -1) {
	                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);
	                    leadSurrogate = -1;
	                } else {
	                    // Incomplete surrogate pair - only trail surrogate found.
	                    uCode = UNASSIGNED;
	                }
	            }
	        } else if (leadSurrogate !== -1) {
	            // Incomplete surrogate pair - only lead surrogate found.
	            nextChar = uCode;uCode = UNASSIGNED; // Write an error, then current char.
	            leadSurrogate = -1;
	        }
	
	        // 2. Convert uCode character.
	        var dbcsCode = UNASSIGNED;
	        if (seqObj !== undefined && uCode != UNASSIGNED) {
	            // We are in the middle of the sequence
	            var resCode = seqObj[uCode];
	            if ((typeof resCode === "undefined" ? "undefined" : _typeof(resCode)) === 'object') {
	                // Sequence continues.
	                seqObj = resCode;
	                continue;
	            } else if (typeof resCode == 'number') {
	                // Sequence finished. Write it.
	                dbcsCode = resCode;
	            } else if (resCode == undefined) {
	                // Current character is not part of the sequence.
	
	                // Try default character for this sequence
	                resCode = seqObj[DEF_CHAR];
	                if (resCode !== undefined) {
	                    dbcsCode = resCode; // Found. Write it.
	                    nextChar = uCode; // Current character will be written too in the next iteration.
	                } else {
	                        // TODO: What if we have no default? (resCode == undefined)
	                        // Then, we should write first char of the sequence as-is and try the rest recursively.
	                        // Didn't do it for now because no encoding has this situation yet.
	                        // Currently, just skip the sequence and write current char.
	                    }
	            }
	            seqObj = undefined;
	        } else if (uCode >= 0) {
	            // Regular character
	            var subtable = this.encodeTable[uCode >> 8];
	            if (subtable !== undefined) dbcsCode = subtable[uCode & 0xFF];
	
	            if (dbcsCode <= SEQ_START) {
	                // Sequence start
	                seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];
	                continue;
	            }
	
	            if (dbcsCode == UNASSIGNED && this.gb18030) {
	                // Use GB18030 algorithm to find character(s) to write.
	                var idx = findIdx(this.gb18030.uChars, uCode);
	                if (idx != -1) {
	                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);
	                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600);dbcsCode = dbcsCode % 12600;
	                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260);dbcsCode = dbcsCode % 1260;
	                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10);dbcsCode = dbcsCode % 10;
	                    newBuf[j++] = 0x30 + dbcsCode;
	                    continue;
	                }
	            }
	        }
	
	        // 3. Write dbcsCode character.
	        if (dbcsCode === UNASSIGNED) dbcsCode = this.defaultCharSingleByte;
	
	        if (dbcsCode < 0x100) {
	            newBuf[j++] = dbcsCode;
	        } else if (dbcsCode < 0x10000) {
	            newBuf[j++] = dbcsCode >> 8; // high byte
	            newBuf[j++] = dbcsCode & 0xFF; // low byte
	        } else {
	                newBuf[j++] = dbcsCode >> 16;
	                newBuf[j++] = dbcsCode >> 8 & 0xFF;
	                newBuf[j++] = dbcsCode & 0xFF;
	            }
	    }
	
	    this.seqObj = seqObj;
	    this.leadSurrogate = leadSurrogate;
	    return newBuf.slice(0, j);
	};
	
	DBCSEncoder.prototype.end = function () {
	    if (this.leadSurrogate === -1 && this.seqObj === undefined) return; // All clean. Most often case.
	
	    var newBuf = new Buffer(10),
	        j = 0;
	
	    if (this.seqObj) {
	        // We're in the sequence.
	        var dbcsCode = this.seqObj[DEF_CHAR];
	        if (dbcsCode !== undefined) {
	            // Write beginning of the sequence.
	            if (dbcsCode < 0x100) {
	                newBuf[j++] = dbcsCode;
	            } else {
	                newBuf[j++] = dbcsCode >> 8; // high byte
	                newBuf[j++] = dbcsCode & 0xFF; // low byte
	            }
	        } else {
	                // See todo above.
	            }
	        this.seqObj = undefined;
	    }
	
	    if (this.leadSurrogate !== -1) {
	        // Incomplete surrogate pair - only lead surrogate found.
	        newBuf[j++] = this.defaultCharSingleByte;
	        this.leadSurrogate = -1;
	    }
	
	    return newBuf.slice(0, j);
	};
	
	// Export for testing
	DBCSEncoder.prototype.findIdx = findIdx;
	
	// == Decoder ==================================================================
	
	function DBCSDecoder(options, codec) {
	    // Decoder state
	    this.nodeIdx = 0;
	    this.prevBuf = new Buffer(0);
	
	    // Static data
	    this.decodeTables = codec.decodeTables;
	    this.decodeTableSeq = codec.decodeTableSeq;
	    this.defaultCharUnicode = codec.defaultCharUnicode;
	    this.gb18030 = codec.gb18030;
	}
	
	DBCSDecoder.prototype.write = function (buf) {
	    var newBuf = new Buffer(buf.length * 2),
	        nodeIdx = this.nodeIdx,
	        prevBuf = this.prevBuf,
	        prevBufOffset = this.prevBuf.length,
	        seqStart = -this.prevBuf.length,
	        // idx of the start of current parsed sequence.
	    uCode;
	
	    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.
	        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);
	
	    for (var i = 0, j = 0; i < buf.length; i++) {
	        var curByte = i >= 0 ? buf[i] : prevBuf[i + prevBufOffset];
	
	        // Lookup in current trie node.
	        var uCode = this.decodeTables[nodeIdx][curByte];
	
	        if (uCode >= 0) {
	            // Normal character, just use it.
	        } else if (uCode === UNASSIGNED) {
	                // Unknown char.
	                // TODO: Callback with seq.
	                //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);
	                i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).
	                uCode = this.defaultCharUnicode.charCodeAt(0);
	            } else if (uCode === GB18030_CODE) {
	                var curSeq = seqStart >= 0 ? buf.slice(seqStart, i + 1) : prevBuf.slice(seqStart + prevBufOffset, i + 1 + prevBufOffset);
	                var ptr = (curSeq[0] - 0x81) * 12600 + (curSeq[1] - 0x30) * 1260 + (curSeq[2] - 0x81) * 10 + (curSeq[3] - 0x30);
	                var idx = findIdx(this.gb18030.gbChars, ptr);
	                uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];
	            } else if (uCode <= NODE_START) {
	                // Go to next trie node.
	                nodeIdx = NODE_START - uCode;
	                continue;
	            } else if (uCode <= SEQ_START) {
	                // Output a sequence of chars.
	                var seq = this.decodeTableSeq[SEQ_START - uCode];
	                for (var k = 0; k < seq.length - 1; k++) {
	                    uCode = seq[k];
	                    newBuf[j++] = uCode & 0xFF;
	                    newBuf[j++] = uCode >> 8;
	                }
	                uCode = seq[seq.length - 1];
	            } else throw new Error("iconv-lite internal error: invalid decoding table value " + uCode + " at " + nodeIdx + "/" + curByte);
	
	        // Write the character to buffer, handling higher planes using surrogate pair.
	        if (uCode > 0xFFFF) {
	            uCode -= 0x10000;
	            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);
	            newBuf[j++] = uCodeLead & 0xFF;
	            newBuf[j++] = uCodeLead >> 8;
	
	            uCode = 0xDC00 + uCode % 0x400;
	        }
	        newBuf[j++] = uCode & 0xFF;
	        newBuf[j++] = uCode >> 8;
	
	        // Reset trie node.
	        nodeIdx = 0;seqStart = i + 1;
	    }
	
	    this.nodeIdx = nodeIdx;
	    this.prevBuf = seqStart >= 0 ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);
	    return newBuf.slice(0, j).toString('ucs2');
	};
	
	DBCSDecoder.prototype.end = function () {
	    var ret = '';
	
	    // Try to parse all remaining chars.
	    while (this.prevBuf.length > 0) {
	        // Skip 1 character in the buffer.
	        ret += this.defaultCharUnicode;
	        var buf = this.prevBuf.slice(1);
	
	        // Parse remaining as usual.
	        this.prevBuf = new Buffer(0);
	        this.nodeIdx = 0;
	        if (buf.length > 0) ret += this.write(buf);
	    }
	
	    this.nodeIdx = 0;
	    return ret;
	};
	
	// Binary search for GB18030. Returns largest i such that table[i] <= val.
	function findIdx(table, val) {
	    if (table[0] > val) return -1;
	
	    var l = 0,
	        r = table.length;
	    while (l < r - 1) {
	        // always table[l] <= val < table[r]
	        var mid = l + Math.floor((r - l + 1) / 2);
	        if (table[mid] <= val) l = mid;else r = mid;
	    }
	    return l;
	}

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	// Description of supported double byte encodings and aliases.
	// Tables are not require()-d until they are needed to speed up library load.
	// require()-s are direct to support Browserify.
	
	module.exports = {
	
	    // == Japanese/ShiftJIS ====================================================
	    // All japanese encodings are based on JIS X set of standards:
	    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.
	    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes.
	    //              Has several variations in 1978, 1983, 1990 and 1997.
	    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
	    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
	    //              2 planes, first is superset of 0208, second - revised 0212.
	    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
	
	    // Byte encodings are:
	    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
	    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
	    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
	    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
	    //               0x00-0x7F       - lower part of 0201
	    //               0x8E, 0xA1-0xDF - upper part of 0201
	    //               (0xA1-0xFE)x2   - 0208 plane (94x94).
	    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
	    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
	    //               Used as-is in ISO2022 family.
	    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII,
	    //                0201-1976 Roman, 0208-1978, 0208-1983.
	    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
	    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
	    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
	    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
	    //
	    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
	    //
	    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
	
	    'shiftjis': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(53);
	        },
	        encodeAdd: { '¥': 0x5C, '‾': 0x7E },
	        encodeSkipVals: [{ from: 0xED40, to: 0xF940 }]
	    },
	    'csshiftjis': 'shiftjis',
	    'mskanji': 'shiftjis',
	    'sjis': 'shiftjis',
	    'windows31j': 'shiftjis',
	    'xsjis': 'shiftjis',
	    'windows932': 'shiftjis',
	    '932': 'shiftjis',
	    'cp932': 'shiftjis',
	
	    'eucjp': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(54);
	        },
	        encodeAdd: { '¥': 0x5C, '‾': 0x7E }
	    },
	
	    // TODO: KDDI extension to Shift_JIS
	    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
	    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
	
	    // == Chinese/GBK ==========================================================
	    // http://en.wikipedia.org/wiki/GBK
	
	    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
	    'gb2312': 'cp936',
	    'gb231280': 'cp936',
	    'gb23121980': 'cp936',
	    'csgb2312': 'cp936',
	    'csiso58gb231280': 'cp936',
	    'euccn': 'cp936',
	    'isoir58': 'gbk',
	
	    // Microsoft's CP936 is a subset and approximation of GBK.
	    // TODO: Euro = 0x80 in cp936, but not in GBK (where it's valid but undefined)
	    'windows936': 'cp936',
	    '936': 'cp936',
	    'cp936': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(55);
	        }
	    },
	
	    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
	    'gbk': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(55).concat(__webpack_require__(56));
	        }
	    },
	    'xgbk': 'gbk',
	
	    // GB18030 is an algorithmic extension of GBK.
	    'gb18030': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(55).concat(__webpack_require__(56));
	        },
	        gb18030: function gb18030() {
	            return __webpack_require__(57);
	        }
	    },
	
	    'chinese': 'gb18030',
	
	    // TODO: Support GB18030 (~27000 chars + whole unicode mapping, cp54936)
	    // http://icu-project.org/docs/papers/gb18030.html
	    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
	    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
	
	    // == Korean ===============================================================
	    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
	    'windows949': 'cp949',
	    '949': 'cp949',
	    'cp949': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(58);
	        }
	    },
	
	    'cseuckr': 'cp949',
	    'csksc56011987': 'cp949',
	    'euckr': 'cp949',
	    'isoir149': 'cp949',
	    'korean': 'cp949',
	    'ksc56011987': 'cp949',
	    'ksc56011989': 'cp949',
	    'ksc5601': 'cp949',
	
	    // == Big5/Taiwan/Hong Kong ================================================
	    // There are lots of tables for Big5 and cp950. Please see the following links for history:
	    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
	    // Variations, in roughly number of defined chars:
	    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
	    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
	    //  * Big5-2003 (Taiwan standard) almost superset of cp950.
	    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
	    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard.
	    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
	    //    Plus, it has 4 combining sequences.
	    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
	    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
	    //    Implementations are not consistent within browsers; sometimes labeled as just big5.
	    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
	    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
	    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
	    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
	    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
	    //
	    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
	    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
	
	    'windows950': 'cp950',
	    '950': 'cp950',
	    'cp950': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(59);
	        }
	    },
	
	    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
	    'big5': 'big5hkscs',
	    'big5hkscs': {
	        type: '_dbcs',
	        table: function table() {
	            return __webpack_require__(59).concat(__webpack_require__(60));
	        },
	        encodeSkipVals: [0xa2cc]
	    },
	
	    'cnbig5': 'big5hkscs',
	    'csbig5': 'big5hkscs',
	    'xxbig5': 'big5hkscs'
	
	};

/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = [
		[
			"0",
			"\u0000",
			128
		],
		[
			"a1",
			"｡",
			62
		],
		[
			"8140",
			"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",
			9,
			"＋－±×"
		],
		[
			"8180",
			"÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"
		],
		[
			"81b8",
			"∈∋⊆⊇⊂⊃∪∩"
		],
		[
			"81c8",
			"∧∨￢⇒⇔∀∃"
		],
		[
			"81da",
			"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"
		],
		[
			"81f0",
			"Å‰♯♭♪†‡¶"
		],
		[
			"81fc",
			"◯"
		],
		[
			"824f",
			"０",
			9
		],
		[
			"8260",
			"Ａ",
			25
		],
		[
			"8281",
			"ａ",
			25
		],
		[
			"829f",
			"ぁ",
			82
		],
		[
			"8340",
			"ァ",
			62
		],
		[
			"8380",
			"ム",
			22
		],
		[
			"839f",
			"Α",
			16,
			"Σ",
			6
		],
		[
			"83bf",
			"α",
			16,
			"σ",
			6
		],
		[
			"8440",
			"А",
			5,
			"ЁЖ",
			25
		],
		[
			"8470",
			"а",
			5,
			"ёж",
			7
		],
		[
			"8480",
			"о",
			17
		],
		[
			"849f",
			"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"
		],
		[
			"8740",
			"①",
			19,
			"Ⅰ",
			9
		],
		[
			"875f",
			"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"
		],
		[
			"877e",
			"㍻"
		],
		[
			"8780",
			"〝〟№㏍℡㊤",
			4,
			"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"
		],
		[
			"889f",
			"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"
		],
		[
			"8940",
			"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"
		],
		[
			"8980",
			"園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"
		],
		[
			"8a40",
			"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"
		],
		[
			"8a80",
			"橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"
		],
		[
			"8b40",
			"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"
		],
		[
			"8b80",
			"朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"
		],
		[
			"8c40",
			"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"
		],
		[
			"8c80",
			"劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"
		],
		[
			"8d40",
			"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"
		],
		[
			"8d80",
			"項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"
		],
		[
			"8e40",
			"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"
		],
		[
			"8e80",
			"死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"
		],
		[
			"8f40",
			"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"
		],
		[
			"8f80",
			"準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"
		],
		[
			"9040",
			"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"
		],
		[
			"9080",
			"逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"
		],
		[
			"9140",
			"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"
		],
		[
			"9180",
			"操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"
		],
		[
			"9240",
			"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"
		],
		[
			"9280",
			"逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"
		],
		[
			"9340",
			"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"
		],
		[
			"9380",
			"凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"
		],
		[
			"9440",
			"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"
		],
		[
			"9480",
			"楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"
		],
		[
			"9540",
			"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"
		],
		[
			"9580",
			"斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"
		],
		[
			"9640",
			"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"
		],
		[
			"9680",
			"摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"
		],
		[
			"9740",
			"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"
		],
		[
			"9780",
			"沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"
		],
		[
			"9840",
			"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"
		],
		[
			"989f",
			"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"
		],
		[
			"9940",
			"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"
		],
		[
			"9980",
			"凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"
		],
		[
			"9a40",
			"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"
		],
		[
			"9a80",
			"噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"
		],
		[
			"9b40",
			"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"
		],
		[
			"9b80",
			"它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"
		],
		[
			"9c40",
			"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"
		],
		[
			"9c80",
			"怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"
		],
		[
			"9d40",
			"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"
		],
		[
			"9d80",
			"捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"
		],
		[
			"9e40",
			"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"
		],
		[
			"9e80",
			"梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"
		],
		[
			"9f40",
			"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"
		],
		[
			"9f80",
			"麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"
		],
		[
			"e040",
			"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"
		],
		[
			"e080",
			"烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"
		],
		[
			"e140",
			"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"
		],
		[
			"e180",
			"痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"
		],
		[
			"e240",
			"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"
		],
		[
			"e280",
			"窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"
		],
		[
			"e340",
			"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"
		],
		[
			"e380",
			"縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"
		],
		[
			"e440",
			"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"
		],
		[
			"e480",
			"艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"
		],
		[
			"e540",
			"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"
		],
		[
			"e580",
			"蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"
		],
		[
			"e640",
			"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"
		],
		[
			"e680",
			"諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"
		],
		[
			"e740",
			"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"
		],
		[
			"e780",
			"轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"
		],
		[
			"e840",
			"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"
		],
		[
			"e880",
			"閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"
		],
		[
			"e940",
			"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"
		],
		[
			"e980",
			"騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"
		],
		[
			"ea40",
			"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"
		],
		[
			"ea80",
			"黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"
		],
		[
			"ed40",
			"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"
		],
		[
			"ed80",
			"塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"
		],
		[
			"ee40",
			"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"
		],
		[
			"ee80",
			"蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"
		],
		[
			"eeef",
			"ⅰ",
			9,
			"￢￤＇＂"
		],
		[
			"f040",
			"",
			62
		],
		[
			"f080",
			"",
			124
		],
		[
			"f140",
			"",
			62
		],
		[
			"f180",
			"",
			124
		],
		[
			"f240",
			"",
			62
		],
		[
			"f280",
			"",
			124
		],
		[
			"f340",
			"",
			62
		],
		[
			"f380",
			"",
			124
		],
		[
			"f440",
			"",
			62
		],
		[
			"f480",
			"",
			124
		],
		[
			"f540",
			"",
			62
		],
		[
			"f580",
			"",
			124
		],
		[
			"f640",
			"",
			62
		],
		[
			"f680",
			"",
			124
		],
		[
			"f740",
			"",
			62
		],
		[
			"f780",
			"",
			124
		],
		[
			"f840",
			"",
			62
		],
		[
			"f880",
			"",
			124
		],
		[
			"f940",
			""
		],
		[
			"fa40",
			"ⅰ",
			9,
			"Ⅰ",
			9,
			"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"
		],
		[
			"fa80",
			"兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"
		],
		[
			"fb40",
			"涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"
		],
		[
			"fb80",
			"祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"
		],
		[
			"fc40",
			"髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"
		]
	];

/***/ },
/* 54 */
/***/ function(module, exports) {

	module.exports = [
		[
			"0",
			"\u0000",
			127
		],
		[
			"8ea1",
			"｡",
			62
		],
		[
			"a1a1",
			"　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",
			9,
			"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"
		],
		[
			"a2a1",
			"◆□■△▲▽▼※〒→←↑↓〓"
		],
		[
			"a2ba",
			"∈∋⊆⊇⊂⊃∪∩"
		],
		[
			"a2ca",
			"∧∨￢⇒⇔∀∃"
		],
		[
			"a2dc",
			"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"
		],
		[
			"a2f2",
			"Å‰♯♭♪†‡¶"
		],
		[
			"a2fe",
			"◯"
		],
		[
			"a3b0",
			"０",
			9
		],
		[
			"a3c1",
			"Ａ",
			25
		],
		[
			"a3e1",
			"ａ",
			25
		],
		[
			"a4a1",
			"ぁ",
			82
		],
		[
			"a5a1",
			"ァ",
			85
		],
		[
			"a6a1",
			"Α",
			16,
			"Σ",
			6
		],
		[
			"a6c1",
			"α",
			16,
			"σ",
			6
		],
		[
			"a7a1",
			"А",
			5,
			"ЁЖ",
			25
		],
		[
			"a7d1",
			"а",
			5,
			"ёж",
			25
		],
		[
			"a8a1",
			"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"
		],
		[
			"ada1",
			"①",
			19,
			"Ⅰ",
			9
		],
		[
			"adc0",
			"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"
		],
		[
			"addf",
			"㍻〝〟№㏍℡㊤",
			4,
			"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"
		],
		[
			"b0a1",
			"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"
		],
		[
			"b1a1",
			"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"
		],
		[
			"b2a1",
			"押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"
		],
		[
			"b3a1",
			"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"
		],
		[
			"b4a1",
			"粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"
		],
		[
			"b5a1",
			"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"
		],
		[
			"b6a1",
			"供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"
		],
		[
			"b7a1",
			"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"
		],
		[
			"b8a1",
			"検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"
		],
		[
			"b9a1",
			"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"
		],
		[
			"baa1",
			"此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"
		],
		[
			"bba1",
			"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"
		],
		[
			"bca1",
			"次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"
		],
		[
			"bda1",
			"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"
		],
		[
			"bea1",
			"勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"
		],
		[
			"bfa1",
			"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"
		],
		[
			"c0a1",
			"澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"
		],
		[
			"c1a1",
			"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"
		],
		[
			"c2a1",
			"臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"
		],
		[
			"c3a1",
			"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"
		],
		[
			"c4a1",
			"帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"
		],
		[
			"c5a1",
			"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"
		],
		[
			"c6a1",
			"董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"
		],
		[
			"c7a1",
			"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"
		],
		[
			"c8a1",
			"函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"
		],
		[
			"c9a1",
			"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"
		],
		[
			"caa1",
			"福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"
		],
		[
			"cba1",
			"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"
		],
		[
			"cca1",
			"漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"
		],
		[
			"cda1",
			"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"
		],
		[
			"cea1",
			"痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"
		],
		[
			"cfa1",
			"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"
		],
		[
			"d0a1",
			"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"
		],
		[
			"d1a1",
			"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"
		],
		[
			"d2a1",
			"辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"
		],
		[
			"d3a1",
			"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"
		],
		[
			"d4a1",
			"圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"
		],
		[
			"d5a1",
			"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"
		],
		[
			"d6a1",
			"屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"
		],
		[
			"d7a1",
			"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"
		],
		[
			"d8a1",
			"悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"
		],
		[
			"d9a1",
			"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"
		],
		[
			"daa1",
			"據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"
		],
		[
			"dba1",
			"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"
		],
		[
			"dca1",
			"棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"
		],
		[
			"dda1",
			"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"
		],
		[
			"dea1",
			"沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"
		],
		[
			"dfa1",
			"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"
		],
		[
			"e0a1",
			"燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"
		],
		[
			"e1a1",
			"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"
		],
		[
			"e2a1",
			"癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"
		],
		[
			"e3a1",
			"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"
		],
		[
			"e4a1",
			"筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"
		],
		[
			"e5a1",
			"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"
		],
		[
			"e6a1",
			"罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"
		],
		[
			"e7a1",
			"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"
		],
		[
			"e8a1",
			"茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"
		],
		[
			"e9a1",
			"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"
		],
		[
			"eaa1",
			"蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"
		],
		[
			"eba1",
			"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"
		],
		[
			"eca1",
			"譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"
		],
		[
			"eda1",
			"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"
		],
		[
			"eea1",
			"遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"
		],
		[
			"efa1",
			"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"
		],
		[
			"f0a1",
			"陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"
		],
		[
			"f1a1",
			"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"
		],
		[
			"f2a1",
			"髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"
		],
		[
			"f3a1",
			"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"
		],
		[
			"f4a1",
			"堯槇遙瑤凜熙"
		],
		[
			"f9a1",
			"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"
		],
		[
			"faa1",
			"忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"
		],
		[
			"fba1",
			"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"
		],
		[
			"fca1",
			"釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"
		],
		[
			"fcf1",
			"ⅰ",
			9,
			"￢￤＇＂"
		],
		[
			"8fa2af",
			"˘ˇ¸˙˝¯˛˚～΄΅"
		],
		[
			"8fa2c2",
			"¡¦¿"
		],
		[
			"8fa2eb",
			"ºª©®™¤№"
		],
		[
			"8fa6e1",
			"ΆΈΉΊΪ"
		],
		[
			"8fa6e7",
			"Ό"
		],
		[
			"8fa6e9",
			"ΎΫ"
		],
		[
			"8fa6ec",
			"Ώ"
		],
		[
			"8fa6f1",
			"άέήίϊΐόςύϋΰώ"
		],
		[
			"8fa7c2",
			"Ђ",
			10,
			"ЎЏ"
		],
		[
			"8fa7f2",
			"ђ",
			10,
			"ўџ"
		],
		[
			"8fa9a1",
			"ÆĐ"
		],
		[
			"8fa9a4",
			"Ħ"
		],
		[
			"8fa9a6",
			"Ĳ"
		],
		[
			"8fa9a8",
			"ŁĿ"
		],
		[
			"8fa9ab",
			"ŊØŒ"
		],
		[
			"8fa9af",
			"ŦÞ"
		],
		[
			"8fa9c1",
			"æđðħıĳĸłŀŉŋøœßŧþ"
		],
		[
			"8faaa1",
			"ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"
		],
		[
			"8faaba",
			"ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"
		],
		[
			"8faba1",
			"áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"
		],
		[
			"8fabbd",
			"ġĥíìïîǐ"
		],
		[
			"8fabc5",
			"īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"
		],
		[
			"8fb0a1",
			"丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"
		],
		[
			"8fb1a1",
			"侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"
		],
		[
			"8fb2a1",
			"傒傓傔傖傛傜傞",
			4,
			"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"
		],
		[
			"8fb3a1",
			"凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"
		],
		[
			"8fb4a1",
			"匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"
		],
		[
			"8fb5a1",
			"咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"
		],
		[
			"8fb6a1",
			"嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",
			5,
			"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",
			4,
			"囱囫园"
		],
		[
			"8fb7a1",
			"囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",
			4,
			"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"
		],
		[
			"8fb8a1",
			"堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"
		],
		[
			"8fb9a1",
			"奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"
		],
		[
			"8fbaa1",
			"嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",
			4,
			"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"
		],
		[
			"8fbba1",
			"屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"
		],
		[
			"8fbca1",
			"巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",
			4,
			"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"
		],
		[
			"8fbda1",
			"彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",
			4,
			"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"
		],
		[
			"8fbea1",
			"悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",
			4,
			"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"
		],
		[
			"8fbfa1",
			"懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"
		],
		[
			"8fc0a1",
			"捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"
		],
		[
			"8fc1a1",
			"擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"
		],
		[
			"8fc2a1",
			"昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"
		],
		[
			"8fc3a1",
			"杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",
			4,
			"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"
		],
		[
			"8fc4a1",
			"棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"
		],
		[
			"8fc5a1",
			"樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"
		],
		[
			"8fc6a1",
			"歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"
		],
		[
			"8fc7a1",
			"泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"
		],
		[
			"8fc8a1",
			"湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"
		],
		[
			"8fc9a1",
			"濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",
			4,
			"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",
			4,
			"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"
		],
		[
			"8fcaa1",
			"煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"
		],
		[
			"8fcba1",
			"狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"
		],
		[
			"8fcca1",
			"珿琀琁琄琇琊琑琚琛琤琦琨",
			9,
			"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"
		],
		[
			"8fcda1",
			"甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",
			5,
			"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"
		],
		[
			"8fcea1",
			"瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",
			6,
			"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"
		],
		[
			"8fcfa1",
			"睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"
		],
		[
			"8fd0a1",
			"碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"
		],
		[
			"8fd1a1",
			"秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"
		],
		[
			"8fd2a1",
			"笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",
			5
		],
		[
			"8fd3a1",
			"籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"
		],
		[
			"8fd4a1",
			"綞綦綧綪綳綶綷綹緂",
			4,
			"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"
		],
		[
			"8fd5a1",
			"罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"
		],
		[
			"8fd6a1",
			"胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"
		],
		[
			"8fd7a1",
			"艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"
		],
		[
			"8fd8a1",
			"荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"
		],
		[
			"8fd9a1",
			"蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",
			4,
			"蕖蕙蕜",
			6,
			"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"
		],
		[
			"8fdaa1",
			"藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",
			4,
			"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"
		],
		[
			"8fdba1",
			"蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",
			6,
			"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"
		],
		[
			"8fdca1",
			"蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",
			4,
			"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"
		],
		[
			"8fdda1",
			"襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",
			4,
			"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"
		],
		[
			"8fdea1",
			"誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",
			4,
			"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"
		],
		[
			"8fdfa1",
			"貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"
		],
		[
			"8fe0a1",
			"踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"
		],
		[
			"8fe1a1",
			"轃轇轏轑",
			4,
			"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"
		],
		[
			"8fe2a1",
			"郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"
		],
		[
			"8fe3a1",
			"釂釃釅釓釔釗釙釚釞釤釥釩釪釬",
			5,
			"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",
			4,
			"鉻鉼鉽鉿銈銉銊銍銎銒銗"
		],
		[
			"8fe4a1",
			"銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",
			4,
			"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"
		],
		[
			"8fe5a1",
			"鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",
			4,
			"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"
		],
		[
			"8fe6a1",
			"镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"
		],
		[
			"8fe7a1",
			"霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"
		],
		[
			"8fe8a1",
			"頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",
			4,
			"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"
		],
		[
			"8fe9a1",
			"馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",
			4
		],
		[
			"8feaa1",
			"鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",
			4,
			"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"
		],
		[
			"8feba1",
			"鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",
			4,
			"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"
		],
		[
			"8feca1",
			"鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"
		],
		[
			"8feda1",
			"黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",
			4,
			"齓齕齖齗齘齚齝齞齨齩齭",
			4,
			"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"
		]
	];

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = [
		[
			"0",
			"\u0000",
			127,
			"€"
		],
		[
			"8140",
			"丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",
			5,
			"乲乴",
			9,
			"乿",
			6,
			"亇亊"
		],
		[
			"8180",
			"亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",
			6,
			"伋伌伒",
			4,
			"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",
			4,
			"佄佅佇",
			5,
			"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"
		],
		[
			"8240",
			"侤侫侭侰",
			4,
			"侶",
			8,
			"俀俁係俆俇俈俉俋俌俍俒",
			4,
			"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",
			11
		],
		[
			"8280",
			"個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",
			10,
			"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",
			4,
			"偖偗偘偙偛偝",
			7,
			"偦",
			5,
			"偭",
			8,
			"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",
			20,
			"傤傦傪傫傭",
			4,
			"傳",
			6,
			"傼"
		],
		[
			"8340",
			"傽",
			17,
			"僐",
			5,
			"僗僘僙僛",
			10,
			"僨僩僪僫僯僰僱僲僴僶",
			4,
			"僼",
			9,
			"儈"
		],
		[
			"8380",
			"儉儊儌",
			5,
			"儓",
			13,
			"儢",
			28,
			"兂兇兊兌兎兏児兒兓兗兘兙兛兝",
			4,
			"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",
			4,
			"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",
			5
		],
		[
			"8440",
			"凘凙凚凜凞凟凢凣凥",
			5,
			"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",
			5,
			"剋剎剏剒剓剕剗剘"
		],
		[
			"8480",
			"剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",
			9,
			"剾劀劃",
			4,
			"劉",
			6,
			"劑劒劔",
			6,
			"劜劤劥劦劧劮劯劰労",
			9,
			"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",
			5,
			"勠勡勢勣勥",
			10,
			"勱",
			7,
			"勻勼勽匁匂匃匄匇匉匊匋匌匎"
		],
		[
			"8540",
			"匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",
			9,
			"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"
		],
		[
			"8580",
			"厐",
			4,
			"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",
			6,
			"厷厸厹厺厼厽厾叀參",
			4,
			"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",
			4,
			"呣呥呧呩",
			7,
			"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"
		],
		[
			"8640",
			"咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",
			4,
			"哫哬哯哰哱哴",
			5,
			"哻哾唀唂唃唄唅唈唊",
			4,
			"唒唓唕",
			5,
			"唜唝唞唟唡唥唦"
		],
		[
			"8680",
			"唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",
			4,
			"啑啒啓啔啗",
			4,
			"啝啞啟啠啢啣啨啩啫啯",
			5,
			"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",
			6,
			"喨",
			8,
			"喲喴営喸喺喼喿",
			4,
			"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",
			4,
			"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",
			4,
			"嗿嘂嘃嘄嘅"
		],
		[
			"8740",
			"嘆嘇嘊嘋嘍嘐",
			7,
			"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",
			11,
			"噏",
			4,
			"噕噖噚噛噝",
			4
		],
		[
			"8780",
			"噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",
			7,
			"嚇",
			6,
			"嚐嚑嚒嚔",
			14,
			"嚤",
			10,
			"嚰",
			6,
			"嚸嚹嚺嚻嚽",
			12,
			"囋",
			8,
			"囕囖囘囙囜団囥",
			5,
			"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",
			6
		],
		[
			"8840",
			"園",
			9,
			"圝圞圠圡圢圤圥圦圧圫圱圲圴",
			4,
			"圼圽圿坁坃坄坅坆坈坉坋坒",
			4,
			"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"
		],
		[
			"8880",
			"垁垇垈垉垊垍",
			4,
			"垔",
			6,
			"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",
			8,
			"埄",
			6,
			"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",
			7,
			"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",
			4,
			"堫",
			4,
			"報堲堳場堶",
			7
		],
		[
			"8940",
			"堾",
			5,
			"塅",
			6,
			"塎塏塐塒塓塕塖塗塙",
			4,
			"塟",
			5,
			"塦",
			4,
			"塭",
			16,
			"塿墂墄墆墇墈墊墋墌"
		],
		[
			"8980",
			"墍",
			4,
			"墔",
			4,
			"墛墜墝墠",
			7,
			"墪",
			17,
			"墽墾墿壀壂壃壄壆",
			10,
			"壒壓壔壖",
			13,
			"壥",
			5,
			"壭壯壱売壴壵壷壸壺",
			7,
			"夃夅夆夈",
			4,
			"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"
		],
		[
			"8a40",
			"夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",
			4,
			"奡奣奤奦",
			12,
			"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"
		],
		[
			"8a80",
			"妧妬妭妰妱妳",
			5,
			"妺妼妽妿",
			6,
			"姇姈姉姌姍姎姏姕姖姙姛姞",
			4,
			"姤姦姧姩姪姫姭",
			11,
			"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",
			6,
			"娳娵娷",
			4,
			"娽娾娿婁",
			4,
			"婇婈婋",
			9,
			"婖婗婘婙婛",
			5
		],
		[
			"8b40",
			"婡婣婤婥婦婨婩婫",
			8,
			"婸婹婻婼婽婾媀",
			17,
			"媓",
			6,
			"媜",
			13,
			"媫媬"
		],
		[
			"8b80",
			"媭",
			4,
			"媴媶媷媹",
			4,
			"媿嫀嫃",
			5,
			"嫊嫋嫍",
			4,
			"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",
			4,
			"嫲",
			22,
			"嬊",
			11,
			"嬘",
			25,
			"嬳嬵嬶嬸",
			7,
			"孁",
			6
		],
		[
			"8c40",
			"孈",
			7,
			"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"
		],
		[
			"8c80",
			"寑寔",
			8,
			"寠寢寣實寧審",
			4,
			"寯寱",
			6,
			"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",
			6,
			"屰屲",
			6,
			"屻屼屽屾岀岃",
			4,
			"岉岊岋岎岏岒岓岕岝",
			4,
			"岤",
			4
		],
		[
			"8d40",
			"岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",
			5,
			"峌",
			5,
			"峓",
			5,
			"峚",
			6,
			"峢峣峧峩峫峬峮峯峱",
			9,
			"峼",
			4
		],
		[
			"8d80",
			"崁崄崅崈",
			5,
			"崏",
			4,
			"崕崗崘崙崚崜崝崟",
			4,
			"崥崨崪崫崬崯",
			4,
			"崵",
			7,
			"崿",
			7,
			"嵈嵉嵍",
			10,
			"嵙嵚嵜嵞",
			10,
			"嵪嵭嵮嵰嵱嵲嵳嵵",
			12,
			"嶃",
			21,
			"嶚嶛嶜嶞嶟嶠"
		],
		[
			"8e40",
			"嶡",
			21,
			"嶸",
			12,
			"巆",
			6,
			"巎",
			12,
			"巜巟巠巣巤巪巬巭"
		],
		[
			"8e80",
			"巰巵巶巸",
			4,
			"巿帀帄帇帉帊帋帍帎帒帓帗帞",
			7,
			"帨",
			4,
			"帯帰帲",
			4,
			"帹帺帾帿幀幁幃幆",
			5,
			"幍",
			6,
			"幖",
			4,
			"幜幝幟幠幣",
			14,
			"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",
			4,
			"庮",
			4,
			"庴庺庻庼庽庿",
			6
		],
		[
			"8f40",
			"廆廇廈廋",
			5,
			"廔廕廗廘廙廚廜",
			11,
			"廩廫",
			8,
			"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"
		],
		[
			"8f80",
			"弨弫弬弮弰弲",
			6,
			"弻弽弾弿彁",
			14,
			"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",
			5,
			"復徫徬徯",
			5,
			"徶徸徹徺徻徾",
			4,
			"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"
		],
		[
			"9040",
			"怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",
			4,
			"怶",
			4,
			"怽怾恀恄",
			6,
			"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"
		],
		[
			"9080",
			"悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",
			7,
			"惇惈惉惌",
			4,
			"惒惓惔惖惗惙惛惞惡",
			4,
			"惪惱惲惵惷惸惻",
			4,
			"愂愃愄愅愇愊愋愌愐",
			4,
			"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",
			18,
			"慀",
			6
		],
		[
			"9140",
			"慇慉態慍慏慐慒慓慔慖",
			6,
			"慞慟慠慡慣慤慥慦慩",
			6,
			"慱慲慳慴慶慸",
			18,
			"憌憍憏",
			4,
			"憕"
		],
		[
			"9180",
			"憖",
			6,
			"憞",
			8,
			"憪憫憭",
			9,
			"憸",
			5,
			"憿懀懁懃",
			4,
			"應懌",
			4,
			"懓懕",
			16,
			"懧",
			13,
			"懶",
			8,
			"戀",
			5,
			"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",
			4,
			"扂扄扅扆扊"
		],
		[
			"9240",
			"扏扐払扖扗扙扚扜",
			6,
			"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",
			5,
			"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"
		],
		[
			"9280",
			"拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",
			5,
			"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",
			7,
			"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",
			6,
			"採掤掦掫掯掱掲掵掶掹掻掽掿揀"
		],
		[
			"9340",
			"揁揂揃揅揇揈揊揋揌揑揓揔揕揗",
			6,
			"揟揢揤",
			4,
			"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",
			4,
			"損搎搑搒搕",
			5,
			"搝搟搢搣搤"
		],
		[
			"9380",
			"搥搧搨搩搫搮",
			5,
			"搵",
			4,
			"搻搼搾摀摂摃摉摋",
			6,
			"摓摕摖摗摙",
			4,
			"摟",
			7,
			"摨摪摫摬摮",
			9,
			"摻",
			6,
			"撃撆撈",
			8,
			"撓撔撗撘撚撛撜撝撟",
			4,
			"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",
			6,
			"擏擑擓擔擕擖擙據"
		],
		[
			"9440",
			"擛擜擝擟擠擡擣擥擧",
			24,
			"攁",
			7,
			"攊",
			7,
			"攓",
			4,
			"攙",
			8
		],
		[
			"9480",
			"攢攣攤攦",
			4,
			"攬攭攰攱攲攳攷攺攼攽敀",
			4,
			"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",
			14,
			"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",
			7,
			"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",
			7,
			"旡旣旤旪旫"
		],
		[
			"9540",
			"旲旳旴旵旸旹旻",
			4,
			"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",
			4,
			"昽昿晀時晄",
			6,
			"晍晎晐晑晘"
		],
		[
			"9580",
			"晙晛晜晝晞晠晢晣晥晧晩",
			4,
			"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",
			4,
			"暞",
			8,
			"暩",
			4,
			"暯",
			4,
			"暵暶暷暸暺暻暼暽暿",
			25,
			"曚曞",
			7,
			"曧曨曪",
			5,
			"曱曵曶書曺曻曽朁朂會"
		],
		[
			"9640",
			"朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",
			5,
			"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",
			4,
			"杝杢杣杤杦杧杫杬杮東杴杶"
		],
		[
			"9680",
			"杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",
			7,
			"柂柅",
			9,
			"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",
			7,
			"柾栁栂栃栄栆栍栐栒栔栕栘",
			4,
			"栞栟栠栢",
			6,
			"栫",
			6,
			"栴栵栶栺栻栿桇桋桍桏桒桖",
			5
		],
		[
			"9740",
			"桜桝桞桟桪桬",
			7,
			"桵桸",
			8,
			"梂梄梇",
			7,
			"梐梑梒梔梕梖梘",
			9,
			"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"
		],
		[
			"9780",
			"梹",
			6,
			"棁棃",
			5,
			"棊棌棎棏棐棑棓棔棖棗棙棛",
			4,
			"棡棢棤",
			9,
			"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",
			4,
			"椌椏椑椓",
			11,
			"椡椢椣椥",
			7,
			"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",
			16,
			"楕楖楘楙楛楜楟"
		],
		[
			"9840",
			"楡楢楤楥楧楨楩楪楬業楯楰楲",
			4,
			"楺楻楽楾楿榁榃榅榊榋榌榎",
			5,
			"榖榗榙榚榝",
			9,
			"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"
		],
		[
			"9880",
			"榾榿槀槂",
			7,
			"構槍槏槑槒槓槕",
			5,
			"槜槝槞槡",
			11,
			"槮槯槰槱槳",
			9,
			"槾樀",
			9,
			"樋",
			11,
			"標",
			5,
			"樠樢",
			5,
			"権樫樬樭樮樰樲樳樴樶",
			6,
			"樿",
			4,
			"橅橆橈",
			7,
			"橑",
			6,
			"橚"
		],
		[
			"9940",
			"橜",
			4,
			"橢橣橤橦",
			10,
			"橲",
			6,
			"橺橻橽橾橿檁檂檃檅",
			8,
			"檏檒",
			4,
			"檘",
			7,
			"檡",
			5
		],
		[
			"9980",
			"檧檨檪檭",
			114,
			"欥欦欨",
			6
		],
		[
			"9a40",
			"欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",
			11,
			"歚",
			7,
			"歨歩歫",
			13,
			"歺歽歾歿殀殅殈"
		],
		[
			"9a80",
			"殌殎殏殐殑殔殕殗殘殙殜",
			4,
			"殢",
			7,
			"殫",
			7,
			"殶殸",
			6,
			"毀毃毄毆",
			4,
			"毌毎毐毑毘毚毜",
			4,
			"毢",
			7,
			"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",
			6,
			"氈",
			4,
			"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",
			4,
			"汑汒汓汖汘"
		],
		[
			"9b40",
			"汙汚汢汣汥汦汧汫",
			4,
			"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"
		],
		[
			"9b80",
			"泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",
			5,
			"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",
			4,
			"涃涄涆涇涊涋涍涏涐涒涖",
			4,
			"涜涢涥涬涭涰涱涳涴涶涷涹",
			5,
			"淁淂淃淈淉淊"
		],
		[
			"9c40",
			"淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",
			7,
			"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"
		],
		[
			"9c80",
			"渶渷渹渻",
			7,
			"湅",
			7,
			"湏湐湑湒湕湗湙湚湜湝湞湠",
			10,
			"湬湭湯",
			14,
			"満溁溂溄溇溈溊",
			4,
			"溑",
			6,
			"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",
			5
		],
		[
			"9d40",
			"滰滱滲滳滵滶滷滸滺",
			7,
			"漃漄漅漇漈漊",
			4,
			"漐漑漒漖",
			9,
			"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",
			6,
			"漿潀潁潂"
		],
		[
			"9d80",
			"潃潄潅潈潉潊潌潎",
			9,
			"潙潚潛潝潟潠潡潣潤潥潧",
			5,
			"潯潰潱潳潵潶潷潹潻潽",
			6,
			"澅澆澇澊澋澏",
			12,
			"澝澞澟澠澢",
			4,
			"澨",
			10,
			"澴澵澷澸澺",
			5,
			"濁濃",
			5,
			"濊",
			6,
			"濓",
			10,
			"濟濢濣濤濥"
		],
		[
			"9e40",
			"濦",
			7,
			"濰",
			32,
			"瀒",
			7,
			"瀜",
			6,
			"瀤",
			6
		],
		[
			"9e80",
			"瀫",
			9,
			"瀶瀷瀸瀺",
			17,
			"灍灎灐",
			13,
			"灟",
			11,
			"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",
			12,
			"炰炲炴炵炶為炾炿烄烅烆烇烉烋",
			12,
			"烚"
		],
		[
			"9f40",
			"烜烝烞烠烡烢烣烥烪烮烰",
			6,
			"烸烺烻烼烾",
			10,
			"焋",
			4,
			"焑焒焔焗焛",
			10,
			"焧",
			7,
			"焲焳焴"
		],
		[
			"9f80",
			"焵焷",
			13,
			"煆煇煈煉煋煍煏",
			12,
			"煝煟",
			4,
			"煥煩",
			4,
			"煯煰煱煴煵煶煷煹煻煼煾",
			5,
			"熅",
			4,
			"熋熌熍熎熐熑熒熓熕熖熗熚",
			4,
			"熡",
			6,
			"熩熪熫熭",
			5,
			"熴熶熷熸熺",
			8,
			"燄",
			9,
			"燏",
			4
		],
		[
			"a040",
			"燖",
			9,
			"燡燢燣燤燦燨",
			5,
			"燯",
			9,
			"燺",
			11,
			"爇",
			19
		],
		[
			"a080",
			"爛爜爞",
			9,
			"爩爫爭爮爯爲爳爴爺爼爾牀",
			6,
			"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",
			4,
			"犌犎犐犑犓",
			11,
			"犠",
			11,
			"犮犱犲犳犵犺",
			6,
			"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"
		],
		[
			"a1a1",
			"　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",
			7,
			"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"
		],
		[
			"a2a1",
			"ⅰ",
			9
		],
		[
			"a2b1",
			"⒈",
			19,
			"⑴",
			19,
			"①",
			9
		],
		[
			"a2e5",
			"㈠",
			9
		],
		[
			"a2f1",
			"Ⅰ",
			11
		],
		[
			"a3a1",
			"！＂＃￥％",
			88,
			"￣"
		],
		[
			"a4a1",
			"ぁ",
			82
		],
		[
			"a5a1",
			"ァ",
			85
		],
		[
			"a6a1",
			"Α",
			16,
			"Σ",
			6
		],
		[
			"a6c1",
			"α",
			16,
			"σ",
			6
		],
		[
			"a6e0",
			"︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"
		],
		[
			"a6ee",
			"︻︼︷︸︱"
		],
		[
			"a6f4",
			"︳︴"
		],
		[
			"a7a1",
			"А",
			5,
			"ЁЖ",
			25
		],
		[
			"a7d1",
			"а",
			5,
			"ёж",
			25
		],
		[
			"a840",
			"ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",
			35,
			"▁",
			6
		],
		[
			"a880",
			"█",
			7,
			"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"
		],
		[
			"a8a1",
			"āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"
		],
		[
			"a8bd",
			"ńň"
		],
		[
			"a8c0",
			"ɡ"
		],
		[
			"a8c5",
			"ㄅ",
			36
		],
		[
			"a940",
			"〡",
			8,
			"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"
		],
		[
			"a959",
			"℡㈱"
		],
		[
			"a95c",
			"‐"
		],
		[
			"a960",
			"ー゛゜ヽヾ〆ゝゞ﹉",
			9,
			"﹔﹕﹖﹗﹙",
			8
		],
		[
			"a980",
			"﹢",
			4,
			"﹨﹩﹪﹫"
		],
		[
			"a996",
			"〇"
		],
		[
			"a9a4",
			"─",
			75
		],
		[
			"aa40",
			"狜狝狟狢",
			5,
			"狪狫狵狶狹狽狾狿猀猂猄",
			5,
			"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",
			8
		],
		[
			"aa80",
			"獉獊獋獌獎獏獑獓獔獕獖獘",
			7,
			"獡",
			10,
			"獮獰獱"
		],
		[
			"ab40",
			"獲",
			11,
			"獿",
			4,
			"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",
			5,
			"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",
			4
		],
		[
			"ab80",
			"珋珌珎珒",
			6,
			"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",
			4
		],
		[
			"ac40",
			"珸",
			10,
			"琄琇琈琋琌琍琎琑",
			8,
			"琜",
			5,
			"琣琤琧琩琫琭琯琱琲琷",
			4,
			"琽琾琿瑀瑂",
			11
		],
		[
			"ac80",
			"瑎",
			6,
			"瑖瑘瑝瑠",
			12,
			"瑮瑯瑱",
			4,
			"瑸瑹瑺"
		],
		[
			"ad40",
			"瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",
			10,
			"璝璟",
			7,
			"璪",
			15,
			"璻",
			12
		],
		[
			"ad80",
			"瓈",
			9,
			"瓓",
			8,
			"瓝瓟瓡瓥瓧",
			6,
			"瓰瓱瓲"
		],
		[
			"ae40",
			"瓳瓵瓸",
			6,
			"甀甁甂甃甅",
			7,
			"甎甐甒甔甕甖甗甛甝甞甠",
			4,
			"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"
		],
		[
			"ae80",
			"畝",
			7,
			"畧畨畩畫",
			6,
			"畳畵當畷畺",
			4,
			"疀疁疂疄疅疇"
		],
		[
			"af40",
			"疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",
			4,
			"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"
		],
		[
			"af80",
			"瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"
		],
		[
			"b040",
			"癅",
			6,
			"癎",
			5,
			"癕癗",
			4,
			"癝癟癠癡癢癤",
			6,
			"癬癭癮癰",
			7,
			"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"
		],
		[
			"b080",
			"皜",
			7,
			"皥",
			8,
			"皯皰皳皵",
			9,
			"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"
		],
		[
			"b140",
			"盄盇盉盋盌盓盕盙盚盜盝盞盠",
			4,
			"盦",
			7,
			"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",
			10,
			"眛眜眝眞眡眣眤眥眧眪眫"
		],
		[
			"b180",
			"眬眮眰",
			4,
			"眹眻眽眾眿睂睄睅睆睈",
			7,
			"睒",
			7,
			"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"
		],
		[
			"b240",
			"睝睞睟睠睤睧睩睪睭",
			11,
			"睺睻睼瞁瞂瞃瞆",
			5,
			"瞏瞐瞓",
			11,
			"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",
			4
		],
		[
			"b280",
			"瞼瞾矀",
			12,
			"矎",
			8,
			"矘矙矚矝",
			4,
			"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"
		],
		[
			"b340",
			"矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",
			5,
			"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"
		],
		[
			"b380",
			"硛硜硞",
			11,
			"硯",
			7,
			"硸硹硺硻硽",
			6,
			"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"
		],
		[
			"b440",
			"碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",
			7,
			"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",
			9
		],
		[
			"b480",
			"磤磥磦磧磩磪磫磭",
			4,
			"磳磵磶磸磹磻",
			5,
			"礂礃礄礆",
			6,
			"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"
		],
		[
			"b540",
			"礍",
			5,
			"礔",
			9,
			"礟",
			4,
			"礥",
			14,
			"礵",
			4,
			"礽礿祂祃祄祅祇祊",
			8,
			"祔祕祘祙祡祣"
		],
		[
			"b580",
			"祤祦祩祪祫祬祮祰",
			6,
			"祹祻",
			4,
			"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"
		],
		[
			"b640",
			"禓",
			6,
			"禛",
			11,
			"禨",
			10,
			"禴",
			4,
			"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",
			5,
			"秠秡秢秥秨秪"
		],
		[
			"b680",
			"秬秮秱",
			6,
			"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",
			4,
			"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"
		],
		[
			"b740",
			"稝稟稡稢稤",
			14,
			"稴稵稶稸稺稾穀",
			5,
			"穇",
			9,
			"穒",
			4,
			"穘",
			16
		],
		[
			"b780",
			"穩",
			6,
			"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"
		],
		[
			"b840",
			"窣窤窧窩窪窫窮",
			4,
			"窴",
			10,
			"竀",
			10,
			"竌",
			9,
			"竗竘竚竛竜竝竡竢竤竧",
			5,
			"竮竰竱竲竳"
		],
		[
			"b880",
			"竴",
			4,
			"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"
		],
		[
			"b940",
			"笯笰笲笴笵笶笷笹笻笽笿",
			5,
			"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",
			10,
			"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",
			6,
			"箎箏"
		],
		[
			"b980",
			"箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",
			7,
			"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"
		],
		[
			"ba40",
			"篅篈築篊篋篍篎篏篐篒篔",
			4,
			"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",
			4,
			"篸篹篺篻篽篿",
			7,
			"簈簉簊簍簎簐",
			5,
			"簗簘簙"
		],
		[
			"ba80",
			"簚",
			4,
			"簠",
			5,
			"簨簩簫",
			12,
			"簹",
			5,
			"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"
		],
		[
			"bb40",
			"籃",
			9,
			"籎",
			36,
			"籵",
			5,
			"籾",
			9
		],
		[
			"bb80",
			"粈粊",
			6,
			"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",
			4,
			"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"
		],
		[
			"bc40",
			"粿糀糂糃糄糆糉糋糎",
			6,
			"糘糚糛糝糞糡",
			6,
			"糩",
			5,
			"糰",
			7,
			"糹糺糼",
			13,
			"紋",
			5
		],
		[
			"bc80",
			"紑",
			14,
			"紡紣紤紥紦紨紩紪紬紭紮細",
			6,
			"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"
		],
		[
			"bd40",
			"紷",
			54,
			"絯",
			7
		],
		[
			"bd80",
			"絸",
			32,
			"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"
		],
		[
			"be40",
			"継",
			12,
			"綧",
			6,
			"綯",
			42
		],
		[
			"be80",
			"線",
			32,
			"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"
		],
		[
			"bf40",
			"緻",
			62
		],
		[
			"bf80",
			"縺縼",
			4,
			"繂",
			4,
			"繈",
			21,
			"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"
		],
		[
			"c040",
			"繞",
			35,
			"纃",
			23,
			"纜纝纞"
		],
		[
			"c080",
			"纮纴纻纼绖绤绬绹缊缐缞缷缹缻",
			6,
			"罃罆",
			9,
			"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"
		],
		[
			"c140",
			"罖罙罛罜罝罞罠罣",
			4,
			"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",
			7,
			"羋羍羏",
			4,
			"羕",
			4,
			"羛羜羠羢羣羥羦羨",
			6,
			"羱"
		],
		[
			"c180",
			"羳",
			4,
			"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",
			4,
			"翖翗翙",
			5,
			"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"
		],
		[
			"c240",
			"翤翧翨翪翫翬翭翯翲翴",
			6,
			"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",
			5,
			"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"
		],
		[
			"c280",
			"聙聛",
			13,
			"聫",
			5,
			"聲",
			11,
			"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"
		],
		[
			"c340",
			"聾肁肂肅肈肊肍",
			5,
			"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",
			4,
			"胏",
			6,
			"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"
		],
		[
			"c380",
			"脌脕脗脙脛脜脝脟",
			12,
			"脭脮脰脳脴脵脷脹",
			4,
			"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"
		],
		[
			"c440",
			"腀",
			5,
			"腇腉腍腎腏腒腖腗腘腛",
			4,
			"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",
			4,
			"膉膋膌膍膎膐膒",
			5,
			"膙膚膞",
			4,
			"膤膥"
		],
		[
			"c480",
			"膧膩膫",
			7,
			"膴",
			5,
			"膼膽膾膿臄臅臇臈臉臋臍",
			6,
			"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"
		],
		[
			"c540",
			"臔",
			14,
			"臤臥臦臨臩臫臮",
			4,
			"臵",
			5,
			"臽臿舃與",
			4,
			"舎舏舑舓舕",
			5,
			"舝舠舤舥舦舧舩舮舲舺舼舽舿"
		],
		[
			"c580",
			"艀艁艂艃艅艆艈艊艌艍艎艐",
			7,
			"艙艛艜艝艞艠",
			7,
			"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"
		],
		[
			"c640",
			"艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"
		],
		[
			"c680",
			"苺苼",
			4,
			"茊茋茍茐茒茓茖茘茙茝",
			9,
			"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"
		],
		[
			"c740",
			"茾茿荁荂荄荅荈荊",
			4,
			"荓荕",
			4,
			"荝荢荰",
			6,
			"荹荺荾",
			6,
			"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",
			6,
			"莬莭莮"
		],
		[
			"c780",
			"莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"
		],
		[
			"c840",
			"菮華菳",
			4,
			"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",
			5,
			"萙萚萛萞",
			5,
			"萩",
			7,
			"萲",
			5,
			"萹萺萻萾",
			7,
			"葇葈葉"
		],
		[
			"c880",
			"葊",
			6,
			"葒",
			4,
			"葘葝葞葟葠葢葤",
			4,
			"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"
		],
		[
			"c940",
			"葽",
			4,
			"蒃蒄蒅蒆蒊蒍蒏",
			7,
			"蒘蒚蒛蒝蒞蒟蒠蒢",
			12,
			"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"
		],
		[
			"c980",
			"蓘",
			4,
			"蓞蓡蓢蓤蓧",
			4,
			"蓭蓮蓯蓱",
			10,
			"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"
		],
		[
			"ca40",
			"蔃",
			8,
			"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",
			8,
			"蔭",
			9,
			"蔾",
			4,
			"蕄蕅蕆蕇蕋",
			10
		],
		[
			"ca80",
			"蕗蕘蕚蕛蕜蕝蕟",
			4,
			"蕥蕦蕧蕩",
			8,
			"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"
		],
		[
			"cb40",
			"薂薃薆薈",
			6,
			"薐",
			10,
			"薝",
			6,
			"薥薦薧薩薫薬薭薱",
			5,
			"薸薺",
			6,
			"藂",
			6,
			"藊",
			4,
			"藑藒"
		],
		[
			"cb80",
			"藔藖",
			5,
			"藝",
			6,
			"藥藦藧藨藪",
			14,
			"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"
		],
		[
			"cc40",
			"藹藺藼藽藾蘀",
			4,
			"蘆",
			10,
			"蘒蘓蘔蘕蘗",
			15,
			"蘨蘪",
			13,
			"蘹蘺蘻蘽蘾蘿虀"
		],
		[
			"cc80",
			"虁",
			11,
			"虒虓處",
			4,
			"虛虜虝號虠虡虣",
			7,
			"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"
		],
		[
			"cd40",
			"虭虯虰虲",
			6,
			"蚃",
			6,
			"蚎",
			4,
			"蚔蚖",
			5,
			"蚞",
			4,
			"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",
			4,
			"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"
		],
		[
			"cd80",
			"蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"
		],
		[
			"ce40",
			"蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",
			6,
			"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",
			5,
			"蝡蝢蝦",
			7,
			"蝯蝱蝲蝳蝵"
		],
		[
			"ce80",
			"蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",
			4,
			"螔螕螖螘",
			6,
			"螠",
			4,
			"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"
		],
		[
			"cf40",
			"螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",
			4,
			"蟇蟈蟉蟌",
			4,
			"蟔",
			6,
			"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",
			9
		],
		[
			"cf80",
			"蟺蟻蟼蟽蟿蠀蠁蠂蠄",
			5,
			"蠋",
			7,
			"蠔蠗蠘蠙蠚蠜",
			4,
			"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"
		],
		[
			"d040",
			"蠤",
			13,
			"蠳",
			5,
			"蠺蠻蠽蠾蠿衁衂衃衆",
			5,
			"衎",
			5,
			"衕衖衘衚",
			6,
			"衦衧衪衭衯衱衳衴衵衶衸衹衺"
		],
		[
			"d080",
			"衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",
			4,
			"袝",
			4,
			"袣袥",
			5,
			"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"
		],
		[
			"d140",
			"袬袮袯袰袲",
			4,
			"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",
			4,
			"裠裡裦裧裩",
			6,
			"裲裵裶裷裺裻製裿褀褁褃",
			5
		],
		[
			"d180",
			"褉褋",
			4,
			"褑褔",
			4,
			"褜",
			4,
			"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"
		],
		[
			"d240",
			"褸",
			8,
			"襂襃襅",
			24,
			"襠",
			5,
			"襧",
			19,
			"襼"
		],
		[
			"d280",
			"襽襾覀覂覄覅覇",
			26,
			"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"
		],
		[
			"d340",
			"覢",
			30,
			"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",
			6
		],
		[
			"d380",
			"觻",
			4,
			"訁",
			5,
			"計",
			21,
			"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"
		],
		[
			"d440",
			"訞",
			31,
			"訿",
			8,
			"詉",
			21
		],
		[
			"d480",
			"詟",
			25,
			"詺",
			6,
			"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"
		],
		[
			"d540",
			"誁",
			7,
			"誋",
			7,
			"誔",
			46
		],
		[
			"d580",
			"諃",
			32,
			"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"
		],
		[
			"d640",
			"諤",
			34,
			"謈",
			27
		],
		[
			"d680",
			"謤謥謧",
			30,
			"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"
		],
		[
			"d740",
			"譆",
			31,
			"譧",
			4,
			"譭",
			25
		],
		[
			"d780",
			"讇",
			24,
			"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"
		],
		[
			"d840",
			"谸",
			8,
			"豂豃豄豅豈豊豋豍",
			7,
			"豖豗豘豙豛",
			5,
			"豣",
			6,
			"豬",
			6,
			"豴豵豶豷豻",
			6,
			"貃貄貆貇"
		],
		[
			"d880",
			"貈貋貍",
			6,
			"貕貖貗貙",
			20,
			"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"
		],
		[
			"d940",
			"貮",
			62
		],
		[
			"d980",
			"賭",
			32,
			"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"
		],
		[
			"da40",
			"贎",
			14,
			"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",
			8,
			"趂趃趆趇趈趉趌",
			4,
			"趒趓趕",
			9,
			"趠趡"
		],
		[
			"da80",
			"趢趤",
			12,
			"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"
		],
		[
			"db40",
			"跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",
			6,
			"踆踇踈踋踍踎踐踑踒踓踕",
			7,
			"踠踡踤",
			4,
			"踫踭踰踲踳踴踶踷踸踻踼踾"
		],
		[
			"db80",
			"踿蹃蹅蹆蹌",
			4,
			"蹓",
			5,
			"蹚",
			11,
			"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"
		],
		[
			"dc40",
			"蹳蹵蹷",
			4,
			"蹽蹾躀躂躃躄躆躈",
			6,
			"躑躒躓躕",
			6,
			"躝躟",
			11,
			"躭躮躰躱躳",
			6,
			"躻",
			7
		],
		[
			"dc80",
			"軃",
			10,
			"軏",
			21,
			"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"
		],
		[
			"dd40",
			"軥",
			62
		],
		[
			"dd80",
			"輤",
			32,
			"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"
		],
		[
			"de40",
			"轅",
			32,
			"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"
		],
		[
			"de80",
			"迉",
			4,
			"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"
		],
		[
			"df40",
			"這逜連逤逥逧",
			5,
			"逰",
			4,
			"逷逹逺逽逿遀遃遅遆遈",
			4,
			"過達違遖遙遚遜",
			5,
			"遤遦遧適遪遫遬遯",
			4,
			"遶",
			6,
			"遾邁"
		],
		[
			"df80",
			"還邅邆邇邉邊邌",
			4,
			"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"
		],
		[
			"e040",
			"郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",
			19,
			"鄚鄛鄜"
		],
		[
			"e080",
			"鄝鄟鄠鄡鄤",
			10,
			"鄰鄲",
			6,
			"鄺",
			8,
			"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"
		],
		[
			"e140",
			"酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",
			4,
			"醆醈醊醎醏醓",
			6,
			"醜",
			5,
			"醤",
			5,
			"醫醬醰醱醲醳醶醷醸醹醻"
		],
		[
			"e180",
			"醼",
			10,
			"釈釋釐釒",
			9,
			"針",
			8,
			"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"
		],
		[
			"e240",
			"釦",
			62
		],
		[
			"e280",
			"鈥",
			32,
			"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",
			5,
			"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"
		],
		[
			"e340",
			"鉆",
			45,
			"鉵",
			16
		],
		[
			"e380",
			"銆",
			7,
			"銏",
			24,
			"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"
		],
		[
			"e440",
			"銨",
			5,
			"銯",
			24,
			"鋉",
			31
		],
		[
			"e480",
			"鋩",
			32,
			"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"
		],
		[
			"e540",
			"錊",
			51,
			"錿",
			10
		],
		[
			"e580",
			"鍊",
			31,
			"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"
		],
		[
			"e640",
			"鍬",
			34,
			"鎐",
			27
		],
		[
			"e680",
			"鎬",
			29,
			"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"
		],
		[
			"e740",
			"鏎",
			7,
			"鏗",
			54
		],
		[
			"e780",
			"鐎",
			32,
			"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",
			6,
			"缪缫缬缭缯",
			4,
			"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"
		],
		[
			"e840",
			"鐯",
			14,
			"鐿",
			43,
			"鑬鑭鑮鑯"
		],
		[
			"e880",
			"鑰",
			20,
			"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"
		],
		[
			"e940",
			"锧锳锽镃镈镋镕镚镠镮镴镵長",
			7,
			"門",
			42
		],
		[
			"e980",
			"閫",
			32,
			"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"
		],
		[
			"ea40",
			"闌",
			27,
			"闬闿阇阓阘阛阞阠阣",
			6,
			"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"
		],
		[
			"ea80",
			"陘陙陚陜陝陞陠陣陥陦陫陭",
			4,
			"陳陸",
			12,
			"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"
		],
		[
			"eb40",
			"隌階隑隒隓隕隖隚際隝",
			9,
			"隨",
			7,
			"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",
			9,
			"雡",
			6,
			"雫"
		],
		[
			"eb80",
			"雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",
			4,
			"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"
		],
		[
			"ec40",
			"霡",
			8,
			"霫霬霮霯霱霳",
			4,
			"霺霻霼霽霿",
			18,
			"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",
			7
		],
		[
			"ec80",
			"靲靵靷",
			4,
			"靽",
			7,
			"鞆",
			4,
			"鞌鞎鞏鞐鞓鞕鞖鞗鞙",
			4,
			"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"
		],
		[
			"ed40",
			"鞞鞟鞡鞢鞤",
			6,
			"鞬鞮鞰鞱鞳鞵",
			46
		],
		[
			"ed80",
			"韤韥韨韮",
			4,
			"韴韷",
			23,
			"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"
		],
		[
			"ee40",
			"頏",
			62
		],
		[
			"ee80",
			"顎",
			32,
			"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",
			4,
			"钼钽钿铄铈",
			6,
			"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"
		],
		[
			"ef40",
			"顯",
			5,
			"颋颎颒颕颙颣風",
			37,
			"飏飐飔飖飗飛飜飝飠",
			4
		],
		[
			"ef80",
			"飥飦飩",
			30,
			"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",
			4,
			"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",
			8,
			"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"
		],
		[
			"f040",
			"餈",
			4,
			"餎餏餑",
			28,
			"餯",
			26
		],
		[
			"f080",
			"饊",
			9,
			"饖",
			12,
			"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",
			4,
			"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",
			6,
			"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"
		],
		[
			"f140",
			"馌馎馚",
			10,
			"馦馧馩",
			47
		],
		[
			"f180",
			"駙",
			32,
			"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"
		],
		[
			"f240",
			"駺",
			62
		],
		[
			"f280",
			"騹",
			32,
			"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"
		],
		[
			"f340",
			"驚",
			17,
			"驲骃骉骍骎骔骕骙骦骩",
			6,
			"骲骳骴骵骹骻骽骾骿髃髄髆",
			4,
			"髍髎髏髐髒體髕髖髗髙髚髛髜"
		],
		[
			"f380",
			"髝髞髠髢髣髤髥髧髨髩髪髬髮髰",
			8,
			"髺髼",
			6,
			"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"
		],
		[
			"f440",
			"鬇鬉",
			5,
			"鬐鬑鬒鬔",
			10,
			"鬠鬡鬢鬤",
			10,
			"鬰鬱鬳",
			7,
			"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",
			5
		],
		[
			"f480",
			"魛",
			32,
			"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"
		],
		[
			"f540",
			"魼",
			62
		],
		[
			"f580",
			"鮻",
			32,
			"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"
		],
		[
			"f640",
			"鯜",
			62
		],
		[
			"f680",
			"鰛",
			32,
			"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",
			5,
			"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",
			5,
			"鲥",
			4,
			"鲫鲭鲮鲰",
			7,
			"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"
		],
		[
			"f740",
			"鰼",
			62
		],
		[
			"f780",
			"鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",
			4,
			"鳈鳉鳑鳒鳚鳛鳠鳡鳌",
			4,
			"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"
		],
		[
			"f840",
			"鳣",
			62
		],
		[
			"f880",
			"鴢",
			32
		],
		[
			"f940",
			"鵃",
			62
		],
		[
			"f980",
			"鶂",
			32
		],
		[
			"fa40",
			"鶣",
			62
		],
		[
			"fa80",
			"鷢",
			32
		],
		[
			"fb40",
			"鸃",
			27,
			"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",
			9,
			"麀"
		],
		[
			"fb80",
			"麁麃麄麅麆麉麊麌",
			5,
			"麔",
			8,
			"麞麠",
			5,
			"麧麨麩麪"
		],
		[
			"fc40",
			"麫",
			8,
			"麵麶麷麹麺麼麿",
			4,
			"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",
			8,
			"黺黽黿",
			6
		],
		[
			"fc80",
			"鼆",
			4,
			"鼌鼏鼑鼒鼔鼕鼖鼘鼚",
			5,
			"鼡鼣",
			8,
			"鼭鼮鼰鼱"
		],
		[
			"fd40",
			"鼲",
			4,
			"鼸鼺鼼鼿",
			4,
			"齅",
			10,
			"齒",
			38
		],
		[
			"fd80",
			"齹",
			5,
			"龁龂龍",
			11,
			"龜龝龞龡",
			4,
			"郎凉秊裏隣"
		],
		[
			"fe40",
			"兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"
		]
	];

/***/ },
/* 56 */
/***/ function(module, exports) {

	module.exports = [
		[
			"a140",
			"",
			62
		],
		[
			"a180",
			"",
			32
		],
		[
			"a240",
			"",
			62
		],
		[
			"a280",
			"",
			32
		],
		[
			"a2ab",
			"",
			5
		],
		[
			"a2e3",
			"€"
		],
		[
			"a2ef",
			""
		],
		[
			"a2fd",
			""
		],
		[
			"a340",
			"",
			62
		],
		[
			"a380",
			"",
			31,
			"　"
		],
		[
			"a440",
			"",
			62
		],
		[
			"a480",
			"",
			32
		],
		[
			"a4f4",
			"",
			10
		],
		[
			"a540",
			"",
			62
		],
		[
			"a580",
			"",
			32
		],
		[
			"a5f7",
			"",
			7
		],
		[
			"a640",
			"",
			62
		],
		[
			"a680",
			"",
			32
		],
		[
			"a6b9",
			"",
			7
		],
		[
			"a6d9",
			"",
			6
		],
		[
			"a6ec",
			""
		],
		[
			"a6f3",
			""
		],
		[
			"a6f6",
			"",
			8
		],
		[
			"a740",
			"",
			62
		],
		[
			"a780",
			"",
			32
		],
		[
			"a7c2",
			"",
			14
		],
		[
			"a7f2",
			"",
			12
		],
		[
			"a896",
			"",
			10
		],
		[
			"a8bc",
			""
		],
		[
			"a8bf",
			"ǹ"
		],
		[
			"a8c1",
			""
		],
		[
			"a8ea",
			"",
			20
		],
		[
			"a958",
			""
		],
		[
			"a95b",
			""
		],
		[
			"a95d",
			""
		],
		[
			"a989",
			"〾⿰",
			11
		],
		[
			"a997",
			"",
			12
		],
		[
			"a9f0",
			"",
			14
		],
		[
			"aaa1",
			"",
			93
		],
		[
			"aba1",
			"",
			93
		],
		[
			"aca1",
			"",
			93
		],
		[
			"ada1",
			"",
			93
		],
		[
			"aea1",
			"",
			93
		],
		[
			"afa1",
			"",
			93
		],
		[
			"d7fa",
			"",
			4
		],
		[
			"f8a1",
			"",
			93
		],
		[
			"f9a1",
			"",
			93
		],
		[
			"faa1",
			"",
			93
		],
		[
			"fba1",
			"",
			93
		],
		[
			"fca1",
			"",
			93
		],
		[
			"fda1",
			"",
			93
		],
		[
			"fe50",
			"⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"
		],
		[
			"fe80",
			"䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",
			6,
			"䶮",
			93
		]
	];

/***/ },
/* 57 */
/***/ function(module, exports) {

	module.exports = {
		"uChars": [
			128,
			165,
			169,
			178,
			184,
			216,
			226,
			235,
			238,
			244,
			248,
			251,
			253,
			258,
			276,
			284,
			300,
			325,
			329,
			334,
			364,
			463,
			465,
			467,
			469,
			471,
			473,
			475,
			477,
			506,
			594,
			610,
			712,
			716,
			730,
			930,
			938,
			962,
			970,
			1026,
			1104,
			1106,
			8209,
			8215,
			8218,
			8222,
			8231,
			8241,
			8244,
			8246,
			8252,
			8365,
			8452,
			8454,
			8458,
			8471,
			8482,
			8556,
			8570,
			8596,
			8602,
			8713,
			8720,
			8722,
			8726,
			8731,
			8737,
			8740,
			8742,
			8748,
			8751,
			8760,
			8766,
			8777,
			8781,
			8787,
			8802,
			8808,
			8816,
			8854,
			8858,
			8870,
			8896,
			8979,
			9322,
			9372,
			9548,
			9588,
			9616,
			9622,
			9634,
			9652,
			9662,
			9672,
			9676,
			9680,
			9702,
			9735,
			9738,
			9793,
			9795,
			11906,
			11909,
			11913,
			11917,
			11928,
			11944,
			11947,
			11951,
			11956,
			11960,
			11964,
			11979,
			12284,
			12292,
			12312,
			12319,
			12330,
			12351,
			12436,
			12447,
			12535,
			12543,
			12586,
			12842,
			12850,
			12964,
			13200,
			13215,
			13218,
			13253,
			13263,
			13267,
			13270,
			13384,
			13428,
			13727,
			13839,
			13851,
			14617,
			14703,
			14801,
			14816,
			14964,
			15183,
			15471,
			15585,
			16471,
			16736,
			17208,
			17325,
			17330,
			17374,
			17623,
			17997,
			18018,
			18212,
			18218,
			18301,
			18318,
			18760,
			18811,
			18814,
			18820,
			18823,
			18844,
			18848,
			18872,
			19576,
			19620,
			19738,
			19887,
			40870,
			59244,
			59336,
			59367,
			59413,
			59417,
			59423,
			59431,
			59437,
			59443,
			59452,
			59460,
			59478,
			59493,
			63789,
			63866,
			63894,
			63976,
			63986,
			64016,
			64018,
			64021,
			64025,
			64034,
			64037,
			64042,
			65074,
			65093,
			65107,
			65112,
			65127,
			65132,
			65375,
			65510,
			65536
		],
		"gbChars": [
			0,
			36,
			38,
			45,
			50,
			81,
			89,
			95,
			96,
			100,
			103,
			104,
			105,
			109,
			126,
			133,
			148,
			172,
			175,
			179,
			208,
			306,
			307,
			308,
			309,
			310,
			311,
			312,
			313,
			341,
			428,
			443,
			544,
			545,
			558,
			741,
			742,
			749,
			750,
			805,
			819,
			820,
			7922,
			7924,
			7925,
			7927,
			7934,
			7943,
			7944,
			7945,
			7950,
			8062,
			8148,
			8149,
			8152,
			8164,
			8174,
			8236,
			8240,
			8262,
			8264,
			8374,
			8380,
			8381,
			8384,
			8388,
			8390,
			8392,
			8393,
			8394,
			8396,
			8401,
			8406,
			8416,
			8419,
			8424,
			8437,
			8439,
			8445,
			8482,
			8485,
			8496,
			8521,
			8603,
			8936,
			8946,
			9046,
			9050,
			9063,
			9066,
			9076,
			9092,
			9100,
			9108,
			9111,
			9113,
			9131,
			9162,
			9164,
			9218,
			9219,
			11329,
			11331,
			11334,
			11336,
			11346,
			11361,
			11363,
			11366,
			11370,
			11372,
			11375,
			11389,
			11682,
			11686,
			11687,
			11692,
			11694,
			11714,
			11716,
			11723,
			11725,
			11730,
			11736,
			11982,
			11989,
			12102,
			12336,
			12348,
			12350,
			12384,
			12393,
			12395,
			12397,
			12510,
			12553,
			12851,
			12962,
			12973,
			13738,
			13823,
			13919,
			13933,
			14080,
			14298,
			14585,
			14698,
			15583,
			15847,
			16318,
			16434,
			16438,
			16481,
			16729,
			17102,
			17122,
			17315,
			17320,
			17402,
			17418,
			17859,
			17909,
			17911,
			17915,
			17916,
			17936,
			17939,
			17961,
			18664,
			18703,
			18814,
			18962,
			19043,
			33469,
			33470,
			33471,
			33484,
			33485,
			33490,
			33497,
			33501,
			33505,
			33513,
			33520,
			33536,
			33550,
			37845,
			37921,
			37948,
			38029,
			38038,
			38064,
			38065,
			38066,
			38069,
			38075,
			38076,
			38078,
			39108,
			39109,
			39113,
			39114,
			39115,
			39116,
			39265,
			39394,
			189000
		]
	};

/***/ },
/* 58 */
/***/ function(module, exports) {

	module.exports = [
		[
			"0",
			"\u0000",
			127
		],
		[
			"8141",
			"갂갃갅갆갋",
			4,
			"갘갞갟갡갢갣갥",
			6,
			"갮갲갳갴"
		],
		[
			"8161",
			"갵갶갷갺갻갽갾갿걁",
			9,
			"걌걎",
			5,
			"걕"
		],
		[
			"8181",
			"걖걗걙걚걛걝",
			18,
			"걲걳걵걶걹걻",
			4,
			"겂겇겈겍겎겏겑겒겓겕",
			6,
			"겞겢",
			5,
			"겫겭겮겱",
			6,
			"겺겾겿곀곂곃곅곆곇곉곊곋곍",
			7,
			"곖곘",
			7,
			"곢곣곥곦곩곫곭곮곲곴곷",
			4,
			"곾곿괁괂괃괅괇",
			4,
			"괎괐괒괓"
		],
		[
			"8241",
			"괔괕괖괗괙괚괛괝괞괟괡",
			7,
			"괪괫괮",
			5
		],
		[
			"8261",
			"괶괷괹괺괻괽",
			6,
			"굆굈굊",
			5,
			"굑굒굓굕굖굗"
		],
		[
			"8281",
			"굙",
			7,
			"굢굤",
			7,
			"굮굯굱굲굷굸굹굺굾궀궃",
			4,
			"궊궋궍궎궏궑",
			10,
			"궞",
			5,
			"궥",
			17,
			"궸",
			7,
			"귂귃귅귆귇귉",
			6,
			"귒귔",
			7,
			"귝귞귟귡귢귣귥",
			18
		],
		[
			"8341",
			"귺귻귽귾긂",
			5,
			"긊긌긎",
			5,
			"긕",
			7
		],
		[
			"8361",
			"긝",
			18,
			"긲긳긵긶긹긻긼"
		],
		[
			"8381",
			"긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",
			4,
			"깞깢깣깤깦깧깪깫깭깮깯깱",
			6,
			"깺깾",
			5,
			"꺆",
			5,
			"꺍",
			46,
			"꺿껁껂껃껅",
			6,
			"껎껒",
			5,
			"껚껛껝",
			8
		],
		[
			"8441",
			"껦껧껩껪껬껮",
			5,
			"껵껶껷껹껺껻껽",
			8
		],
		[
			"8461",
			"꼆꼉꼊꼋꼌꼎꼏꼑",
			18
		],
		[
			"8481",
			"꼤",
			7,
			"꼮꼯꼱꼳꼵",
			6,
			"꼾꽀꽄꽅꽆꽇꽊",
			5,
			"꽑",
			10,
			"꽞",
			5,
			"꽦",
			18,
			"꽺",
			5,
			"꾁꾂꾃꾅꾆꾇꾉",
			6,
			"꾒꾓꾔꾖",
			5,
			"꾝",
			26,
			"꾺꾻꾽꾾"
		],
		[
			"8541",
			"꾿꿁",
			5,
			"꿊꿌꿏",
			4,
			"꿕",
			6,
			"꿝",
			4
		],
		[
			"8561",
			"꿢",
			5,
			"꿪",
			5,
			"꿲꿳꿵꿶꿷꿹",
			6,
			"뀂뀃"
		],
		[
			"8581",
			"뀅",
			6,
			"뀍뀎뀏뀑뀒뀓뀕",
			6,
			"뀞",
			9,
			"뀩",
			26,
			"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",
			29,
			"끾끿낁낂낃낅",
			6,
			"낎낐낒",
			5,
			"낛낝낞낣낤"
		],
		[
			"8641",
			"낥낦낧낪낰낲낶낷낹낺낻낽",
			6,
			"냆냊",
			5,
			"냒"
		],
		[
			"8661",
			"냓냕냖냗냙",
			6,
			"냡냢냣냤냦",
			10
		],
		[
			"8681",
			"냱",
			22,
			"넊넍넎넏넑넔넕넖넗넚넞",
			4,
			"넦넧넩넪넫넭",
			6,
			"넶넺",
			5,
			"녂녃녅녆녇녉",
			6,
			"녒녓녖녗녙녚녛녝녞녟녡",
			22,
			"녺녻녽녾녿놁놃",
			4,
			"놊놌놎놏놐놑놕놖놗놙놚놛놝"
		],
		[
			"8741",
			"놞",
			9,
			"놩",
			15
		],
		[
			"8761",
			"놹",
			18,
			"뇍뇎뇏뇑뇒뇓뇕"
		],
		[
			"8781",
			"뇖",
			5,
			"뇞뇠",
			7,
			"뇪뇫뇭뇮뇯뇱",
			7,
			"뇺뇼뇾",
			5,
			"눆눇눉눊눍",
			6,
			"눖눘눚",
			5,
			"눡",
			18,
			"눵",
			6,
			"눽",
			26,
			"뉙뉚뉛뉝뉞뉟뉡",
			6,
			"뉪",
			4
		],
		[
			"8841",
			"뉯",
			4,
			"뉶",
			5,
			"뉽",
			6,
			"늆늇늈늊",
			4
		],
		[
			"8861",
			"늏늒늓늕늖늗늛",
			4,
			"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"
		],
		[
			"8881",
			"늸",
			15,
			"닊닋닍닎닏닑닓",
			4,
			"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",
			6,
			"댒댖",
			5,
			"댝",
			54,
			"덗덙덚덝덠덡덢덣"
		],
		[
			"8941",
			"덦덨덪덬덭덯덲덳덵덶덷덹",
			6,
			"뎂뎆",
			5,
			"뎍"
		],
		[
			"8961",
			"뎎뎏뎑뎒뎓뎕",
			10,
			"뎢",
			5,
			"뎩뎪뎫뎭"
		],
		[
			"8981",
			"뎮",
			21,
			"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",
			18,
			"돽",
			18,
			"됑",
			6,
			"됙됚됛됝됞됟됡",
			6,
			"됪됬",
			7,
			"됵",
			15
		],
		[
			"8a41",
			"둅",
			10,
			"둒둓둕둖둗둙",
			6,
			"둢둤둦"
		],
		[
			"8a61",
			"둧",
			4,
			"둭",
			18,
			"뒁뒂"
		],
		[
			"8a81",
			"뒃",
			4,
			"뒉",
			19,
			"뒞",
			5,
			"뒥뒦뒧뒩뒪뒫뒭",
			7,
			"뒶뒸뒺",
			5,
			"듁듂듃듅듆듇듉",
			6,
			"듑듒듓듔듖",
			5,
			"듞듟듡듢듥듧",
			4,
			"듮듰듲",
			5,
			"듹",
			26,
			"딖딗딙딚딝"
		],
		[
			"8b41",
			"딞",
			5,
			"딦딫",
			4,
			"딲딳딵딶딷딹",
			6,
			"땂땆"
		],
		[
			"8b61",
			"땇땈땉땊땎땏땑땒땓땕",
			6,
			"땞땢",
			8
		],
		[
			"8b81",
			"땫",
			52,
			"떢떣떥떦떧떩떬떭떮떯떲떶",
			4,
			"떾떿뗁뗂뗃뗅",
			6,
			"뗎뗒",
			5,
			"뗙",
			18,
			"뗭",
			18
		],
		[
			"8c41",
			"똀",
			15,
			"똒똓똕똖똗똙",
			4
		],
		[
			"8c61",
			"똞",
			6,
			"똦",
			5,
			"똭",
			6,
			"똵",
			5
		],
		[
			"8c81",
			"똻",
			12,
			"뙉",
			26,
			"뙥뙦뙧뙩",
			50,
			"뚞뚟뚡뚢뚣뚥",
			5,
			"뚭뚮뚯뚰뚲",
			16
		],
		[
			"8d41",
			"뛃",
			16,
			"뛕",
			8
		],
		[
			"8d61",
			"뛞",
			17,
			"뛱뛲뛳뛵뛶뛷뛹뛺"
		],
		[
			"8d81",
			"뛻",
			4,
			"뜂뜃뜄뜆",
			33,
			"뜪뜫뜭뜮뜱",
			6,
			"뜺뜼",
			7,
			"띅띆띇띉띊띋띍",
			6,
			"띖",
			9,
			"띡띢띣띥띦띧띩",
			6,
			"띲띴띶",
			5,
			"띾띿랁랂랃랅",
			6,
			"랎랓랔랕랚랛랝랞"
		],
		[
			"8e41",
			"랟랡",
			6,
			"랪랮",
			5,
			"랶랷랹",
			8
		],
		[
			"8e61",
			"럂",
			4,
			"럈럊",
			19
		],
		[
			"8e81",
			"럞",
			13,
			"럮럯럱럲럳럵",
			6,
			"럾렂",
			4,
			"렊렋렍렎렏렑",
			6,
			"렚렜렞",
			5,
			"렦렧렩렪렫렭",
			6,
			"렶렺",
			5,
			"롁롂롃롅",
			11,
			"롒롔",
			7,
			"롞롟롡롢롣롥",
			6,
			"롮롰롲",
			5,
			"롹롺롻롽",
			7
		],
		[
			"8f41",
			"뢅",
			7,
			"뢎",
			17
		],
		[
			"8f61",
			"뢠",
			7,
			"뢩",
			6,
			"뢱뢲뢳뢵뢶뢷뢹",
			4
		],
		[
			"8f81",
			"뢾뢿룂룄룆",
			5,
			"룍룎룏룑룒룓룕",
			7,
			"룞룠룢",
			5,
			"룪룫룭룮룯룱",
			6,
			"룺룼룾",
			5,
			"뤅",
			18,
			"뤙",
			6,
			"뤡",
			26,
			"뤾뤿륁륂륃륅",
			6,
			"륍륎륐륒",
			5
		],
		[
			"9041",
			"륚륛륝륞륟륡",
			6,
			"륪륬륮",
			5,
			"륶륷륹륺륻륽"
		],
		[
			"9061",
			"륾",
			5,
			"릆릈릋릌릏",
			15
		],
		[
			"9081",
			"릟",
			12,
			"릮릯릱릲릳릵",
			6,
			"릾맀맂",
			5,
			"맊맋맍맓",
			4,
			"맚맜맟맠맢맦맧맩맪맫맭",
			6,
			"맶맻",
			4,
			"먂",
			5,
			"먉",
			11,
			"먖",
			33,
			"먺먻먽먾먿멁멃멄멅멆"
		],
		[
			"9141",
			"멇멊멌멏멐멑멒멖멗멙멚멛멝",
			6,
			"멦멪",
			5
		],
		[
			"9161",
			"멲멳멵멶멷멹",
			9,
			"몆몈몉몊몋몍",
			5
		],
		[
			"9181",
			"몓",
			20,
			"몪몭몮몯몱몳",
			4,
			"몺몼몾",
			5,
			"뫅뫆뫇뫉",
			14,
			"뫚",
			33,
			"뫽뫾뫿묁묂묃묅",
			7,
			"묎묐묒",
			5,
			"묙묚묛묝묞묟묡",
			6
		],
		[
			"9241",
			"묨묪묬",
			7,
			"묷묹묺묿",
			4,
			"뭆뭈뭊뭋뭌뭎뭑뭒"
		],
		[
			"9261",
			"뭓뭕뭖뭗뭙",
			7,
			"뭢뭤",
			7,
			"뭭",
			4
		],
		[
			"9281",
			"뭲",
			21,
			"뮉뮊뮋뮍뮎뮏뮑",
			18,
			"뮥뮦뮧뮩뮪뮫뮭",
			6,
			"뮵뮶뮸",
			7,
			"믁믂믃믅믆믇믉",
			6,
			"믑믒믔",
			35,
			"믺믻믽믾밁"
		],
		[
			"9341",
			"밃",
			4,
			"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"
		],
		[
			"9361",
			"밶밷밹",
			6,
			"뱂뱆뱇뱈뱊뱋뱎뱏뱑",
			8
		],
		[
			"9381",
			"뱚뱛뱜뱞",
			37,
			"벆벇벉벊벍벏",
			4,
			"벖벘벛",
			4,
			"벢벣벥벦벩",
			6,
			"벲벶",
			5,
			"벾벿볁볂볃볅",
			7,
			"볎볒볓볔볖볗볙볚볛볝",
			22,
			"볷볹볺볻볽"
		],
		[
			"9441",
			"볾",
			5,
			"봆봈봊",
			5,
			"봑봒봓봕",
			8
		],
		[
			"9461",
			"봞",
			5,
			"봥",
			6,
			"봭",
			12
		],
		[
			"9481",
			"봺",
			5,
			"뵁",
			6,
			"뵊뵋뵍뵎뵏뵑",
			6,
			"뵚",
			9,
			"뵥뵦뵧뵩",
			22,
			"붂붃붅붆붋",
			4,
			"붒붔붖붗붘붛붝",
			6,
			"붥",
			10,
			"붱",
			6,
			"붹",
			24
		],
		[
			"9541",
			"뷒뷓뷖뷗뷙뷚뷛뷝",
			11,
			"뷪",
			5,
			"뷱"
		],
		[
			"9561",
			"뷲뷳뷵뷶뷷뷹",
			6,
			"븁븂븄븆",
			5,
			"븎븏븑븒븓"
		],
		[
			"9581",
			"븕",
			6,
			"븞븠",
			35,
			"빆빇빉빊빋빍빏",
			4,
			"빖빘빜빝빞빟빢빣빥빦빧빩빫",
			4,
			"빲빶",
			4,
			"빾빿뺁뺂뺃뺅",
			6,
			"뺎뺒",
			5,
			"뺚",
			13,
			"뺩",
			14
		],
		[
			"9641",
			"뺸",
			23,
			"뻒뻓"
		],
		[
			"9661",
			"뻕뻖뻙",
			6,
			"뻡뻢뻦",
			5,
			"뻭",
			8
		],
		[
			"9681",
			"뻶",
			10,
			"뼂",
			5,
			"뼊",
			13,
			"뼚뼞",
			33,
			"뽂뽃뽅뽆뽇뽉",
			6,
			"뽒뽓뽔뽖",
			44
		],
		[
			"9741",
			"뾃",
			16,
			"뾕",
			8
		],
		[
			"9761",
			"뾞",
			17,
			"뾱",
			7
		],
		[
			"9781",
			"뾹",
			11,
			"뿆",
			5,
			"뿎뿏뿑뿒뿓뿕",
			6,
			"뿝뿞뿠뿢",
			89,
			"쀽쀾쀿"
		],
		[
			"9841",
			"쁀",
			16,
			"쁒",
			5,
			"쁙쁚쁛"
		],
		[
			"9861",
			"쁝쁞쁟쁡",
			6,
			"쁪",
			15
		],
		[
			"9881",
			"쁺",
			21,
			"삒삓삕삖삗삙",
			6,
			"삢삤삦",
			5,
			"삮삱삲삷",
			4,
			"삾샂샃샄샆샇샊샋샍샎샏샑",
			6,
			"샚샞",
			5,
			"샦샧샩샪샫샭",
			6,
			"샶샸샺",
			5,
			"섁섂섃섅섆섇섉",
			6,
			"섑섒섓섔섖",
			5,
			"섡섢섥섨섩섪섫섮"
		],
		[
			"9941",
			"섲섳섴섵섷섺섻섽섾섿셁",
			6,
			"셊셎",
			5,
			"셖셗"
		],
		[
			"9961",
			"셙셚셛셝",
			6,
			"셦셪",
			5,
			"셱셲셳셵셶셷셹셺셻"
		],
		[
			"9981",
			"셼",
			8,
			"솆",
			5,
			"솏솑솒솓솕솗",
			4,
			"솞솠솢솣솤솦솧솪솫솭솮솯솱",
			11,
			"솾",
			5,
			"쇅쇆쇇쇉쇊쇋쇍",
			6,
			"쇕쇖쇙",
			6,
			"쇡쇢쇣쇥쇦쇧쇩",
			6,
			"쇲쇴",
			7,
			"쇾쇿숁숂숃숅",
			6,
			"숎숐숒",
			5,
			"숚숛숝숞숡숢숣"
		],
		[
			"9a41",
			"숤숥숦숧숪숬숮숰숳숵",
			16
		],
		[
			"9a61",
			"쉆쉇쉉",
			6,
			"쉒쉓쉕쉖쉗쉙",
			6,
			"쉡쉢쉣쉤쉦"
		],
		[
			"9a81",
			"쉧",
			4,
			"쉮쉯쉱쉲쉳쉵",
			6,
			"쉾슀슂",
			5,
			"슊",
			5,
			"슑",
			6,
			"슙슚슜슞",
			5,
			"슦슧슩슪슫슮",
			5,
			"슶슸슺",
			33,
			"싞싟싡싢싥",
			5,
			"싮싰싲싳싴싵싷싺싽싾싿쌁",
			6,
			"쌊쌋쌎쌏"
		],
		[
			"9b41",
			"쌐쌑쌒쌖쌗쌙쌚쌛쌝",
			6,
			"쌦쌧쌪",
			8
		],
		[
			"9b61",
			"쌳",
			17,
			"썆",
			7
		],
		[
			"9b81",
			"썎",
			25,
			"썪썫썭썮썯썱썳",
			4,
			"썺썻썾",
			5,
			"쎅쎆쎇쎉쎊쎋쎍",
			50,
			"쏁",
			22,
			"쏚"
		],
		[
			"9c41",
			"쏛쏝쏞쏡쏣",
			4,
			"쏪쏫쏬쏮",
			5,
			"쏶쏷쏹",
			5
		],
		[
			"9c61",
			"쏿",
			8,
			"쐉",
			6,
			"쐑",
			9
		],
		[
			"9c81",
			"쐛",
			8,
			"쐥",
			6,
			"쐭쐮쐯쐱쐲쐳쐵",
			6,
			"쐾",
			9,
			"쑉",
			26,
			"쑦쑧쑩쑪쑫쑭",
			6,
			"쑶쑷쑸쑺",
			5,
			"쒁",
			18,
			"쒕",
			6,
			"쒝",
			12
		],
		[
			"9d41",
			"쒪",
			13,
			"쒹쒺쒻쒽",
			8
		],
		[
			"9d61",
			"쓆",
			25
		],
		[
			"9d81",
			"쓠",
			8,
			"쓪",
			5,
			"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",
			9,
			"씍씎씏씑씒씓씕",
			6,
			"씝",
			10,
			"씪씫씭씮씯씱",
			6,
			"씺씼씾",
			5,
			"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",
			6,
			"앲앶",
			5,
			"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"
		],
		[
			"9e41",
			"얖얙얚얛얝얞얟얡",
			7,
			"얪",
			9,
			"얶"
		],
		[
			"9e61",
			"얷얺얿",
			4,
			"엋엍엏엒엓엕엖엗엙",
			6,
			"엢엤엦엧"
		],
		[
			"9e81",
			"엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",
			6,
			"옚옝",
			6,
			"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",
			6,
			"왒왖",
			5,
			"왞왟왡",
			10,
			"왭왮왰왲",
			5,
			"왺왻왽왾왿욁",
			6,
			"욊욌욎",
			5,
			"욖욗욙욚욛욝",
			6,
			"욦"
		],
		[
			"9f41",
			"욨욪",
			5,
			"욲욳욵욶욷욻",
			4,
			"웂웄웆",
			5,
			"웎"
		],
		[
			"9f61",
			"웏웑웒웓웕",
			6,
			"웞웟웢",
			5,
			"웪웫웭웮웯웱웲"
		],
		[
			"9f81",
			"웳",
			4,
			"웺웻웼웾",
			5,
			"윆윇윉윊윋윍",
			6,
			"윖윘윚",
			5,
			"윢윣윥윦윧윩",
			6,
			"윲윴윶윸윹윺윻윾윿읁읂읃읅",
			4,
			"읋읎읐읙읚읛읝읞읟읡",
			6,
			"읩읪읬",
			7,
			"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",
			4,
			"잢잧",
			4,
			"잮잯잱잲잳잵잶잷"
		],
		[
			"a041",
			"잸잹잺잻잾쟂",
			5,
			"쟊쟋쟍쟏쟑",
			6,
			"쟙쟚쟛쟜"
		],
		[
			"a061",
			"쟞",
			5,
			"쟥쟦쟧쟩쟪쟫쟭",
			13
		],
		[
			"a081",
			"쟻",
			4,
			"젂젃젅젆젇젉젋",
			4,
			"젒젔젗",
			4,
			"젞젟젡젢젣젥",
			6,
			"젮젰젲",
			5,
			"젹젺젻젽젾젿졁",
			6,
			"졊졋졎",
			5,
			"졕",
			26,
			"졲졳졵졶졷졹졻",
			4,
			"좂좄좈좉좊좎",
			5,
			"좕",
			7,
			"좞좠좢좣좤"
		],
		[
			"a141",
			"좥좦좧좩",
			18,
			"좾좿죀죁"
		],
		[
			"a161",
			"죂죃죅죆죇죉죊죋죍",
			6,
			"죖죘죚",
			5,
			"죢죣죥"
		],
		[
			"a181",
			"죦",
			14,
			"죶",
			5,
			"죾죿줁줂줃줇",
			4,
			"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",
			9,
			"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"
		],
		[
			"a241",
			"줐줒",
			5,
			"줙",
			18
		],
		[
			"a261",
			"줭",
			6,
			"줵",
			18
		],
		[
			"a281",
			"쥈",
			7,
			"쥒쥓쥕쥖쥗쥙",
			6,
			"쥢쥤",
			7,
			"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"
		],
		[
			"a341",
			"쥱쥲쥳쥵",
			6,
			"쥽",
			10,
			"즊즋즍즎즏"
		],
		[
			"a361",
			"즑",
			6,
			"즚즜즞",
			16
		],
		[
			"a381",
			"즯",
			16,
			"짂짃짅짆짉짋",
			4,
			"짒짔짗짘짛！",
			58,
			"￦］",
			32,
			"￣"
		],
		[
			"a441",
			"짞짟짡짣짥짦짨짩짪짫짮짲",
			5,
			"짺짻짽짾짿쨁쨂쨃쨄"
		],
		[
			"a461",
			"쨅쨆쨇쨊쨎",
			5,
			"쨕쨖쨗쨙",
			12
		],
		[
			"a481",
			"쨦쨧쨨쨪",
			28,
			"ㄱ",
			93
		],
		[
			"a541",
			"쩇",
			4,
			"쩎쩏쩑쩒쩓쩕",
			6,
			"쩞쩢",
			5,
			"쩩쩪"
		],
		[
			"a561",
			"쩫",
			17,
			"쩾",
			5,
			"쪅쪆"
		],
		[
			"a581",
			"쪇",
			16,
			"쪙",
			14,
			"ⅰ",
			9
		],
		[
			"a5b0",
			"Ⅰ",
			9
		],
		[
			"a5c1",
			"Α",
			16,
			"Σ",
			6
		],
		[
			"a5e1",
			"α",
			16,
			"σ",
			6
		],
		[
			"a641",
			"쪨",
			19,
			"쪾쪿쫁쫂쫃쫅"
		],
		[
			"a661",
			"쫆",
			5,
			"쫎쫐쫒쫔쫕쫖쫗쫚",
			5,
			"쫡",
			6
		],
		[
			"a681",
			"쫨쫩쫪쫫쫭",
			6,
			"쫵",
			18,
			"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",
			7
		],
		[
			"a741",
			"쬋",
			4,
			"쬑쬒쬓쬕쬖쬗쬙",
			6,
			"쬢",
			7
		],
		[
			"a761",
			"쬪",
			22,
			"쭂쭃쭄"
		],
		[
			"a781",
			"쭅쭆쭇쭊쭋쭍쭎쭏쭑",
			6,
			"쭚쭛쭜쭞",
			5,
			"쭥",
			7,
			"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",
			9,
			"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",
			9,
			"㎀",
			4,
			"㎺",
			5,
			"㎐",
			4,
			"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"
		],
		[
			"a841",
			"쭭",
			10,
			"쭺",
			14
		],
		[
			"a861",
			"쮉",
			18,
			"쮝",
			6
		],
		[
			"a881",
			"쮤",
			19,
			"쮹",
			11,
			"ÆÐªĦ"
		],
		[
			"a8a6",
			"Ĳ"
		],
		[
			"a8a8",
			"ĿŁØŒºÞŦŊ"
		],
		[
			"a8b1",
			"㉠",
			27,
			"ⓐ",
			25,
			"①",
			14,
			"½⅓⅔¼¾⅛⅜⅝⅞"
		],
		[
			"a941",
			"쯅",
			14,
			"쯕",
			10
		],
		[
			"a961",
			"쯠쯡쯢쯣쯥쯦쯨쯪",
			18
		],
		[
			"a981",
			"쯽",
			14,
			"찎찏찑찒찓찕",
			6,
			"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",
			27,
			"⒜",
			25,
			"⑴",
			14,
			"¹²³⁴ⁿ₁₂₃₄"
		],
		[
			"aa41",
			"찥찦찪찫찭찯찱",
			6,
			"찺찿",
			4,
			"챆챇챉챊챋챍챎"
		],
		[
			"aa61",
			"챏",
			4,
			"챖챚",
			5,
			"챡챢챣챥챧챩",
			6,
			"챱챲"
		],
		[
			"aa81",
			"챳챴챶",
			29,
			"ぁ",
			82
		],
		[
			"ab41",
			"첔첕첖첗첚첛첝첞첟첡",
			6,
			"첪첮",
			5,
			"첶첷첹"
		],
		[
			"ab61",
			"첺첻첽",
			6,
			"쳆쳈쳊",
			5,
			"쳑쳒쳓쳕",
			5
		],
		[
			"ab81",
			"쳛",
			8,
			"쳥",
			6,
			"쳭쳮쳯쳱",
			12,
			"ァ",
			85
		],
		[
			"ac41",
			"쳾쳿촀촂",
			5,
			"촊촋촍촎촏촑",
			6,
			"촚촜촞촟촠"
		],
		[
			"ac61",
			"촡촢촣촥촦촧촩촪촫촭",
			11,
			"촺",
			4
		],
		[
			"ac81",
			"촿",
			28,
			"쵝쵞쵟А",
			5,
			"ЁЖ",
			25
		],
		[
			"acd1",
			"а",
			5,
			"ёж",
			25
		],
		[
			"ad41",
			"쵡쵢쵣쵥",
			6,
			"쵮쵰쵲",
			5,
			"쵹",
			7
		],
		[
			"ad61",
			"춁",
			6,
			"춉",
			10,
			"춖춗춙춚춛춝춞춟"
		],
		[
			"ad81",
			"춠춡춢춣춦춨춪",
			5,
			"춱",
			18,
			"췅"
		],
		[
			"ae41",
			"췆",
			5,
			"췍췎췏췑",
			16
		],
		[
			"ae61",
			"췢",
			5,
			"췩췪췫췭췮췯췱",
			6,
			"췺췼췾",
			4
		],
		[
			"ae81",
			"츃츅츆츇츉츊츋츍",
			6,
			"츕츖츗츘츚",
			5,
			"츢츣츥츦츧츩츪츫"
		],
		[
			"af41",
			"츬츭츮츯츲츴츶",
			19
		],
		[
			"af61",
			"칊",
			13,
			"칚칛칝칞칢",
			5,
			"칪칬"
		],
		[
			"af81",
			"칮",
			5,
			"칶칷칹칺칻칽",
			6,
			"캆캈캊",
			5,
			"캒캓캕캖캗캙"
		],
		[
			"b041",
			"캚",
			5,
			"캢캦",
			5,
			"캮",
			12
		],
		[
			"b061",
			"캻",
			5,
			"컂",
			19
		],
		[
			"b081",
			"컖",
			13,
			"컦컧컩컪컭",
			6,
			"컶컺",
			5,
			"가각간갇갈갉갊감",
			7,
			"같",
			4,
			"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"
		],
		[
			"b141",
			"켂켃켅켆켇켉",
			6,
			"켒켔켖",
			5,
			"켝켞켟켡켢켣"
		],
		[
			"b161",
			"켥",
			6,
			"켮켲",
			5,
			"켹",
			11
		],
		[
			"b181",
			"콅",
			14,
			"콖콗콙콚콛콝",
			6,
			"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"
		],
		[
			"b241",
			"콭콮콯콲콳콵콶콷콹",
			6,
			"쾁쾂쾃쾄쾆",
			5,
			"쾍"
		],
		[
			"b261",
			"쾎",
			18,
			"쾢",
			5,
			"쾩"
		],
		[
			"b281",
			"쾪",
			5,
			"쾱",
			18,
			"쿅",
			6,
			"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"
		],
		[
			"b341",
			"쿌",
			19,
			"쿢쿣쿥쿦쿧쿩"
		],
		[
			"b361",
			"쿪",
			5,
			"쿲쿴쿶",
			5,
			"쿽쿾쿿퀁퀂퀃퀅",
			5
		],
		[
			"b381",
			"퀋",
			5,
			"퀒",
			5,
			"퀙",
			19,
			"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",
			4,
			"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"
		],
		[
			"b441",
			"퀮",
			5,
			"퀶퀷퀹퀺퀻퀽",
			6,
			"큆큈큊",
			5
		],
		[
			"b461",
			"큑큒큓큕큖큗큙",
			6,
			"큡",
			10,
			"큮큯"
		],
		[
			"b481",
			"큱큲큳큵",
			6,
			"큾큿킀킂",
			18,
			"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",
			4,
			"닳담답닷",
			4,
			"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"
		],
		[
			"b541",
			"킕",
			14,
			"킦킧킩킪킫킭",
			5
		],
		[
			"b561",
			"킳킶킸킺",
			5,
			"탂탃탅탆탇탊",
			5,
			"탒탖",
			4
		],
		[
			"b581",
			"탛탞탟탡탢탣탥",
			6,
			"탮탲",
			5,
			"탹",
			11,
			"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"
		],
		[
			"b641",
			"턅",
			7,
			"턎",
			17
		],
		[
			"b661",
			"턠",
			15,
			"턲턳턵턶턷턹턻턼턽턾"
		],
		[
			"b681",
			"턿텂텆",
			5,
			"텎텏텑텒텓텕",
			6,
			"텞텠텢",
			5,
			"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"
		],
		[
			"b741",
			"텮",
			13,
			"텽",
			6,
			"톅톆톇톉톊"
		],
		[
			"b761",
			"톋",
			20,
			"톢톣톥톦톧"
		],
		[
			"b781",
			"톩",
			6,
			"톲톴톶톷톸톹톻톽톾톿퇁",
			14,
			"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"
		],
		[
			"b841",
			"퇐",
			7,
			"퇙",
			17
		],
		[
			"b861",
			"퇫",
			8,
			"퇵퇶퇷퇹",
			13
		],
		[
			"b881",
			"툈툊",
			5,
			"툑",
			24,
			"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",
			4,
			"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"
		],
		[
			"b941",
			"툪툫툮툯툱툲툳툵",
			6,
			"툾퉀퉂",
			5,
			"퉉퉊퉋퉌"
		],
		[
			"b961",
			"퉍",
			14,
			"퉝",
			6,
			"퉥퉦퉧퉨"
		],
		[
			"b981",
			"퉩",
			22,
			"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",
			4,
			"받",
			4,
			"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"
		],
		[
			"ba41",
			"튍튎튏튒튓튔튖",
			5,
			"튝튞튟튡튢튣튥",
			6,
			"튭"
		],
		[
			"ba61",
			"튮튯튰튲",
			5,
			"튺튻튽튾틁틃",
			4,
			"틊틌",
			5
		],
		[
			"ba81",
			"틒틓틕틖틗틙틚틛틝",
			6,
			"틦",
			9,
			"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"
		],
		[
			"bb41",
			"틻",
			4,
			"팂팄팆",
			5,
			"팏팑팒팓팕팗",
			4,
			"팞팢팣"
		],
		[
			"bb61",
			"팤팦팧팪팫팭팮팯팱",
			6,
			"팺팾",
			5,
			"퍆퍇퍈퍉"
		],
		[
			"bb81",
			"퍊",
			31,
			"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"
		],
		[
			"bc41",
			"퍪",
			17,
			"퍾퍿펁펂펃펅펆펇"
		],
		[
			"bc61",
			"펈펉펊펋펎펒",
			5,
			"펚펛펝펞펟펡",
			6,
			"펪펬펮"
		],
		[
			"bc81",
			"펯",
			4,
			"펵펶펷펹펺펻펽",
			6,
			"폆폇폊",
			5,
			"폑",
			5,
			"샥샨샬샴샵샷샹섀섄섈섐섕서",
			4,
			"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"
		],
		[
			"bd41",
			"폗폙",
			7,
			"폢폤",
			7,
			"폮폯폱폲폳폵폶폷"
		],
		[
			"bd61",
			"폸폹폺폻폾퐀퐂",
			5,
			"퐉",
			13
		],
		[
			"bd81",
			"퐗",
			5,
			"퐞",
			25,
			"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"
		],
		[
			"be41",
			"퐸",
			7,
			"푁푂푃푅",
			14
		],
		[
			"be61",
			"푔",
			7,
			"푝푞푟푡푢푣푥",
			7,
			"푮푰푱푲"
		],
		[
			"be81",
			"푳",
			4,
			"푺푻푽푾풁풃",
			4,
			"풊풌풎",
			5,
			"풕",
			8,
			"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",
			6,
			"엌엎"
		],
		[
			"bf41",
			"풞",
			10,
			"풪",
			14
		],
		[
			"bf61",
			"풹",
			18,
			"퓍퓎퓏퓑퓒퓓퓕"
		],
		[
			"bf81",
			"퓖",
			5,
			"퓝퓞퓠",
			7,
			"퓩퓪퓫퓭퓮퓯퓱",
			6,
			"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",
			5,
			"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"
		],
		[
			"c041",
			"퓾",
			5,
			"픅픆픇픉픊픋픍",
			6,
			"픖픘",
			5
		],
		[
			"c061",
			"픞",
			25
		],
		[
			"c081",
			"픸픹픺픻픾픿핁핂핃핅",
			6,
			"핎핐핒",
			5,
			"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",
			7,
			"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"
		],
		[
			"c141",
			"핤핦핧핪핬핮",
			5,
			"핶핷핹핺핻핽",
			6,
			"햆햊햋"
		],
		[
			"c161",
			"햌햍햎햏햑",
			19,
			"햦햧"
		],
		[
			"c181",
			"햨",
			31,
			"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"
		],
		[
			"c241",
			"헊헋헍헎헏헑헓",
			4,
			"헚헜헞",
			5,
			"헦헧헩헪헫헭헮"
		],
		[
			"c261",
			"헯",
			4,
			"헶헸헺",
			5,
			"혂혃혅혆혇혉",
			6,
			"혒"
		],
		[
			"c281",
			"혖",
			5,
			"혝혞혟혡혢혣혥",
			7,
			"혮",
			9,
			"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"
		],
		[
			"c341",
			"혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",
			4
		],
		[
			"c361",
			"홢",
			4,
			"홨홪",
			5,
			"홲홳홵",
			11
		],
		[
			"c381",
			"횁횂횄횆",
			5,
			"횎횏횑횒횓횕",
			7,
			"횞횠횢",
			5,
			"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"
		],
		[
			"c441",
			"횫횭횮횯횱",
			7,
			"횺횼",
			7,
			"훆훇훉훊훋"
		],
		[
			"c461",
			"훍훎훏훐훒훓훕훖훘훚",
			5,
			"훡훢훣훥훦훧훩",
			4
		],
		[
			"c481",
			"훮훯훱훲훳훴훶",
			5,
			"훾훿휁휂휃휅",
			11,
			"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"
		],
		[
			"c541",
			"휕휖휗휚휛휝휞휟휡",
			6,
			"휪휬휮",
			5,
			"휶휷휹"
		],
		[
			"c561",
			"휺휻휽",
			6,
			"흅흆흈흊",
			5,
			"흒흓흕흚",
			4
		],
		[
			"c581",
			"흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",
			6,
			"흾흿힀힂",
			5,
			"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"
		],
		[
			"c641",
			"힍힎힏힑",
			6,
			"힚힜힞",
			5
		],
		[
			"c6a1",
			"퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"
		],
		[
			"c7a1",
			"퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"
		],
		[
			"c8a1",
			"혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"
		],
		[
			"caa1",
			"伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"
		],
		[
			"cba1",
			"匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"
		],
		[
			"cca1",
			"瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"
		],
		[
			"cda1",
			"棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"
		],
		[
			"cea1",
			"科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"
		],
		[
			"cfa1",
			"區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"
		],
		[
			"d0a1",
			"鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"
		],
		[
			"d1a1",
			"朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",
			5,
			"那樂",
			4,
			"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"
		],
		[
			"d2a1",
			"納臘蠟衲囊娘廊",
			4,
			"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",
			5,
			"駑魯",
			10,
			"濃籠聾膿農惱牢磊腦賂雷尿壘",
			7,
			"嫩訥杻紐勒",
			5,
			"能菱陵尼泥匿溺多茶"
		],
		[
			"d3a1",
			"丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"
		],
		[
			"d4a1",
			"棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"
		],
		[
			"d5a1",
			"蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"
		],
		[
			"d6a1",
			"煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"
		],
		[
			"d7a1",
			"遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"
		],
		[
			"d8a1",
			"立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"
		],
		[
			"d9a1",
			"蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"
		],
		[
			"daa1",
			"汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"
		],
		[
			"dba1",
			"發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"
		],
		[
			"dca1",
			"碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"
		],
		[
			"dda1",
			"孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"
		],
		[
			"dea1",
			"脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"
		],
		[
			"dfa1",
			"傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"
		],
		[
			"e0a1",
			"胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"
		],
		[
			"e1a1",
			"聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"
		],
		[
			"e2a1",
			"戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"
		],
		[
			"e3a1",
			"嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"
		],
		[
			"e4a1",
			"沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"
		],
		[
			"e5a1",
			"櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"
		],
		[
			"e6a1",
			"旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"
		],
		[
			"e7a1",
			"簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"
		],
		[
			"e8a1",
			"烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"
		],
		[
			"e9a1",
			"窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"
		],
		[
			"eaa1",
			"運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"
		],
		[
			"eba1",
			"濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"
		],
		[
			"eca1",
			"議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"
		],
		[
			"eda1",
			"立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"
		],
		[
			"eea1",
			"障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"
		],
		[
			"efa1",
			"煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"
		],
		[
			"f0a1",
			"靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"
		],
		[
			"f1a1",
			"踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"
		],
		[
			"f2a1",
			"咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"
		],
		[
			"f3a1",
			"鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"
		],
		[
			"f4a1",
			"責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"
		],
		[
			"f5a1",
			"椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"
		],
		[
			"f6a1",
			"贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"
		],
		[
			"f7a1",
			"鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"
		],
		[
			"f8a1",
			"阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"
		],
		[
			"f9a1",
			"品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"
		],
		[
			"faa1",
			"行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"
		],
		[
			"fba1",
			"形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"
		],
		[
			"fca1",
			"禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"
		],
		[
			"fda1",
			"爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"
		]
	];

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = [
		[
			"0",
			"\u0000",
			127
		],
		[
			"a140",
			"　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"
		],
		[
			"a1a1",
			"﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",
			4,
			"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"
		],
		[
			"a240",
			"＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",
			7,
			"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"
		],
		[
			"a2a1",
			"╮╰╯═╞╪╡◢◣◥◤╱╲╳０",
			9,
			"Ⅰ",
			9,
			"〡",
			8,
			"十卄卅Ａ",
			25,
			"ａ",
			21
		],
		[
			"a340",
			"ｗｘｙｚΑ",
			16,
			"Σ",
			6,
			"α",
			16,
			"σ",
			6,
			"ㄅ",
			10
		],
		[
			"a3a1",
			"ㄐ",
			25,
			"˙ˉˊˇˋ"
		],
		[
			"a3e1",
			"€"
		],
		[
			"a440",
			"一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"
		],
		[
			"a4a1",
			"丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"
		],
		[
			"a540",
			"世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"
		],
		[
			"a5a1",
			"央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"
		],
		[
			"a640",
			"共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"
		],
		[
			"a6a1",
			"式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"
		],
		[
			"a740",
			"作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"
		],
		[
			"a7a1",
			"均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"
		],
		[
			"a840",
			"杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"
		],
		[
			"a8a1",
			"芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"
		],
		[
			"a940",
			"咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"
		],
		[
			"a9a1",
			"屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"
		],
		[
			"aa40",
			"昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"
		],
		[
			"aaa1",
			"炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"
		],
		[
			"ab40",
			"陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"
		],
		[
			"aba1",
			"哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"
		],
		[
			"ac40",
			"拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"
		],
		[
			"aca1",
			"活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"
		],
		[
			"ad40",
			"耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"
		],
		[
			"ada1",
			"迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"
		],
		[
			"ae40",
			"哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"
		],
		[
			"aea1",
			"恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"
		],
		[
			"af40",
			"浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"
		],
		[
			"afa1",
			"砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"
		],
		[
			"b040",
			"虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"
		],
		[
			"b0a1",
			"陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"
		],
		[
			"b140",
			"娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"
		],
		[
			"b1a1",
			"情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"
		],
		[
			"b240",
			"毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"
		],
		[
			"b2a1",
			"瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"
		],
		[
			"b340",
			"莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"
		],
		[
			"b3a1",
			"部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"
		],
		[
			"b440",
			"婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"
		],
		[
			"b4a1",
			"插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"
		],
		[
			"b540",
			"溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"
		],
		[
			"b5a1",
			"窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"
		],
		[
			"b640",
			"詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"
		],
		[
			"b6a1",
			"間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"
		],
		[
			"b740",
			"媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"
		],
		[
			"b7a1",
			"楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"
		],
		[
			"b840",
			"睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"
		],
		[
			"b8a1",
			"腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"
		],
		[
			"b940",
			"辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"
		],
		[
			"b9a1",
			"飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"
		],
		[
			"ba40",
			"愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"
		],
		[
			"baa1",
			"滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"
		],
		[
			"bb40",
			"罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"
		],
		[
			"bba1",
			"說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"
		],
		[
			"bc40",
			"劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"
		],
		[
			"bca1",
			"慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"
		],
		[
			"bd40",
			"瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"
		],
		[
			"bda1",
			"翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"
		],
		[
			"be40",
			"輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"
		],
		[
			"bea1",
			"鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"
		],
		[
			"bf40",
			"濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"
		],
		[
			"bfa1",
			"縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"
		],
		[
			"c040",
			"錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"
		],
		[
			"c0a1",
			"嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"
		],
		[
			"c140",
			"瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"
		],
		[
			"c1a1",
			"薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"
		],
		[
			"c240",
			"駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"
		],
		[
			"c2a1",
			"癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"
		],
		[
			"c340",
			"鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"
		],
		[
			"c3a1",
			"獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"
		],
		[
			"c440",
			"願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"
		],
		[
			"c4a1",
			"纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"
		],
		[
			"c540",
			"護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"
		],
		[
			"c5a1",
			"禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"
		],
		[
			"c640",
			"讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"
		],
		[
			"c940",
			"乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"
		],
		[
			"c9a1",
			"氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"
		],
		[
			"ca40",
			"汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"
		],
		[
			"caa1",
			"吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"
		],
		[
			"cb40",
			"杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"
		],
		[
			"cba1",
			"芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"
		],
		[
			"cc40",
			"坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"
		],
		[
			"cca1",
			"怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"
		],
		[
			"cd40",
			"泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"
		],
		[
			"cda1",
			"矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"
		],
		[
			"ce40",
			"哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"
		],
		[
			"cea1",
			"峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"
		],
		[
			"cf40",
			"柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"
		],
		[
			"cfa1",
			"洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"
		],
		[
			"d040",
			"穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"
		],
		[
			"d0a1",
			"苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"
		],
		[
			"d140",
			"唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"
		],
		[
			"d1a1",
			"恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"
		],
		[
			"d240",
			"毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"
		],
		[
			"d2a1",
			"牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"
		],
		[
			"d340",
			"笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"
		],
		[
			"d3a1",
			"荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"
		],
		[
			"d440",
			"酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"
		],
		[
			"d4a1",
			"唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"
		],
		[
			"d540",
			"崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"
		],
		[
			"d5a1",
			"捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"
		],
		[
			"d640",
			"淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"
		],
		[
			"d6a1",
			"痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"
		],
		[
			"d740",
			"耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"
		],
		[
			"d7a1",
			"蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"
		],
		[
			"d840",
			"釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"
		],
		[
			"d8a1",
			"堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"
		],
		[
			"d940",
			"惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"
		],
		[
			"d9a1",
			"晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"
		],
		[
			"da40",
			"湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"
		],
		[
			"daa1",
			"琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"
		],
		[
			"db40",
			"罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"
		],
		[
			"dba1",
			"菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"
		],
		[
			"dc40",
			"軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"
		],
		[
			"dca1",
			"隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"
		],
		[
			"dd40",
			"媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"
		],
		[
			"dda1",
			"搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"
		],
		[
			"de40",
			"毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"
		],
		[
			"dea1",
			"煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"
		],
		[
			"df40",
			"稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"
		],
		[
			"dfa1",
			"腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"
		],
		[
			"e040",
			"觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"
		],
		[
			"e0a1",
			"遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"
		],
		[
			"e140",
			"凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"
		],
		[
			"e1a1",
			"寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"
		],
		[
			"e240",
			"榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"
		],
		[
			"e2a1",
			"漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"
		],
		[
			"e340",
			"禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"
		],
		[
			"e3a1",
			"耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"
		],
		[
			"e440",
			"裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"
		],
		[
			"e4a1",
			"銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"
		],
		[
			"e540",
			"噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"
		],
		[
			"e5a1",
			"憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"
		],
		[
			"e640",
			"澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"
		],
		[
			"e6a1",
			"獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"
		],
		[
			"e740",
			"膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"
		],
		[
			"e7a1",
			"蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"
		],
		[
			"e840",
			"踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"
		],
		[
			"e8a1",
			"銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"
		],
		[
			"e940",
			"噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"
		],
		[
			"e9a1",
			"憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"
		],
		[
			"ea40",
			"澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"
		],
		[
			"eaa1",
			"瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"
		],
		[
			"eb40",
			"蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"
		],
		[
			"eba1",
			"諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"
		],
		[
			"ec40",
			"錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"
		],
		[
			"eca1",
			"魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"
		],
		[
			"ed40",
			"檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"
		],
		[
			"eda1",
			"瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"
		],
		[
			"ee40",
			"蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"
		],
		[
			"eea1",
			"謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"
		],
		[
			"ef40",
			"鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"
		],
		[
			"efa1",
			"鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"
		],
		[
			"f040",
			"璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"
		],
		[
			"f0a1",
			"臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"
		],
		[
			"f140",
			"蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"
		],
		[
			"f1a1",
			"鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"
		],
		[
			"f240",
			"徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"
		],
		[
			"f2a1",
			"礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"
		],
		[
			"f340",
			"譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"
		],
		[
			"f3a1",
			"鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"
		],
		[
			"f440",
			"嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"
		],
		[
			"f4a1",
			"禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"
		],
		[
			"f540",
			"鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"
		],
		[
			"f5a1",
			"鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"
		],
		[
			"f640",
			"蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"
		],
		[
			"f6a1",
			"騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"
		],
		[
			"f740",
			"糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"
		],
		[
			"f7a1",
			"驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"
		],
		[
			"f840",
			"讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"
		],
		[
			"f8a1",
			"齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"
		],
		[
			"f940",
			"纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"
		],
		[
			"f9a1",
			"龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"
		]
	];

/***/ },
/* 60 */
/***/ function(module, exports) {

	module.exports = [
		[
			"8740",
			"䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"
		],
		[
			"8767",
			"綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"
		],
		[
			"87a1",
			"𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"
		],
		[
			"8840",
			"㇀",
			4,
			"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"
		],
		[
			"88a1",
			"ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"
		],
		[
			"8940",
			"𪎩𡅅"
		],
		[
			"8943",
			"攊"
		],
		[
			"8946",
			"丽滝鵎釟"
		],
		[
			"894c",
			"𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"
		],
		[
			"89a1",
			"琑糼緍楆竉刧"
		],
		[
			"89ab",
			"醌碸酞肼"
		],
		[
			"89b0",
			"贋胶𠧧"
		],
		[
			"89b5",
			"肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"
		],
		[
			"89c1",
			"溚舾甙"
		],
		[
			"89c5",
			"䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"
		],
		[
			"8a40",
			"𧶄唥"
		],
		[
			"8a43",
			"𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"
		],
		[
			"8a64",
			"𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"
		],
		[
			"8a76",
			"䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"
		],
		[
			"8aa1",
			"𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"
		],
		[
			"8aac",
			"䠋𠆩㿺塳𢶍"
		],
		[
			"8ab2",
			"𤗈𠓼𦂗𠽌𠶖啹䂻䎺"
		],
		[
			"8abb",
			"䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"
		],
		[
			"8ac9",
			"𪘁𠸉𢫏𢳉"
		],
		[
			"8ace",
			"𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"
		],
		[
			"8adf",
			"𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"
		],
		[
			"8af6",
			"𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"
		],
		[
			"8b40",
			"𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"
		],
		[
			"8b55",
			"𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"
		],
		[
			"8ba1",
			"𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"
		],
		[
			"8bde",
			"𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"
		],
		[
			"8c40",
			"倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"
		],
		[
			"8ca1",
			"𣏹椙橃𣱣泿"
		],
		[
			"8ca7",
			"爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"
		],
		[
			"8cc9",
			"顨杫䉶圽"
		],
		[
			"8cce",
			"藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"
		],
		[
			"8ce6",
			"峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"
		],
		[
			"8d40",
			"𠮟"
		],
		[
			"8d42",
			"𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"
		],
		[
			"8da1",
			"㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"
		],
		[
			"8e40",
			"𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"
		],
		[
			"8ea1",
			"繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"
		],
		[
			"8f40",
			"蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"
		],
		[
			"8fa1",
			"𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"
		],
		[
			"9040",
			"趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"
		],
		[
			"90a1",
			"𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"
		],
		[
			"9140",
			"𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"
		],
		[
			"91a1",
			"鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"
		],
		[
			"9240",
			"𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"
		],
		[
			"92a1",
			"働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"
		],
		[
			"9340",
			"媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"
		],
		[
			"93a1",
			"摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"
		],
		[
			"9440",
			"銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"
		],
		[
			"94a1",
			"㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"
		],
		[
			"9540",
			"𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"
		],
		[
			"95a1",
			"衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"
		],
		[
			"9640",
			"桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"
		],
		[
			"96a1",
			"𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"
		],
		[
			"9740",
			"愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"
		],
		[
			"97a1",
			"𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"
		],
		[
			"9840",
			"𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"
		],
		[
			"98a1",
			"咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"
		],
		[
			"9940",
			"䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"
		],
		[
			"99a1",
			"䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"
		],
		[
			"9a40",
			"鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"
		],
		[
			"9aa1",
			"黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"
		],
		[
			"9b40",
			"𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"
		],
		[
			"9b62",
			"𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"
		],
		[
			"9ba1",
			"椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"
		],
		[
			"9c40",
			"嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"
		],
		[
			"9ca1",
			"㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"
		],
		[
			"9d40",
			"𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"
		],
		[
			"9da1",
			"辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"
		],
		[
			"9e40",
			"𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"
		],
		[
			"9ea1",
			"鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"
		],
		[
			"9ead",
			"𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"
		],
		[
			"9ec5",
			"㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"
		],
		[
			"9ef5",
			"噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"
		],
		[
			"9f40",
			"籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"
		],
		[
			"9f4f",
			"凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"
		],
		[
			"9fa1",
			"椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"
		],
		[
			"9fae",
			"酙隁酜"
		],
		[
			"9fb2",
			"酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"
		],
		[
			"9fc1",
			"𤤙盖鮝个𠳔莾衂"
		],
		[
			"9fc9",
			"届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"
		],
		[
			"9fdb",
			"歒酼龥鮗頮颴骺麨麄煺笔"
		],
		[
			"9fe7",
			"毺蠘罸"
		],
		[
			"9feb",
			"嘠𪙊蹷齓"
		],
		[
			"9ff0",
			"跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"
		],
		[
			"a040",
			"𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"
		],
		[
			"a055",
			"𡠻𦸅"
		],
		[
			"a058",
			"詾𢔛"
		],
		[
			"a05b",
			"惽癧髗鵄鍮鮏蟵"
		],
		[
			"a063",
			"蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"
		],
		[
			"a073",
			"坟慯抦戹拎㩜懢厪𣏵捤栂㗒"
		],
		[
			"a0a1",
			"嵗𨯂迚𨸹"
		],
		[
			"a0a6",
			"僙𡵆礆匲阸𠼻䁥"
		],
		[
			"a0ae",
			"矾"
		],
		[
			"a0b0",
			"糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"
		],
		[
			"a0d4",
			"覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"
		],
		[
			"a0e2",
			"罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"
		],
		[
			"a3c0",
			"␀",
			31,
			"␡"
		],
		[
			"c6a1",
			"①",
			9,
			"⑴",
			9,
			"ⅰ",
			9,
			"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",
			23
		],
		[
			"c740",
			"す",
			58,
			"ァアィイ"
		],
		[
			"c7a1",
			"ゥ",
			81,
			"А",
			5,
			"ЁЖ",
			4
		],
		[
			"c840",
			"Л",
			26,
			"ёж",
			25,
			"⇧↸↹㇏𠃌乚𠂊刂䒑"
		],
		[
			"c8a1",
			"龰冈龱𧘇"
		],
		[
			"c8cd",
			"￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"
		],
		[
			"c8f5",
			"ʃɐɛɔɵœøŋʊɪ"
		],
		[
			"f9fe",
			"￭"
		],
		[
			"fa40",
			"𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"
		],
		[
			"faa1",
			"鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"
		],
		[
			"fb40",
			"𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"
		],
		[
			"fba1",
			"𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"
		],
		[
			"fc40",
			"廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"
		],
		[
			"fca1",
			"𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"
		],
		[
			"fd40",
			"𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"
		],
		[
			"fda1",
			"𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"
		],
		[
			"fe40",
			"鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"
		],
		[
			"fea1",
			"𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"
		]
	];

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var Transform = __webpack_require__(38).Transform;
	
	// == Exports ==================================================================
	module.exports = function (iconv) {
	
	    // Additional Public API.
	    iconv.encodeStream = function encodeStream(encoding, options) {
	        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);
	    };
	
	    iconv.decodeStream = function decodeStream(encoding, options) {
	        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);
	    };
	
	    iconv.supportsStreams = true;
	
	    // Not published yet.
	    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;
	    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;
	    iconv._collect = IconvLiteDecoderStream.prototype.collect;
	};
	
	// == Encoder stream =======================================================
	function IconvLiteEncoderStream(conv, options) {
	    this.conv = conv;
	    options = options || {};
	    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.
	    Transform.call(this, options);
	}
	
	IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {
	    constructor: { value: IconvLiteEncoderStream }
	});
	
	IconvLiteEncoderStream.prototype._transform = function (chunk, encoding, done) {
	    if (typeof chunk != 'string') return done(new Error("Iconv encoding stream needs strings as its input."));
	    try {
	        var res = this.conv.write(chunk);
	        if (res && res.length) this.push(res);
	        done();
	    } catch (e) {
	        done(e);
	    }
	};
	
	IconvLiteEncoderStream.prototype._flush = function (done) {
	    try {
	        var res = this.conv.end();
	        if (res && res.length) this.push(res);
	        done();
	    } catch (e) {
	        done(e);
	    }
	};
	
	IconvLiteEncoderStream.prototype.collect = function (cb) {
	    var chunks = [];
	    this.on('error', cb);
	    this.on('data', function (chunk) {
	        chunks.push(chunk);
	    });
	    this.on('end', function () {
	        cb(null, Buffer.concat(chunks));
	    });
	    return this;
	};
	
	// == Decoder stream =======================================================
	function IconvLiteDecoderStream(conv, options) {
	    this.conv = conv;
	    options = options || {};
	    options.encoding = this.encoding = 'utf8'; // We output strings.
	    Transform.call(this, options);
	}
	
	IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {
	    constructor: { value: IconvLiteDecoderStream }
	});
	
	IconvLiteDecoderStream.prototype._transform = function (chunk, encoding, done) {
	    if (!Buffer.isBuffer(chunk)) return done(new Error("Iconv decoding stream needs buffers as its input."));
	    try {
	        var res = this.conv.write(chunk);
	        if (res && res.length) this.push(res, this.encoding);
	        done();
	    } catch (e) {
	        done(e);
	    }
	};
	
	IconvLiteDecoderStream.prototype._flush = function (done) {
	    try {
	        var res = this.conv.end();
	        if (res && res.length) this.push(res, this.encoding);
	        done();
	    } catch (e) {
	        done(e);
	    }
	};
	
	IconvLiteDecoderStream.prototype.collect = function (cb) {
	    var res = '';
	    this.on('error', cb);
	    this.on('data', function (chunk) {
	        res += chunk;
	    });
	    this.on('end', function () {
	        cb(null, res);
	    });
	    return this;
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	// == Extend Node primitives to use iconv-lite =================================
	
	module.exports = function (iconv) {
	    var original = undefined; // Place to keep original methods.
	
	    // Node authors rewrote Buffer internals to make it compatible with
	    // Uint8Array and we cannot patch key functions since then.
	    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);
	
	    iconv.extendNodeEncodings = function extendNodeEncodings() {
	        if (original) return;
	        original = {};
	
	        if (!iconv.supportsNodeEncodingsExtension) {
	            console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node");
	            console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");
	            return;
	        }
	
	        var nodeNativeEncodings = {
	            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true,
	            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true
	        };
	
	        Buffer.isNativeEncoding = function (enc) {
	            return enc && nodeNativeEncodings[enc.toLowerCase()];
	        };
	
	        // -- SlowBuffer -----------------------------------------------------------
	        var SlowBuffer = __webpack_require__(63).SlowBuffer;
	
	        original.SlowBufferToString = SlowBuffer.prototype.toString;
	        SlowBuffer.prototype.toString = function (encoding, start, end) {
	            encoding = String(encoding || 'utf8').toLowerCase();
	
	            // Use native conversion when possible
	            if (Buffer.isNativeEncoding(encoding)) return original.SlowBufferToString.call(this, encoding, start, end);
	
	            // Otherwise, use our decoding method.
	            if (typeof start == 'undefined') start = 0;
	            if (typeof end == 'undefined') end = this.length;
	            return iconv.decode(this.slice(start, end), encoding);
	        };
	
	        original.SlowBufferWrite = SlowBuffer.prototype.write;
	        SlowBuffer.prototype.write = function (string, offset, length, encoding) {
	            // Support both (string, offset, length, encoding)
	            // and the legacy (string, encoding, offset, length)
	            if (isFinite(offset)) {
	                if (!isFinite(length)) {
	                    encoding = length;
	                    length = undefined;
	                }
	            } else {
	                // legacy
	                var swap = encoding;
	                encoding = offset;
	                offset = length;
	                length = swap;
	            }
	
	            offset = +offset || 0;
	            var remaining = this.length - offset;
	            if (!length) {
	                length = remaining;
	            } else {
	                length = +length;
	                if (length > remaining) {
	                    length = remaining;
	                }
	            }
	            encoding = String(encoding || 'utf8').toLowerCase();
	
	            // Use native conversion when possible
	            if (Buffer.isNativeEncoding(encoding)) return original.SlowBufferWrite.call(this, string, offset, length, encoding);
	
	            if (string.length > 0 && (length < 0 || offset < 0)) throw new RangeError('attempt to write beyond buffer bounds');
	
	            // Otherwise, use our encoding method.
	            var buf = iconv.encode(string, encoding);
	            if (buf.length < length) length = buf.length;
	            buf.copy(this, offset, 0, length);
	            return length;
	        };
	
	        // -- Buffer ---------------------------------------------------------------
	
	        original.BufferIsEncoding = Buffer.isEncoding;
	        Buffer.isEncoding = function (encoding) {
	            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);
	        };
	
	        original.BufferByteLength = Buffer.byteLength;
	        Buffer.byteLength = SlowBuffer.byteLength = function (str, encoding) {
	            encoding = String(encoding || 'utf8').toLowerCase();
	
	            // Use native conversion when possible
	            if (Buffer.isNativeEncoding(encoding)) return original.BufferByteLength.call(this, str, encoding);
	
	            // Slow, I know, but we don't have a better way yet.
	            return iconv.encode(str, encoding).length;
	        };
	
	        original.BufferToString = Buffer.prototype.toString;
	        Buffer.prototype.toString = function (encoding, start, end) {
	            encoding = String(encoding || 'utf8').toLowerCase();
	
	            // Use native conversion when possible
	            if (Buffer.isNativeEncoding(encoding)) return original.BufferToString.call(this, encoding, start, end);
	
	            // Otherwise, use our decoding method.
	            if (typeof start == 'undefined') start = 0;
	            if (typeof end == 'undefined') end = this.length;
	            return iconv.decode(this.slice(start, end), encoding);
	        };
	
	        original.BufferWrite = Buffer.prototype.write;
	        Buffer.prototype.write = function (string, offset, length, encoding) {
	            var _offset = offset,
	                _length = length,
	                _encoding = encoding;
	            // Support both (string, offset, length, encoding)
	            // and the legacy (string, encoding, offset, length)
	            if (isFinite(offset)) {
	                if (!isFinite(length)) {
	                    encoding = length;
	                    length = undefined;
	                }
	            } else {
	                // legacy
	                var swap = encoding;
	                encoding = offset;
	                offset = length;
	                length = swap;
	            }
	
	            encoding = String(encoding || 'utf8').toLowerCase();
	
	            // Use native conversion when possible
	            if (Buffer.isNativeEncoding(encoding)) return original.BufferWrite.call(this, string, _offset, _length, _encoding);
	
	            offset = +offset || 0;
	            var remaining = this.length - offset;
	            if (!length) {
	                length = remaining;
	            } else {
	                length = +length;
	                if (length > remaining) {
	                    length = remaining;
	                }
	            }
	
	            if (string.length > 0 && (length < 0 || offset < 0)) throw new RangeError('attempt to write beyond buffer bounds');
	
	            // Otherwise, use our encoding method.
	            var buf = iconv.encode(string, encoding);
	            if (buf.length < length) length = buf.length;
	            buf.copy(this, offset, 0, length);
	            return length;
	
	            // TODO: Set _charsWritten.
	        };
	
	        // -- Readable -------------------------------------------------------------
	        if (iconv.supportsStreams) {
	            var Readable = __webpack_require__(38).Readable;
	
	            original.ReadableSetEncoding = Readable.prototype.setEncoding;
	            Readable.prototype.setEncoding = function setEncoding(enc, options) {
	                // Use our own decoder, it has the same interface.
	                // We cannot use original function as it doesn't handle BOM-s.
	                this._readableState.decoder = iconv.getDecoder(enc, options);
	                this._readableState.encoding = enc;
	            };
	
	            Readable.prototype.collect = iconv._collect;
	        }
	    };
	
	    // Remove iconv-lite Node primitive extensions.
	    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {
	        if (!iconv.supportsNodeEncodingsExtension) return;
	        if (!original) throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");
	
	        delete Buffer.isNativeEncoding;
	
	        var SlowBuffer = __webpack_require__(63).SlowBuffer;
	
	        SlowBuffer.prototype.toString = original.SlowBufferToString;
	        SlowBuffer.prototype.write = original.SlowBufferWrite;
	
	        Buffer.isEncoding = original.BufferIsEncoding;
	        Buffer.byteLength = original.BufferByteLength;
	        Buffer.prototype.toString = original.BufferToString;
	        Buffer.prototype.write = original.BufferWrite;
	
	        if (iconv.supportsStreams) {
	            var Readable = __webpack_require__(38).Readable;
	
	            Readable.prototype.setEncoding = original.ReadableSetEncoding;
	            delete Readable.prototype.collect;
	        }
	
	        original = undefined;
	    };
	};

/***/ },
/* 63 */
/***/ function(module, exports) {

	module.exports = require("buffer");

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var iconv_package;
	var Iconv;
	
	try {
	    // this is to fool browserify so it doesn't try (in vain) to install iconv.
	    iconv_package = 'iconv';
	    Iconv = __webpack_require__(65)(iconv_package).Iconv;
	} catch (E) {
	    // node-iconv not present
	}
	
	module.exports = Iconv;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./encoding": 40,
		"./encoding.js": 40,
		"./iconv-loader": 64,
		"./iconv-loader.js": 64
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 65;


/***/ },
/* 66 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var isStream = module.exports = function (stream) {
		return stream !== null && (typeof stream === 'undefined' ? 'undefined' : _typeof(stream)) === 'object' && typeof stream.pipe === 'function';
	};
	
	isStream.writable = function (stream) {
		return isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && _typeof(stream._writableState) === 'object';
	};
	
	isStream.readable = function (stream) {
		return isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && _typeof(stream._readableState) === 'object';
	};
	
	isStream.duplex = function (stream) {
		return isStream.writable(stream) && isStream.readable(stream);
	};
	
	isStream.transform = function (stream) {
		return isStream.duplex(stream) && typeof stream._transform === 'function' && _typeof(stream._transformState) === 'object';
	};

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * fetch-error.js
	 *
	 * FetchError interface for operational errors
	 */
	
	module.exports = FetchError;
	
	/**
	 * Create FetchError instance
	 *
	 * @param   String      message      Error message for human
	 * @param   String      type         Error type for machine
	 * @param   String      systemError  For Node.js system error
	 * @return  FetchError
	 */
	function FetchError(message, type, systemError) {
	
	  // hide custom error implementation details from end-users
	  Error.captureStackTrace(this, this.constructor);
	
	  this.name = this.constructor.name;
	  this.message = message;
	  this.type = type;
	
	  // when err.type is `system`, err.code contains system error code
	  if (systemError) {
	    this.code = this.errno = systemError.code;
	  }
	}
	
	__webpack_require__(68).inherits(FetchError, Error);

/***/ },
/* 68 */
/***/ function(module, exports) {

	module.exports = require("util");

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * response.js
	 *
	 * Response class provides content decoding
	 */
	
	var http = __webpack_require__(35);
	var Headers = __webpack_require__(70);
	var Body = __webpack_require__(39);
	
	module.exports = Response;
	
	/**
	 * Response class
	 *
	 * @param   Stream  body  Readable stream
	 * @param   Object  opts  Response options
	 * @return  Void
	 */
	function Response(body, opts) {
	
	  opts = opts || {};
	
	  this.url = opts.url;
	  this.status = opts.status;
	  this.statusText = opts.statusText || http.STATUS_CODES[this.status];
	  this.headers = new Headers(opts.headers);
	  this.ok = this.status >= 200 && this.status < 300;
	
	  Body.call(this, body, opts);
	}
	
	Response.prototype = Object.create(Body.prototype);
	
	/**
	 * Clone this response
	 *
	 * @return  Response
	 */
	Response.prototype.clone = function () {
	  return new Response(this._clone(this), {
	    url: this.url,
	    status: this.status,
	    statusText: this.statusText,
	    headers: this.headers,
	    ok: this.ok
	  });
	};

/***/ },
/* 70 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * headers.js
	 *
	 * Headers class offers convenient helpers
	 */
	
	module.exports = Headers;
	
	/**
	 * Headers class
	 *
	 * @param   Object  headers  Response headers
	 * @return  Void
	 */
	function Headers(headers) {
	
	  var self = this;
	  this._headers = {};
	
	  // Headers
	  if (headers instanceof Headers) {
	    headers = headers.raw();
	  }
	
	  // plain object
	  for (var prop in headers) {
	    if (!headers.hasOwnProperty(prop)) {
	      continue;
	    }
	
	    if (typeof headers[prop] === 'string') {
	      this.set(prop, headers[prop]);
	    } else if (typeof headers[prop] === 'number' && !isNaN(headers[prop])) {
	      this.set(prop, headers[prop].toString());
	    } else if (headers[prop] instanceof Array) {
	      headers[prop].forEach(function (item) {
	        self.append(prop, item.toString());
	      });
	    }
	  }
	}
	
	/**
	 * Return first header value given name
	 *
	 * @param   String  name  Header name
	 * @return  Mixed
	 */
	Headers.prototype.get = function (name) {
	  var list = this._headers[name.toLowerCase()];
	  return list ? list[0] : null;
	};
	
	/**
	 * Return all header values given name
	 *
	 * @param   String  name  Header name
	 * @return  Array
	 */
	Headers.prototype.getAll = function (name) {
	  if (!this.has(name)) {
	    return [];
	  }
	
	  return this._headers[name.toLowerCase()];
	};
	
	/**
	 * Iterate over all headers
	 *
	 * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
	 * @param   Boolean   thisArg   `this` context for callback function
	 * @return  Void
	 */
	Headers.prototype.forEach = function (callback, thisArg) {
	  Object.getOwnPropertyNames(this._headers).forEach(function (name) {
	    this._headers[name].forEach(function (value) {
	      callback.call(thisArg, value, name, this);
	    }, this);
	  }, this);
	};
	
	/**
	 * Overwrite header values given name
	 *
	 * @param   String  name   Header name
	 * @param   String  value  Header value
	 * @return  Void
	 */
	Headers.prototype.set = function (name, value) {
	  this._headers[name.toLowerCase()] = [value];
	};
	
	/**
	 * Append a value onto existing header
	 *
	 * @param   String  name   Header name
	 * @param   String  value  Header value
	 * @return  Void
	 */
	Headers.prototype.append = function (name, value) {
	  if (!this.has(name)) {
	    this.set(name, value);
	    return;
	  }
	
	  this._headers[name.toLowerCase()].push(value);
	};
	
	/**
	 * Check for header name existence
	 *
	 * @param   String   name  Header name
	 * @return  Boolean
	 */
	Headers.prototype.has = function (name) {
	  return this._headers.hasOwnProperty(name.toLowerCase());
	};
	
	/**
	 * Delete all header values given name
	 *
	 * @param   String  name  Header name
	 * @return  Void
	 */
	Headers.prototype['delete'] = function (name) {
	  delete this._headers[name.toLowerCase()];
	};
	
	/**
	 * Return raw headers (non-spec api)
	 *
	 * @return  Object
	 */
	Headers.prototype.raw = function () {
	  return this._headers;
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * request.js
	 *
	 * Request class contains server only options
	 */
	
	var parse_url = __webpack_require__(34).parse;
	var Headers = __webpack_require__(70);
	var Body = __webpack_require__(39);
	
	module.exports = Request;
	
	/**
	 * Request class
	 *
	 * @param   Mixed   input  Url or Request instance
	 * @param   Object  init   Custom options
	 * @return  Void
	 */
	function Request(input, init) {
		var url, url_parsed;
	
		// normalize input
		if (!(input instanceof Request)) {
			url = input;
			url_parsed = parse_url(url);
			input = {};
		} else {
			url = input.url;
			url_parsed = parse_url(url);
		}
	
		// normalize init
		init = init || {};
	
		// fetch spec options
		this.method = init.method || input.method || 'GET';
		this.redirect = init.redirect || input.redirect || 'follow';
		this.headers = new Headers(init.headers || input.headers || {});
		this.url = url;
	
		// server only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || input.follow || 0;
		this.agent = init.agent || input.agent;
	
		Body.call(this, init.body || this._clone(input), {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});
	
		// server request options
		this.protocol = url_parsed.protocol;
		this.hostname = url_parsed.hostname;
		this.port = url_parsed.port;
		this.path = url_parsed.path;
		this.auth = url_parsed.auth;
	}
	
	Request.prototype = Object.create(Body.prototype);
	
	/**
	 * Clone this request
	 *
	 * @return  Request
	 */
	Request.prototype.clone = function () {
		return new Request(this);
	};

/***/ },
/* 72 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Charity Actions
	var SET_CHARITY = exports.SET_CHARITY = 'SET_CHARITY';
	
	// Navigation Actions
	var ADVANCE_PAGE = exports.ADVANCE_PAGE = 'ADVANCE_PAGE';
	var RECEDE_PAGE = exports.RECEDE_PAGE = 'RECEDE_PAGE';
	var JUMP_TO_PAGE = exports.JUMP_TO_PAGE = 'JUMP_TO_PAGE';
	var JUMP_TO_PREVIOUS_PAGE = exports.JUMP_TO_PREVIOUS_PAGE = 'JUMP_TO_PREVIOUS_PAGE';
	
	// Payment Actions
	var CHOOSE_CONTRIBUTION_AMOUNT = exports.CHOOSE_CONTRIBUTION_AMOUNT = 'CHOOSE_CONTRIBUTION_AMOUNT';
	var CONFIRM_CONTRIBUTION = exports.CONFIRM_CONTRIBUTION = 'CONFIRM_CONTRIBUTION';
	
	var SET_EMAIL = exports.SET_EMAIL = 'SET_EMAIL';
	
	var SET_CREDIT_CARD_NUMBER = exports.SET_CREDIT_CARD_NUMBER = 'SET_CREDIT_CARD_NUMBER';
	var SET_CREDIT_CARD_EXPIRATION_DATE = exports.SET_CREDIT_CARD_EXPIRATION_DATE = 'SET_CREDIT_CARD_EXPIRATION_DATE';
	var SET_CREDIT_CARD_SECURITY_CODE = exports.SET_CREDIT_CARD_SECURITY_CODE = 'SET_CREDIT_CARD_SECURITY_CODE';
	
	// Payment Field Navigation Actions
	var DID_START_EDITING_CREDIT_CARD_NUMBER = exports.DID_START_EDITING_CREDIT_CARD_NUMBER = 'DID_START_EDITING_CREDIT_CARD_NUMBER';
	var DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE = exports.DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE = 'DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE';
	var DID_START_EDITING_CREDIT_CARD_SECURITY_CODE = exports.DID_START_EDITING_CREDIT_CARD_SECURITY_CODE = 'DID_START_EDITING_CREDIT_CARD_SECURITY CODE';
	
	var DID_FINISH_EDITING_CREDIT_CARD_NUMBER = exports.DID_FINISH_EDITING_CREDIT_CARD_NUMBER = 'DID_FINISH_EDITING_CREDIT_CARD_NUMBER';
	
	var SET_EDITING_CREDIT_CARD_NUMBER = exports.SET_EDITING_CREDIT_CARD_NUMBER = 'SET_EDITING_CREDIT_CARD_NUMBER';
	var SET_EDITING_CREDIT_CARD_EXPIRATION_DATE = exports.SET_EDITING_CREDIT_CARD_EXPIRATION_DATE = 'SET_EDITING_CREDIT_CARD_EXPIRATION_DATE';
	var SET_EDITING_CREDIT_CARD_SECURITY_CODE = exports.SET_EDITING_CREDIT_CARD_SECURITY_CODE = 'SET_EDITING_CREDIT_CARD_SECURITY_CODE';
	
	var HAS_ATTEMPTED_EMAIL_VALIDATION = exports.HAS_ATTEMPTED_EMAIL_VALIDATION = 'HAS_ATTEMPTED_EMAIL_VALIDATION';
	
	// Tokenziation Actions
	var REQUEST_PAYMENT_TOKEN = exports.REQUEST_PAYMENT_TOKEN = 'REQUEST_PAYMENT_TOKEN';
	var PAYMENT_TOKEN_RECEIVED = exports.PAYMENT_TOKEN_RECEIVED = 'PAYMENT_TOKEN_RECEIVED';
	var PAYMENT_TOKEN_REQUEST_FAILED = exports.PAYMENT_TOKEN_REQUEST_FAILED = 'PAYMENT_TOKEN_REQUEST_FAILED';
	
	// Credit Card Error Types
	var INVALID_CREDIT_CARD_NUMBER = exports.INVALID_CREDIT_CARD_NUMBER = 'INVALID_CREDIT_CARD_NUMBER';
	var INVALID_CREDIT_CARD_EXPIRATION_MONTH = exports.INVALID_CREDIT_CARD_EXPIRATION_MONTH = 'INVALID_CREDIT_CARD_EXPIRATION_MONTH';
	var INVALID_CREDIT_CARD_EXPIRATION_YEAR = exports.INVALID_CREDIT_CARD_EXPIRATION_YEAR = 'INVALID_CREDIT_CARD_EXPIRATION_YEAR';
	var INVALID_CREDIT_CARD_SECURITY_CODE = exports.INVALID_CREDIT_CARD_SECURITY_CODE = 'INVALID_CREDIT_CARD_SECURITY_CODE';
	var INCORRECT_CREDIT_CARD_NUMBER = exports.INCORRECT_CREDIT_CARD_NUMBER = 'INCORRECT_CREDIT_CARD_NUMBER';
	var INCORRECT_CREDIT_CARD_SECURITY_CODE = exports.INCORRECT_CREDIT_CARD_SECURITY_CODE = 'INCORRECT_CREDIT_CARD_SECURITY_CODE';
	var EXPIRED_CREDIT_CARD = exports.EXPIRED_CREDIT_CARD = 'EXPIRED_CREDIT_CARD';
	var DECLINED_CREDIT_CARD = exports.DECLINED_CREDIT_CARD = 'DECLINED_CREDIT_CARD';
	var UNRECOVERABLE_ERROR = exports.UNRECOVERABLE_ERROR = 'UNRECOVERABLE_ERROR';

/***/ },
/* 73 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var stripeErrorTypes = exports.stripeErrorTypes = {
		// Failure to connect to Stripe's API.
		API_CONNECTION_ERROR: 'api_connection_error',
		// API errors cover any other type of problem (e.g., a temporary problem with Stripe's servers) and are extremely uncommon.
		API_ERROR: 'api_error',
		// Failure to properly authenticate yourself in the request.
		AUTHENTICATION_ERROR: 'authentication_error',
		// Card errors are the most common type of error you should expect to handle. They result when the user enters a card that can't be charged for some reason.
		CARD_ERROR: 'card_error',
		// Invalid request errors arise when your request has invalid parameters.
		INVALID_REQUEST_ERROR: 'invalid_request_error',
		// Too many requests hit the API too quickly.
		RATE_LIMIT_ERROR: 'rate_limit_error'
	};
	
	var stripeErrorCodes = exports.stripeErrorCodes = {
		// The card number is not a valid credit card number.
		INVALID_NUMBER: 'invalid_number',
		// The card's expiration month is invalid.
		INVALID_EXPIRY_MONTH: 'invalid_expiry_month',
		// The card's expiration year is invalid.
		INVALID_EXPIRY_YEAR: 'invalid_expiry_year',
		// The card's security code is invalid.
		INVALID_CVC: 'invalid_cvc',
		// The card number is incorrect.
		INCORRECT_NUMBER: 'incorrect_number',
		// The card has expired.
		EXPIRED_CARD: 'expired_card',
		// The card's security code is incorrect.
		INCORRECT_CVC: 'incorrect_cvc',
		// The card's zip code failed validation.
		INCORRECT_ZIP: 'incorrect_zip',
		// The card was declined.
		CARD_DECLINED: 'card_declined',
		// There is no card on a customer that is being charged.
		MISSING: 'missing',
		// An error occurred while processing the card.
		PROCESSING_ERROR: 'processing_error'
	};

/***/ },
/* 74 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var LANDING_PAGE = exports.LANDING_PAGE = 'LandingPage';
	var CONTRIBUTION_PAGE = exports.CONTRIBUTION_PAGE = 'ContributionPage';
	var EMAIL_PAGE = exports.EMAIL_PAGE = 'EmailPage';
	var PAYMENT_PAGE = exports.PAYMENT_PAGE = 'PaymentPage';
	var CONFIRMATION_PAGE = exports.CONFIRMATION_PAGE = 'ConfirmationPage';
	var LOADING_PAGE = exports.LOADING_PAGE = 'LoadingPage';
	var THANKS_PAGE = exports.THANKS_PAGE = 'ThanksPage';
	var INFO_PAGE = exports.INFO_PAGE = 'InfoPage';
	var ERROR_PAGE = exports.ERROR_PAGE = 'ErrorPage';
	
	var pages = exports.pages = ['LandingPage', 'ContributionPage', 'EmailPage', 'PaymentPage', 'ConfirmationPage', 'LoadingPage', 'ThanksPage', 'InfoPage', 'ErrorPage'];

/***/ },
/* 75 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var BLANK = exports.BLANK = 'BLANK';
	var INCOMPLETE = exports.INCOMPLETE = 'INCOMPLETE';
	var VALID = exports.VALID = 'VALID';
	var INVALID = exports.INVALID = 'INVALID';
	var EXPIRED = exports.EXPIRED = 'EXPIRED';
	var INCORRECT = exports.INCORRECT = 'INCORRECT';
	var DECLINED = exports.DECLINED = 'DECLINED';

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _CreditCardExpirationDateInput = __webpack_require__(245);
	
	var _CreditCardExpirationDateInput2 = _interopRequireDefault(_CreditCardExpirationDateInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const DELETE_KEY_CODE = 46
	
	function setup(propOverrides) {
		var props = Object.assign({
			style: '',
			placeholder: 'hi',
			className: 'there',
			expirationDate: {
				status: inputStates.VALID,
				values: {
					month: '',
					year: ''
				},
				cursorPosition: 2
			},
			onChange: _expect2.default.createSpy(),
			onFocus: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_CreditCardExpirationDateInput2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('CreditCardExpirationDateInput', function () {
		it('should render an input field', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className).toBe('ExpirationDate ');
		});
	
		it('should render an input field with an error when the date is invalid', function () {
			var _setup2 = setup({
				expirationDate: {
					status: inputStates.INVALID,
					values: {
						month: '',
						year: ''
					},
					cursorPosition: 2
				}
			});
	
			var output = _setup2.output;
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		describe('Formatting an Expiration Date', function () {
			it('should return a blank string when given an undefined input', function () {
				var _setup3 = setup();
	
				var instance = _setup3.instance;
	
				(0, _expect2.default)(instance.format(undefined, undefined)).toBe('');
			});
	
			it('should return a blank string if only a year is provided', function () {
				var _setup4 = setup();
	
				var instance = _setup4.instance;
	
				(0, _expect2.default)(instance.format(undefined, '2016')).toBe('');
			});
	
			// it('should not allow a date in the past', function() {
			// 	const { instance } = setup()
			// 	expect( instance.formatExpirationDate('abcde') ).toBe('')
			// })
	
			it('should add a slash between the month and year', function () {
				var _setup5 = setup();
	
				var instance = _setup5.instance;
	
				(0, _expect2.default)(instance.format('12')).toBe('12/');
				(0, _expect2.default)(instance.format('12', '2016')).toBe('12/16');
			});
		});
	
		describe('Unformatting an Expiration Date', function () {
			it('should return a blank string when given an undefined input', function () {
				var _setup6 = setup();
	
				var instance = _setup6.instance;
	
				(0, _expect2.default)(instance.unformat(undefined, undefined)).toBe('');
			});
	
			it('should only accept numbers', function () {
				var _setup7 = setup();
	
				var instance = _setup7.instance;
	
				(0, _expect2.default)(instance.unformat('abcd')).toBe('');
			});
	
			// it('should not allow a month greater than 12', function() {
	
			// 	const { renderer } = setup()
			// 	let instance = renderer.getMountedInstance()
	
			// 	expect( instance.unformatExpirationDate( '13/' ) ).toBe( '12/' )
			// 	expect( instance.unformatExpirationDate( '43/' ) ).toBe( '12/' )
			// 	expect( instance.unformatExpirationDate( '13/16' ) ).toBe('12/16')
			// 	expect( instance.unformatExpirationDate( '43/16' ) ).toBe('12/16')
			// })
	
			it('should accept a maximum of 4 digits', function () {
				var _setup8 = setup();
	
				var instance = _setup8.instance;
	
				(0, _expect2.default)(instance.unformat('12345').replace(/\D/g, '').length).toBe(4); // Remove the added slash before counting
			});
	
			// it('should remove the slash we previously added', function() {
			// 	const { instance } = setup()
			// 	expect( instance.unformatExpirationDate( '12/20' ) ).toBe( '1220' )
			// })
	
			it('should remove the digit before the slash when the user deletes the slash character and there is no year', function () {
				var _setup9 = setup({
					expirationDate: {
						values: {
							month: '12',
							year: ''
						}
					}
				});
	
				var instance = _setup9.instance;
	
				// The function should know that if
				// 1) the input value matches the expirationDate prop
				// 2) they're both 2 digits
				// 3) the caret position is at the end of the string
				// the user deleted the slash and we should also delete the digit prior to it
	
				(0, _expect2.default)(instance.unformat('12', 2)).toBe('1/');
			});
	
			it('should remove the digit before the slash when the user deletes the slash character and there is a year', function () {
				var _setup10 = setup({
					expirationDate: {
						values: {
							month: '12',
							year: '2020'
						}
					}
				});
	
				var instance = _setup10.instance;
	
	
				(0, _expect2.default)(instance.unformat('1220', 2)).toBe('1/20');
			});
		});
	
		describe('Getting State', function () {
	
			// afterEach(function() {
			// 	delete Stripe
			// })
	
			it('should return BLANK when field is undefined', function () {
				var _setup11 = setup();
	
				var instance = _setup11.instance;
	
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.BLANK);
			});
	
			it('should return BLANK when the number is blank', function () {
				var _setup12 = setup();
	
				var instance = _setup12.instance;
	
				(0, _expect2.default)(instance.getState('')).toEqual(inputStates.BLANK);
			});
	
			it('should return INCOMPLETE when less than 4 digits', function () {
				var _setup13 = setup();
	
				var instance = _setup13.instance;
	
				(0, _expect2.default)(instance.getState('12/4')).toEqual(inputStates.INCOMPLETE);
				(0, _expect2.default)(instance.getState('1/4')).toEqual(inputStates.INCOMPLETE);
				(0, _expect2.default)(instance.getState('1/')).toEqual(inputStates.INCOMPLETE);
				(0, _expect2.default)(instance.getState('11/')).toEqual(inputStates.INCOMPLETE);
			});
	
			it('should return INVALID when Stripe does not approve', function () {
				var _setup14 = setup();
	
				var instance = _setup14.instance;
	
				global.Stripe = {
					card: {
						validateExpiry: function validateExpiry() {
							return false;
						}
					}
				};
				(0, _expect2.default)(instance.getState('14/40')).toEqual(inputStates.INVALID);
			});
	
			it('should return VALID when Stripe approves', function () {
				var _setup15 = setup();
	
				var instance = _setup15.instance;
	
				global.Stripe = {
					card: {
						validateExpiry: function validateExpiry() {
							return true;
						}
					}
				};
				(0, _expect2.default)(instance.getState('12/20')).toEqual(inputStates.VALID);
			});
		});
	});

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(78);

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var ReactChildren = __webpack_require__(80);
	var ReactComponent = __webpack_require__(91);
	var ReactClass = __webpack_require__(102);
	var ReactDOMFactories = __webpack_require__(107);
	var ReactElement = __webpack_require__(83);
	var ReactElementValidator = __webpack_require__(108);
	var ReactPropTypes = __webpack_require__(110);
	var ReactVersion = __webpack_require__(111);
	
	var onlyChild = __webpack_require__(112);
	var warning = __webpack_require__(85);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function __spread() {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function createMixin(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;

/***/ },
/* 79 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(81);
	var ReactElement = __webpack_require__(83);
	
	var emptyFunction = __webpack_require__(86);
	var traverseAllChildren = __webpack_require__(88);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function standardReleaser(instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _assign = __webpack_require__(79);
	
	var ReactCurrentOwner = __webpack_require__(84);
	
	var warning = __webpack_require__(85);
	var canDefineProperty = __webpack_require__(87);
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	      ref = !config.hasOwnProperty('ref') || Object.getOwnPropertyDescriptor(config, 'ref').get ? null : config.ref;
	      key = !config.hasOwnProperty('key') || Object.getOwnPropertyDescriptor(config, 'key').get ? null : '' + config.key;
	    } else {
	      ref = config.ref === undefined ? null : config.ref;
	      key = config.key === undefined ? null : '' + config.key;
	    }
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // Create dummy `key` and `ref` property to `props` to warn users
	    // against its use
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: function get() {
	            if (!specialPropKeyWarningShown) {
	              specialPropKeyWarningShown = true;
	              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
	            }
	            return undefined;
	          },
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: function get() {
	            if (!specialPropRefWarningShown) {
	              specialPropRefWarningShown = true;
	              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
	            }
	            return undefined;
	          },
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(86);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;

/***/ },
/* 86 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 87 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function get() {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactElement = __webpack_require__(83);
	
	var getIteratorFn = __webpack_require__(89);
	var invariant = __webpack_require__(82);
	var KeyEscapeUtils = __webpack_require__(90);
	var warning = __webpack_require__(85);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && (typeof component === 'undefined' ? 'undefined' : _typeof(component)) === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children === 'undefined' ? 'undefined' : _typeof(children);
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 90 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {*} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ReactNoopUpdateQueue = __webpack_require__(92);
	var ReactInstrumentation = __webpack_require__(93);
	
	var canDefineProperty = __webpack_require__(87);
	var emptyObject = __webpack_require__(101);
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !((typeof partialState === 'undefined' ? 'undefined' : _typeof(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : void 0;
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onSetState();
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(85);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */
	
	'use strict';
	
	var ReactDebugTool = __webpack_require__(94);
	
	module.exports = { debugTool: ReactDebugTool };

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var performanceNow = __webpack_require__(96);
	var warning = __webpack_require__(85);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerType = null;
	
	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactNativeOperationHistoryDevtool.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  if (process.env.NODE_ENV !== 'production') {
	    var previousStartTime = currentFlushStartTime;
	    var previousMeasurements = currentFlushMeasurements || [];
	    var previousOperations = ReactNativeOperationHistoryDevtool.getHistory();
	
	    if (!isProfiling || currentFlushNesting === 0) {
	      currentFlushStartTime = null;
	      currentFlushMeasurements = null;
	      clearHistory();
	      return;
	    }
	
	    if (previousMeasurements.length || previousOperations.length) {
	      var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	      flushHistory.push({
	        duration: performanceNow() - previousStartTime,
	        measurements: previousMeasurements || [],
	        operations: previousOperations || [],
	        treeSnapshot: getTreeSnapshot(registeredIDs)
	      });
	    }
	
	    clearHistory();
	    currentFlushStartTime = performanceNow();
	    currentFlushMeasurements = [];
	  }
	}
	
	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}
	
	var ReactDebugTool = {
	  addDevtool: function addDevtool(devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function removeDevtool(devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  beginProfiling: function beginProfiling() {
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling) {
	        return;
	      }
	
	      isProfiling = true;
	      flushHistory.length = 0;
	      resetMeasurements();
	    }
	  },
	  endProfiling: function endProfiling() {
	    if (process.env.NODE_ENV !== 'production') {
	      if (!isProfiling) {
	        return;
	      }
	
	      isProfiling = false;
	      resetMeasurements();
	    }
	  },
	  getFlushHistory: function getFlushHistory() {
	    if (process.env.NODE_ENV !== 'production') {
	      return flushHistory;
	    }
	  },
	  onBeginFlush: function onBeginFlush() {
	    if (process.env.NODE_ENV !== 'production') {
	      currentFlushNesting++;
	      resetMeasurements();
	    }
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function onEndFlush() {
	    if (process.env.NODE_ENV !== 'production') {
	      resetMeasurements();
	      currentFlushNesting--;
	    }
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling && currentFlushNesting > 0) {
	        process.env.NODE_ENV !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	        currentTimerStartTime = performanceNow();
	        currentTimerDebugID = debugID;
	        currentTimerType = timerType;
	      }
	    }
	  },
	  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    if (process.env.NODE_ENV !== 'production') {
	      if (isProfiling && currentFlushNesting > 0) {
	        process.env.NODE_ENV !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	        currentFlushMeasurements.push({
	          timerType: timerType,
	          instanceID: debugID,
	          duration: performanceNow() - currentTimerStartTime
	        });
	        currentTimerStartTime = null;
	        currentTimerDebugID = null;
	        currentTimerType = null;
	      }
	    }
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function onBeginReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function onEndReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onNativeOperation: function onNativeOperation(debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onNativeOperation', debugID, type, payload);
	  },
	  onSetState: function onSetState() {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function onSetDisplayName(debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function onSetOwner(debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetText: function onSetText(debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function onMountRootComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onMountComponent: function onMountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onUpdateComponent: function onUpdateComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function onUnmountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInvalidSetStateWarningDevTool = __webpack_require__(98);
	  var ReactNativeOperationHistoryDevtool = __webpack_require__(99);
	  var ReactComponentTreeDevtool = __webpack_require__(100);
	  ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	  ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	  ReactDebugTool.addDevtool(ReactNativeOperationHistoryDevtool);
	  var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	  if (/[?&]react_perf\b/.test(url)) {
	    ReactDebugTool.beginProfiling();
	  }
	}
	
	module.exports = ReactDebugTool;

/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(97);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */
	
	'use strict';
	
	var warning = __webpack_require__(85);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function warnInvalidSetState() {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    processingChildContext = false;
	  },
	  onSetState: function onSetState() {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningDevTool;

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeOperationHistoryDevtool
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactNativeOperationHistoryDevtool = {
	  onNativeOperation: function onNativeOperation(debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function clearHistory() {
	    if (ReactNativeOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function getHistory() {
	    return history;
	  }
	};
	
	module.exports = ReactNativeOperationHistoryDevtool;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	var tree = {};
	var rootIDs = [];
	
	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}
	
	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;
	
	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function onSetDisplayName(id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function onSetChildren(id, nextChildIDs) {
	    updateTree(id, function (item) {
	      var prevChildIDs = item.childIDs;
	      item.childIDs = nextChildIDs;
	
	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child ' + 'before its parent includes it in onSetChildren().') : invariant(false) : void 0;
	
	        if (prevChildIDs.indexOf(nextChildID) === -1) {
	          nextChild.parentID = id;
	        }
	      });
	    });
	  },
	  onSetOwner: function onSetOwner(id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetText: function onSetText(id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onMountComponent: function onMountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function onMountRootComponent(id) {
	    rootIDs.push(id);
	  },
	  onUpdateComponent: function onUpdateComponent(id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function onUnmountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    rootIDs = rootIDs.filter(function (rootID) {
	      return rootID !== id;
	    });
	  },
	  purgeUnmountedComponents: function purgeUnmountedComponents() {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    Object.keys(tree).filter(function (id) {
	      return !tree[id].isMounted;
	    }).forEach(purgeDeep);
	  },
	  isMounted: function isMounted(id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getChildIDs: function getChildIDs(id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function getDisplayName(id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getOwnerID: function getOwnerID(id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function getParentID(id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getText: function getText(id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function getUpdateCount(id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function getRootIDs() {
	    return rootIDs;
	  },
	  getRegisteredIDs: function getRegisteredIDs() {
	    return Object.keys(tree);
	  }
	};
	
	module.exports = ReactComponentTreeDevtool;

/***/ },
/* 101 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _assign = __webpack_require__(79);
	
	var ReactComponent = __webpack_require__(91);
	var ReactElement = __webpack_require__(83);
	var ReactPropTypeLocations = __webpack_require__(103);
	var ReactPropTypeLocationNames = __webpack_require__(105);
	var ReactNoopUpdateQueue = __webpack_require__(92);
	
	var emptyObject = __webpack_require__(101);
	var invariant = __webpack_require__(82);
	var keyMirror = __webpack_require__(104);
	var keyOf = __webpack_require__(106);
	var warning = __webpack_require__(85);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function displayName(Constructor, _displayName) {
	    Constructor.displayName = _displayName;
	  },
	  mixins: function mixins(Constructor, _mixins) {
	    if (_mixins) {
	      for (var i = 0; i < _mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, _mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
	  },
	  contextTypes: function contextTypes(Constructor, _contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = _getDefaultProps;
	    }
	  },
	  propTypes: function propTypes(Constructor, _propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, _propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
	  },
	  statics: function statics(Constructor, _statics) {
	    mixStaticSpecIntoComponent(Constructor, _statics);
	  },
	  autobind: function autobind() {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.') : invariant(false) : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && (typeof one === 'undefined' ? 'undefined' : _typeof(one)) === 'object' && (typeof two === 'undefined' ? 'undefined' : _typeof(two)) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function replaceState(newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted() {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function ReactClassComponent() {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function createClass(spec) {
	    var Constructor = function Constructor(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function injectMixin(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(104);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;

/***/ },
/* 105 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 106 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(83);
	var ReactElementValidator = __webpack_require__(108);
	
	var mapObject = __webpack_require__(109);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ReactElement = __webpack_require__(83);
	var ReactPropTypeLocations = __webpack_require__(103);
	var ReactPropTypeLocationNames = __webpack_require__(105);
	var ReactCurrentOwner = __webpack_require__(84);
	
	var canDefineProperty = __webpack_require__(87);
	var getIteratorFn = __webpack_require__(89);
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	var loggedTypeFailures = {};
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : void 0;
	}
	
	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	
	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;
	
	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  return addenda;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error === 'undefined' ? 'undefined' : _typeof(error)) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function createElement(type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function createFactory(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function get() {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function cloneElement(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;

/***/ },
/* 109 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ReactElement = __webpack_require__(83);
	var ReactPropTypeLocationNames = __webpack_require__(105);
	
	var emptyFunction = __webpack_require__(86);
	var getIteratorFn = __webpack_require__(89);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 111 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '15.1.0';

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(83);
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : void 0;
	  return children;
	}
	
	module.exports = onlyChild;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(114);

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTestUtils
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var EventConstants = __webpack_require__(115);
	var EventPluginHub = __webpack_require__(116);
	var EventPluginRegistry = __webpack_require__(117);
	var EventPropagators = __webpack_require__(122);
	var React = __webpack_require__(78);
	var ReactDefaultInjection = __webpack_require__(123);
	var ReactDOM = __webpack_require__(235);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactElement = __webpack_require__(83);
	var ReactBrowserEventEmitter = __webpack_require__(181);
	var ReactCompositeComponent = __webpack_require__(195);
	var ReactInstanceMap = __webpack_require__(196);
	var ReactUpdates = __webpack_require__(134);
	var SyntheticEvent = __webpack_require__(128);
	
	var emptyObject = __webpack_require__(101);
	var findDOMNode = __webpack_require__(241);
	var invariant = __webpack_require__(82);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function Event(suffix) {}
	
	/**
	 * @class ReactTestUtils
	 */
	
	function findAllInRenderedTreeInternal(inst, test) {
	  if (!inst || !inst.getPublicInstance) {
	    return [];
	  }
	  var publicInst = inst.getPublicInstance();
	  var ret = test(publicInst) ? [publicInst] : [];
	  var currentElement = inst._currentElement;
	  if (ReactTestUtils.isDOMComponent(publicInst)) {
	    var renderedChildren = inst._renderedChildren;
	    var key;
	    for (key in renderedChildren) {
	      if (!renderedChildren.hasOwnProperty(key)) {
	        continue;
	      }
	      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));
	    }
	  } else if (ReactElement.isValidElement(currentElement) && typeof currentElement.type === 'function') {
	    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));
	  }
	  return ret;
	}
	
	/**
	 * Utilities for making it easy to test React components.
	 *
	 * See https://facebook.github.io/react/docs/test-utils.html
	 *
	 * Todo: Support the entire DOM.scry query syntax. For now, these simple
	 * utilities will suffice for testing purposes.
	 * @lends ReactTestUtils
	 */
	var ReactTestUtils = {
	  renderIntoDocument: function renderIntoDocument(instance) {
	    var div = document.createElement('div');
	    // None of our tests actually require attaching the container to the
	    // DOM, and doing so creates a mess that we rely on test isolation to
	    // clean up, so we're going to stop honoring the name of this method
	    // (and probably rename it eventually) if no problems arise.
	    // document.documentElement.appendChild(div);
	    return ReactDOM.render(instance, div);
	  },
	
	  isElement: function isElement(element) {
	    return ReactElement.isValidElement(element);
	  },
	
	  isElementOfType: function isElementOfType(inst, convenienceConstructor) {
	    return ReactElement.isValidElement(inst) && inst.type === convenienceConstructor;
	  },
	
	  isDOMComponent: function isDOMComponent(inst) {
	    return !!(inst && inst.nodeType === 1 && inst.tagName);
	  },
	
	  isDOMComponentElement: function isDOMComponentElement(inst) {
	    return !!(inst && ReactElement.isValidElement(inst) && !!inst.tagName);
	  },
	
	  isCompositeComponent: function isCompositeComponent(inst) {
	    if (ReactTestUtils.isDOMComponent(inst)) {
	      // Accessing inst.setState warns; just return false as that'll be what
	      // this returns when we have DOM nodes as refs directly
	      return false;
	    }
	    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';
	  },
	
	  isCompositeComponentWithType: function isCompositeComponentWithType(inst, type) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return false;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return constructor === type;
	  },
	
	  isCompositeComponentElement: function isCompositeComponentElement(inst) {
	    if (!ReactElement.isValidElement(inst)) {
	      return false;
	    }
	    // We check the prototype of the type that will get mounted, not the
	    // instance itself. This is a future proof way of duck typing.
	    var prototype = inst.type.prototype;
	    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';
	  },
	
	  isCompositeComponentElementWithType: function isCompositeComponentElementWithType(inst, type) {
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);
	  },
	
	  getRenderedChildOfCompositeComponent: function getRenderedChildOfCompositeComponent(inst) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return null;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    return internalInstance._renderedComponent.getPublicInstance();
	  },
	
	  findAllInRenderedTree: function findAllInRenderedTree(inst, test) {
	    if (!inst) {
	      return [];
	    }
	    !ReactTestUtils.isCompositeComponent(inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : invariant(false) : void 0;
	    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the class name matching `className`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithClass: function scryRenderedDOMComponentsWithClass(root, classNames) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      if (ReactTestUtils.isDOMComponent(inst)) {
	        var className = inst.className;
	        if (typeof className !== 'string') {
	          // SVG, probably.
	          className = inst.getAttribute('class') || '';
	        }
	        var classList = className.split(/\s+/);
	
	        if (!Array.isArray(classNames)) {
	          !(classNames !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'TestUtils.scryRenderedDOMComponentsWithClass expects a ' + 'className as a second argument.') : invariant(false) : void 0;
	          classNames = classNames.split(/\s+/);
	        }
	        return classNames.every(function (name) {
	          return classList.indexOf(name) !== -1;
	        });
	      }
	      return false;
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithClass: function findRenderedDOMComponentWithClass(root, className) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for class:' + className);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the tag name matching `tagName`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithTag: function scryRenderedDOMComponentsWithTag(root, tagName) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithTag: function findRenderedDOMComponentWithTag(root, tagName) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for tag:' + tagName);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instances of components with type equal to `componentType`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedComponentsWithType: function scryRenderedComponentsWithType(root, componentType) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
	    });
	  },
	
	  /**
	   * Same as `scryRenderedComponentsWithType` but expects there to be one result
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactComponent} The one match.
	   */
	  findRenderedComponentWithType: function findRenderedComponentWithType(root, componentType) {
	    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for componentType:' + componentType);
	    }
	    return all[0];
	  },
	
	  /**
	   * Pass a mocked component module to this method to augment it with
	   * useful methods that allow it to be used as a dummy React component.
	   * Instead of rendering as usual, the component will become a simple
	   * <div> containing any provided children.
	   *
	   * @param {object} module the mock function object exported from a
	   *                        module that defines the component to be mocked
	   * @param {?string} mockTagName optional dummy root tag name to return
	   *                              from render method (overrides
	   *                              module.mockTagName if provided)
	   * @return {object} the ReactTestUtils object (for chaining)
	   */
	  mockComponent: function mockComponent(module, mockTagName) {
	    mockTagName = mockTagName || module.mockTagName || 'div';
	
	    module.prototype.render.mockImplementation(function () {
	      return React.createElement(mockTagName, null, this.props.children);
	    });
	
	    return this;
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on an `Element` node.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
	   * @param {!Element} node The dom to simulate an event occurring on.
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnNode: function simulateNativeEventOnNode(topLevelType, node, fakeNativeEvent) {
	    fakeNativeEvent.target = node;
	    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on the `ReactDOMComponent` `comp`.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
	   * @param {!ReactDOMComponent} comp
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnDOMComponent: function simulateNativeEventOnDOMComponent(topLevelType, comp, fakeNativeEvent) {
	    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);
	  },
	
	  nativeTouchData: function nativeTouchData(x, y) {
	    return {
	      touches: [{ pageX: x, pageY: y }]
	    };
	  },
	
	  createRenderer: function createRenderer() {
	    return new ReactShallowRenderer();
	  },
	
	  Simulate: null,
	  SimulateNative: {}
	};
	
	/**
	 * @class ReactShallowRenderer
	 */
	var ReactShallowRenderer = function ReactShallowRenderer() {
	  this._instance = null;
	};
	
	ReactShallowRenderer.prototype.getMountedInstance = function () {
	  return this._instance ? this._instance._instance : null;
	};
	
	var nextDebugID = 1;
	
	var NoopInternalComponent = function NoopInternalComponent(element) {
	  this._renderedOutput = element;
	  this._currentElement = element;
	  this._debugID = nextDebugID++;
	};
	
	NoopInternalComponent.prototype = {
	
	  mountComponent: function mountComponent() {},
	
	  receiveComponent: function receiveComponent(element) {
	    this._renderedOutput = element;
	    this._currentElement = element;
	  },
	
	  getNativeNode: function getNativeNode() {
	    return undefined;
	  },
	
	  unmountComponent: function unmountComponent() {},
	
	  getPublicInstance: function getPublicInstance() {
	    return null;
	  }
	};
	
	var ShallowComponentWrapper = function ShallowComponentWrapper(element) {
	  this._debugID = nextDebugID++;
	  this.construct(element);
	};
	_assign(ShallowComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _constructComponent: ReactCompositeComponent.Mixin._constructComponentWithoutOwner,
	  _instantiateReactComponent: function _instantiateReactComponent(element) {
	    return new NoopInternalComponent(element);
	  },
	  _replaceNodeWithMarkup: function _replaceNodeWithMarkup() {},
	  _renderValidatedComponent: ReactCompositeComponent.Mixin._renderValidatedComponentWithoutOwnerOrContext
	});
	
	ReactShallowRenderer.prototype.render = function (element, context) {
	  // Ensure we've done the default injections. This might not be true in the
	  // case of a simple test that only requires React and the TestUtils in
	  // conjunction with an inline-requires transform.
	  ReactDefaultInjection.inject();
	
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : invariant(false) : void 0;
	  !(typeof element.type !== 'string') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom ' + 'components, not primitives (%s). Instead of calling `.render(el)` and ' + 'inspecting the rendered output, look at `el.props` directly instead.', element.type) : invariant(false) : void 0;
	
	  if (!context) {
	    context = emptyObject;
	  }
	  ReactUpdates.batchedUpdates(_batchedRender, this, element, context);
	
	  return this.getRenderOutput();
	};
	
	function _batchedRender(renderer, element, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
	  renderer._render(element, transaction, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	ReactShallowRenderer.prototype.getRenderOutput = function () {
	  return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
	};
	
	ReactShallowRenderer.prototype.unmount = function () {
	  if (this._instance) {
	    this._instance.unmountComponent(false);
	  }
	};
	
	ReactShallowRenderer.prototype._render = function (element, transaction, context) {
	  if (this._instance) {
	    this._instance.receiveComponent(element, transaction, context);
	  } else {
	    var instance = new ShallowComponentWrapper(element);
	    instance.mountComponent(transaction, null, null, context);
	    this._instance = instance;
	  }
	};
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
	 * - ... (All keys from event plugin `eventTypes` objects)
	 */
	function makeSimulator(eventType) {
	  return function (domComponentOrNode, eventData) {
	    var node;
	    !!React.isValidElement(domComponentOrNode) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'TestUtils.Simulate expects a component instance and not a ReactElement.' + 'TestUtils.Simulate will not work if you are using shallow rendering.') : invariant(false) : void 0;
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      node = findDOMNode(domComponentOrNode);
	    } else if (domComponentOrNode.tagName) {
	      node = domComponentOrNode;
	    }
	
	    var dispatchConfig = EventPluginRegistry.eventNameDispatchConfigs[eventType];
	
	    var fakeNativeEvent = new Event();
	    fakeNativeEvent.target = node;
	    // We don't use SyntheticEvent.getPooled in order to not have to worry about
	    // properly destroying any properties assigned from `eventData` upon release
	    var event = new SyntheticEvent(dispatchConfig, ReactDOMComponentTree.getInstanceFromNode(node), fakeNativeEvent, node);
	    // Since we aren't using pooling, always persist the event. This will make
	    // sure it's marked and won't warn when setting additional properties.
	    event.persist();
	    _assign(event, eventData);
	
	    if (dispatchConfig.phasedRegistrationNames) {
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	    } else {
	      EventPropagators.accumulateDirectDispatches(event);
	    }
	
	    ReactUpdates.batchedUpdates(function () {
	      EventPluginHub.enqueueEvents(event);
	      EventPluginHub.processEventQueue(true);
	    });
	  };
	}
	
	function buildSimulators() {
	  ReactTestUtils.Simulate = {};
	
	  var eventType;
	  for (eventType in EventPluginRegistry.eventNameDispatchConfigs) {
	    /**
	     * @param {!Element|ReactDOMComponent} domComponentOrNode
	     * @param {?object} eventData Fake event data to use in SyntheticEvent.
	     */
	    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
	  }
	}
	
	// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
	var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
	EventPluginHub.injection.injectEventPluginOrder = function () {
	  oldInjectEventPluginOrder.apply(this, arguments);
	  buildSimulators();
	};
	var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
	EventPluginHub.injection.injectEventPluginsByName = function () {
	  oldInjectEventPlugins.apply(this, arguments);
	  buildSimulators();
	};
	
	buildSimulators();
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
	 * - ... (All keys from `EventConstants.topLevelTypes`)
	 *
	 * Note: Top level event types are a subset of the entire set of handler types
	 * (which include a broader set of "synthetic" events). For example, onDragDone
	 * is a synthetic event. Except when testing an event plugin or React's event
	 * handling code specifically, you probably want to use ReactTestUtils.Simulate
	 * to dispatch synthetic events.
	 */
	
	function makeNativeSimulator(eventType) {
	  return function (domComponentOrNode, nativeEventData) {
	    var fakeNativeEvent = new Event(eventType);
	    _assign(fakeNativeEvent, nativeEventData);
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);
	    } else if (domComponentOrNode.tagName) {
	      // Will allow on actual dom nodes.
	      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);
	    }
	  };
	}
	
	Object.keys(topLevelTypes).forEach(function (eventType) {
	  // Event type is stored as 'topClick' - we transform that to 'click'
	  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
	  /**
	   * @param {!Element|ReactDOMComponent} domComponentOrNode
	   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
	   */
	  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);
	});
	
	module.exports = ReactTestUtils;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(104);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var EventPluginRegistry = __webpack_require__(117);
	var EventPluginUtils = __webpack_require__(118);
	var ReactErrorUtils = __webpack_require__(119);
	
	var accumulateInto = __webpack_require__(120);
	var forEachAccumulated = __webpack_require__(121);
	var invariant = __webpack_require__(82);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function putListener(inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) : invariant(false) : void 0;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function getListener(inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function deleteListener(inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function deleteAllListeners(inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function enqueueEvents(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function processEventQueue(simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function __purge() {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function __getListenerBank() {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function injectEventPluginOrder(InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function _resetEventPlugins() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var ReactErrorUtils = __webpack_require__(119);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function injectComponentTree(Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function injectTreeTraversal(Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function validateEventDispatches(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function getInstanceFromNode(node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function getNodeFromInstance(node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function isAncestor(a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function getParentInstance(inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function rethrowCaughtError() {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : void 0;
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	var forEachAccumulated = function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var EventPluginHub = __webpack_require__(116);
	var EventPluginUtils = __webpack_require__(118);
	
	var accumulateInto = __webpack_require__(120);
	var forEachAccumulated = __webpack_require__(121);
	var warning = __webpack_require__(85);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(124);
	var ChangeEventPlugin = __webpack_require__(130);
	var DefaultEventPluginOrder = __webpack_require__(144);
	var EnterLeaveEventPlugin = __webpack_require__(145);
	var HTMLDOMPropertyConfig = __webpack_require__(150);
	var ReactComponentBrowserEnvironment = __webpack_require__(151);
	var ReactDOMComponent = __webpack_require__(165);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDOMEmptyComponent = __webpack_require__(206);
	var ReactDOMTreeTraversal = __webpack_require__(207);
	var ReactDOMTextComponent = __webpack_require__(208);
	var ReactDefaultBatchingStrategy = __webpack_require__(209);
	var ReactEventListener = __webpack_require__(210);
	var ReactInjection = __webpack_require__(213);
	var ReactReconcileTransaction = __webpack_require__(214);
	var SVGDOMPropertyConfig = __webpack_require__(222);
	var SelectEventPlugin = __webpack_require__(223);
	var SimpleEventPlugin = __webpack_require__(224);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var EventConstants = __webpack_require__(115);
	var EventPropagators = __webpack_require__(122);
	var ExecutionEnvironment = __webpack_require__(95);
	var FallbackCompositionState = __webpack_require__(125);
	var SyntheticCompositionEvent = __webpack_require__(127);
	var SyntheticInputEvent = __webpack_require__(129);
	
	var keyOf = __webpack_require__(106);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (typeof opera === 'undefined' ? 'undefined' : _typeof(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if ((typeof detail === 'undefined' ? 'undefined' : _typeof(detail)) === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var PooledClass = __webpack_require__(81);
	
	var getTextContentAccessor = __webpack_require__(126);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function destructor() {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function getText() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function getData() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var PooledClass = __webpack_require__(81);
	
	var emptyFunction = __webpack_require__(86);
	var warning = __webpack_require__(85);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function preventDefault() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function stopPropagation() {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function persist() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function destructor() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      var noop = __webpack_require__(86);
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function construct(target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function apply(constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function set(target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function E() {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var EventPluginHub = __webpack_require__(116);
	var EventPropagators = __webpack_require__(122);
	var ExecutionEnvironment = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(134);
	var SyntheticEvent = __webpack_require__(128);
	
	var getEventTarget = __webpack_require__(141);
	var isEventSupported = __webpack_require__(142);
	var isTextInputElement = __webpack_require__(143);
	var keyOf = __webpack_require__(106);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function get() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function set(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(132);
	var ReactDOMComponentFlags = __webpack_require__(133);
	
	var invariant = __webpack_require__(82);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a native or
	 * native text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedNativeOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_nativeNode` on the rendered native/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var nativeInst = getRenderedNativeOrTextFromComponent(inst);
	  nativeInst._nativeNode = node;
	  node[internalInstanceKey] = nativeInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._nativeNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._nativeNode = null;
	  }
	}
	
	/**
	 * Populate `_nativeNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedNativeOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : invariant(false) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._nativeNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._nativeNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
	
	  if (inst._nativeNode) {
	    return inst._nativeNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._nativeNode) {
	    parents.push(inst);
	    !inst._nativeParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : invariant(false) : void 0;
	    inst = inst._nativeParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._nativeNode);
	  }
	
	  return inst._nativeNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_SIDE_EFFECTS: 0x2,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : void 0;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function isCustomAttribute(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ },
/* 133 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var CallbackQueue = __webpack_require__(135);
	var PooledClass = __webpack_require__(81);
	var ReactFeatureFlags = __webpack_require__(136);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactReconciler = __webpack_require__(137);
	var Transaction = __webpack_require__(140);
	
	var invariant = __webpack_require__(82);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function initialize() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function close() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function initialize() {
	    this.callbackQueue.reset();
	  },
	  close: function close() {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function destructor() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function perform(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function flushBatchedUpdates() {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var PooledClass = __webpack_require__(81);
	
	var invariant = __webpack_require__(82);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function rollback(len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function destructor() {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(138);
	var ReactInstrumentation = __webpack_require__(93);
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing native component instance
	   * @param {?object} info about the native container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(internalInstance, transaction, nativeParent, nativeContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, nativeParent, nativeContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getNativeNode: function getNativeNode(internalInstance) {
	    return internalInstance.getNativeNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : invariant(false) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(139);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function isValidOwner(object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function reinitializeTransaction() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function isInTransaction() {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function perform(method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function initializeAll(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function closeAll(startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;

/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(106);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var EventPropagators = __webpack_require__(122);
	var ReactDOMComponentTree = __webpack_require__(131);
	var SyntheticMouseEvent = __webpack_require__(146);
	
	var keyOf = __webpack_require__(106);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(147);
	var ViewportMetrics = __webpack_require__(148);
	
	var getEventModifierState = __webpack_require__(149);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function button(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function relatedTarget(event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function pageX(event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function pageY(event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	var getEventTarget = __webpack_require__(141);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function view(event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function detail(event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 148 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function refreshScrollValues(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 149 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(132);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(152);
	var ReactDOMIDOperations = __webpack_require__(164);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function unmountIDFromEnvironment(rootNodeID) {}
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(153);
	var Danger = __webpack_require__(159);
	var ReactMultiChildUpdateTypes = __webpack_require__(163);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(93);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
	var setInnerHTML = __webpack_require__(158);
	var setTextContent = __webpack_require__(156);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getNativeNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function dangerouslyReplaceNodeWithMarkup(oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onNativeOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onNativeOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function processUpdates(parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onNativeOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(154);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
	var setTextContent = __webpack_require__(156);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    node.innerHTML = tree.html;
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    tree.node.innerHTML = html;
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 154 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 155 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	var escapeTextContentForBrowser = __webpack_require__(157);
	var setInnerHTML = __webpack_require__(158);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function setTextContent(node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function setTextContent(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(155);
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  node.innerHTML = html;
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function setInnerHTML(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(153);
	var ExecutionEnvironment = __webpack_require__(95);
	
	var createNodesFromMarkup = __webpack_require__(160);
	var emptyFunction = __webpack_require__(86);
	var getMarkupWrap = __webpack_require__(162);
	var invariant = __webpack_require__(82);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function dangerouslyRenderMarkup(markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : void 0;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : void 0;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : void 0;
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : void 0;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : void 0;
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var createArrayFromMixed = __webpack_require__(161);
	var getMarkupWrap = __webpack_require__(162);
	var invariant = __webpack_require__(82);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(104);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(152);
	var ReactDOMComponentTree = __webpack_require__(131);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _assign = __webpack_require__(79);
	
	var AutoFocusUtils = __webpack_require__(166);
	var CSSPropertyOperations = __webpack_require__(168);
	var DOMLazyTree = __webpack_require__(153);
	var DOMNamespaces = __webpack_require__(154);
	var DOMProperty = __webpack_require__(132);
	var DOMPropertyOperations = __webpack_require__(176);
	var EventConstants = __webpack_require__(115);
	var EventPluginHub = __webpack_require__(116);
	var EventPluginRegistry = __webpack_require__(117);
	var ReactBrowserEventEmitter = __webpack_require__(181);
	var ReactComponentBrowserEnvironment = __webpack_require__(151);
	var ReactDOMButton = __webpack_require__(184);
	var ReactDOMComponentFlags = __webpack_require__(133);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDOMInput = __webpack_require__(186);
	var ReactDOMOption = __webpack_require__(188);
	var ReactDOMSelect = __webpack_require__(189);
	var ReactDOMTextarea = __webpack_require__(190);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactMultiChild = __webpack_require__(191);
	var ReactServerRenderingTransaction = __webpack_require__(203);
	
	var emptyFunction = __webpack_require__(86);
	var escapeTextContentForBrowser = __webpack_require__(157);
	var invariant = __webpack_require__(82);
	var isEventSupported = __webpack_require__(142);
	var keyOf = __webpack_require__(106);
	var shallowEqual = __webpack_require__(204);
	var validateDOMNesting = __webpack_require__(205);
	var warning = __webpack_require__(85);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : invariant(false) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : void 0;
	    !(_typeof(props.dangerouslySetInnerHTML) === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || _typeof(props.style) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._nativeContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function setContentChildForInstrumentation(contentToUse) {
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';
	    this._contentDebugID = contentDebugID;
	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, '' + contentToUse);
	    ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	    ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._nativeNode = null;
	  this._nativeParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._nativeContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    this._contentDebugID = null;
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the native container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = nativeContainerInfo._idCounter++;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'iframe':
	      case 'object':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, nativeParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, nativeParent);
	        props = ReactDOMInput.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, nativeParent);
	        props = ReactDOMOption.getNativeProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, nativeParent);
	        props = ReactDOMSelect.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, nativeParent);
	        props = ReactDOMTextarea.getNativeProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (nativeParent != null) {
	      namespaceURI = nativeParent._namespaceURI;
	      parentTag = nativeParent._tag;
	    } else if (nativeContainerInfo._tag) {
	      namespaceURI = nativeContainerInfo._namespaceURI;
	      parentTag = nativeContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (nativeParent != null) {
	        parentInfo = nativeParent._ancestorInfo;
	      } else if (nativeContainerInfo._tag) {
	        parentInfo = nativeContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else {
	          el = ownerDocument.createElement(this._currentElement.type, props.is || null);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._nativeParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'button':
	      case 'input':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._nativeParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function _createContentMarkup(transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function _createInitialChildren(transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[_typeof(props.children)] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function receiveComponent(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function _updateDOMProperties(lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function _updateDOMChildren(lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[_typeof(lastProps.children)] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[_typeof(nextProps.children)] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          this._contentDebugID = this._debugID + '#text';
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._contentDebugID) {
	          ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	          this._contentDebugID = null;
	        }
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getNativeNode: function getNativeNode() {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    switch (this._tag) {
	      case 'iframe':
	      case 'object':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._contentDebugID) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	        this._contentDebugID = null;
	      }
	    }
	  },
	
	  getPublicInstance: function getPublicInstance() {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(131);
	
	var focusNode = __webpack_require__(167);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function focusDOMComponent() {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(169);
	var ExecutionEnvironment = __webpack_require__(95);
	var ReactInstrumentation = __webpack_require__(93);
	
	var camelizeStyleName = __webpack_require__(170);
	var dangerousStyleValue = __webpack_require__(172);
	var hyphenateStyleName = __webpack_require__(173);
	var memoizeStringOnly = __webpack_require__(175);
	var warning = __webpack_require__(85);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function setValueForStyles(node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onNativeOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;

/***/ },
/* 169 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(171);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 171 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(169);
	var warning = __webpack_require__(85);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      if (component) {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(174);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 174 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(132);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDOMInstrumentation = __webpack_require__(177);
	var ReactInstrumentation = __webpack_require__(93);
	
	var quoteAttributeValueForBrowser = __webpack_require__(180);
	var warning = __webpack_require__(85);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function createMarkupForID(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function setAttributeForID(node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function createMarkupForRoot() {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function setAttributeForRoot(node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function createMarkupForProperty(name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function createMarkupForCustomAttribute(name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function setValueForProperty(node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function setValueForAttribute(node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function deleteValueForProperty(node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          // No HAS_SIDE_EFFECTS logic here, only `value` has it and is string.
	          node[propName] = false;
	        } else {
	          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '') {
	            node[propName] = '';
	          }
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onNativeOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */
	
	'use strict';
	
	var ReactDOMDebugTool = __webpack_require__(178);
	
	module.exports = { debugTool: ReactDOMDebugTool };

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMDebugTool
	 */
	
	'use strict';
	
	var ReactDOMUnknownPropertyDevtool = __webpack_require__(179);
	
	var warning = __webpack_require__(85);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  if (process.env.NODE_ENV !== 'production') {
	    eventHandlers.forEach(function (handler) {
	      try {
	        if (handler[handlerFunctionName]) {
	          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	        }
	      } catch (e) {
	        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
	        handlerDoesThrowForEvent[handlerFunctionName] = true;
	      }
	    });
	  }
	}
	
	var ReactDOMDebugTool = {
	  addDevtool: function addDevtool(devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function removeDevtool(devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function onCreateMarkupForProperty(name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function onSetValueForProperty(node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function onDeleteValueForProperty(node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  }
	};
	
	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
	
	module.exports = ReactDOMDebugTool;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyDevtool
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(132);
	var EventPluginRegistry = __webpack_require__(117);
	
	var warning = __webpack_require__(85);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function warnUnknownProperty(name) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : void 0;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?', name, registrationName) : void 0;
	  };
	}
	
	var ReactDOMUnknownPropertyDevtool = {
	  onCreateMarkupForProperty: function onCreateMarkupForProperty(name, value) {
	    warnUnknownProperty(name);
	  },
	  onSetValueForProperty: function onSetValueForProperty(node, name, value) {
	    warnUnknownProperty(name);
	  },
	  onDeleteValueForProperty: function onDeleteValueForProperty(node, name) {
	    warnUnknownProperty(name);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyDevtool;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(157);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var EventConstants = __webpack_require__(115);
	var EventPluginRegistry = __webpack_require__(117);
	var ReactEventEmitterMixin = __webpack_require__(182);
	var ViewportMetrics = __webpack_require__(148);
	
	var getVendorPrefixedEventName = __webpack_require__(183);
	var isEventSupported = __webpack_require__(142);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function injectReactEventListener(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function setEnabled(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function isEnabled() {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function listenTo(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(116);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(185);
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: DisabledInputUtils.getNativeProps
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 185 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getNativeProps: function getNativeProps(inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        nativeProps[key] = props[key];
	      }
	    }
	
	    return nativeProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var DisabledInputUtils = __webpack_require__(185);
	var DOMPropertyOperations = __webpack_require__(176);
	var LinkedValueUtils = __webpack_require__(187);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(134);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `input` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function getNativeProps(inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var nativeProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined
	    }, DisabledInputUtils.getNativeProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	      warnIfValueIsNull(props);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = props.checked !== undefined || props.value !== undefined;
	    }
	  },
	
	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	
	      var initialValue = inst._wrapperState.initialChecked || inst._wrapperState.initialValue;
	      var defaultValue = props.defaultChecked || props.defaultValue;
	      var controlled = props.checked !== undefined || props.value !== undefined;
	      var owner = inst._currentElement._owner;
	
	      if ((initialValue || !inst._wrapperState.controlled) && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && (defaultValue || !controlled) && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(110);
	var ReactPropTypeLocations = __webpack_require__(103);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : void 0;
	}
	
	var propTypes = {
	  value: function value(props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function checked(props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function checkPropTypes(tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function getValue(inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function getChecked(inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function executeOnChange(inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var ReactChildren = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDOMSelect = __webpack_require__(189);
	
	var warning = __webpack_require__(85);
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function mountWrapper(inst, props, nativeParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (nativeParent != null) {
	      var selectParent = nativeParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._nativeParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function postMountWrapper(inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getNativeProps: function getNativeProps(inst, props) {
	    var nativeProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = '';
	
	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	      }
	    });
	
	    if (content) {
	      nativeProps.children = content;
	    }
	
	    return nativeProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var DisabledInputUtils = __webpack_require__(185);
	var LinkedValueUtils = __webpack_require__(187);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(134);
	
	var warning = __webpack_require__(85);
	
	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `select` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getNativeProps: function getNativeProps(inst, props) {
	    return _assign({}, DisabledInputUtils.getNativeProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	      warnIfValueIsNull(props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function getSelectValueContext(inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function postUpdateWrapper(inst) {
	    var props = inst._currentElement.props;
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var DisabledInputUtils = __webpack_require__(185);
	var DOMPropertyOperations = __webpack_require__(176);
	var LinkedValueUtils = __webpack_require__(187);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(134);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	var didWarnValueLink = false;
	var didWarnValueNull = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	function warnIfValueIsNull(props) {
	  if (props != null && props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `textarea` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function getNativeProps(inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = _assign({}, DisabledInputUtils.getNativeProps(inst, props), {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function mountWrapper(inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	      warnIfValueIsNull(props);
	    }
	
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : void 0;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : void 0;
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function updateWrapper(inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      warnIfValueIsNull(props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(192);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactMultiChildUpdateTypes = __webpack_require__(163);
	
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactReconciler = __webpack_require__(137);
	var ReactChildReconciler = __webpack_require__(193);
	
	var emptyFunction = __webpack_require__(86);
	var flattenChildren = __webpack_require__(202);
	var invariant = __webpack_require__(82);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getNativeNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
	    ReactInstrumentation.debugTool.onSetChildren(this._debugID, children ? Object.keys(children).map(function (key) {
	      return children[key]._debugID;
	    }) : []);
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function mountChildren(nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function updateTextContent(nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function updateMarkup(nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getNativeNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function unmountChildren(safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function createChild(child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function removeChild(child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function _mountChildAtIndex(child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function _unmountChild(child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function injectEnvironment(environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(137);
	
	var instantiateReactComponent = __webpack_require__(194);
	var KeyEscapeUtils = __webpack_require__(90);
	var shouldUpdateReactComponent = __webpack_require__(199);
	var traverseAllChildren = __webpack_require__(88);
	var warning = __webpack_require__(85);
	
	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', KeyEscapeUtils.unescape(name)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function updateChildren(prevChildren, nextChildren, removedNodes, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function unmountChildren(renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _assign = __webpack_require__(79);
	
	var ReactCompositeComponent = __webpack_require__(195);
	var ReactEmptyComponent = __webpack_require__(200);
	var ReactNativeComponent = __webpack_require__(201);
	var ReactInstrumentation = __webpack_require__(93);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;
	
	  var isEmpty = node === null || node === false;
	  if (isEmpty) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : _typeof(element.type), getDeclarationErrorAddendum(element._owner)) : invariant(false) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node === 'undefined' ? 'undefined' : _typeof(node)) : invariant(false) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getNativeNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    var debugID = isEmpty ? 0 : nextDebugID++;
	    instance._debugID = debugID;
	
	    if (debugID !== 0) {
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    }
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _assign = __webpack_require__(79);
	
	var ReactComponentEnvironment = __webpack_require__(192);
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactElement = __webpack_require__(83);
	var ReactErrorUtils = __webpack_require__(119);
	var ReactInstanceMap = __webpack_require__(196);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactNodeTypes = __webpack_require__(197);
	var ReactPropTypeLocations = __webpack_require__(103);
	var ReactPropTypeLocationNames = __webpack_require__(105);
	var ReactReconciler = __webpack_require__(137);
	var ReactUpdateQueue = __webpack_require__(198);
	
	var emptyObject = __webpack_require__(101);
	var invariant = __webpack_require__(82);
	var shouldUpdateReactComponent = __webpack_require__(199);
	var warning = __webpack_require__(85);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function construct(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._nativeParent = null;
	    this._nativeContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} nativeParent
	   * @param {?object} nativeContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    // Initialize the public class
	    var inst = this._constructComponent(publicProps, publicContext);
	    var renderedElement;
	
	    // Support functional components
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : invariant(false) : void 0;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !((typeof initialState === 'undefined' ? 'undefined' : _typeof(initialState)) === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function _constructComponent(publicProps, publicContext) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext);
	    }
	  },
	
	  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(publicProps, publicContext) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, ReactUpdateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedNodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);
	
	    var markup = ReactReconciler.mountComponent(this._renderedComponent, transaction, nativeParent, nativeContainerInfo, this._processChildContext(context));
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, this._renderedComponent._debugID !== 0 ? [this._renderedComponent._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getNativeNode: function getNativeNode() {
	    return ReactReconciler.getNativeNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function unmountComponent(safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function _maskContext(context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function _processContext(context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function _processChildContext(currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(_typeof(Component.childContextTypes) === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function _processProps(newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function _checkPropTypes(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : void 0;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : void 0;
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    var willReceive = false;
	    var nextContext;
	    var nextProps;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function _processPendingState(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldNativeNode = ReactReconciler.getNativeNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      this._renderedNodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, transaction, this._nativeParent, this._nativeContainerInfo, this._processChildContext(context));
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, this._renderedComponent._debugID !== 0 ? [this._renderedComponent._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldNativeNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldNativeNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldNativeNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
	    var inst = this._instance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function _renderValidatedComponent() {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
	
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function attachRef(ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function detachRef(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function getName() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function getPublicInstance() {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ },
/* 196 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function remove(key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function get(key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function has(key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function set(key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(83);
	
	var invariant = __webpack_require__(82);
	
	var ReactNodeTypes = {
	  NATIVE: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function getType(node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.NATIVE;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : invariant(false) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactInstanceMap = __webpack_require__(196);
	var ReactUpdates = __webpack_require__(134);
	
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function isMounted(publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function enqueueElementInternal(internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function validateCallback(callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : invariant(false) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ },
/* 199 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement === 'undefined' ? 'undefined' : _typeof(prevElement);
	  var nextType = typeof nextElement === 'undefined' ? 'undefined' : _typeof(nextElement);
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 200 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function create(instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var invariant = __webpack_require__(82);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function injectTextComponentClass(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function injectComponentClasses(componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(90);
	var traverseAllChildren = __webpack_require__(88);
	var warning = __webpack_require__(85);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', KeyEscapeUtils.unescape(name)) : void 0;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var PooledClass = __webpack_require__(81);
	var Transaction = __webpack_require__(140);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	var noopCallbackQueue = {
	  enqueue: function enqueue() {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {},
	
	  checkpoint: function checkpoint() {},
	
	  rollback: function rollback() {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 204 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var emptyFunction = __webpack_require__(86);
	var warning = __webpack_require__(85);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function findOwnerStack(instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function validateDOMNesting(childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var DOMLazyTree = __webpack_require__(153);
	var ReactDOMComponentTree = __webpack_require__(131);
	
	var ReactDOMEmptyComponent = function ReactDOMEmptyComponent(instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._nativeNode = null;
	  this._nativeParent = null;
	  this._nativeContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {
	    var domID = nativeContainerInfo._idCounter++;
	    this._domID = domID;
	    this._nativeParent = nativeParent;
	    this._nativeContainerInfo = nativeContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function receiveComponent() {},
	  getNativeNode: function getNativeNode() {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function unmountComponent() {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(82);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
	  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._nativeParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._nativeParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._nativeParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._nativeParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._nativeParent;
	    instB = instB._nativeParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;
	  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._nativeParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_nativeNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : invariant(false) : void 0;
	
	  return inst._nativeParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._nativeParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._nativeParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._nativeParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var DOMChildrenOperations = __webpack_require__(152);
	var DOMLazyTree = __webpack_require__(153);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactInstrumentation = __webpack_require__(93);
	
	var escapeTextContentForBrowser = __webpack_require__(157);
	var invariant = __webpack_require__(82);
	var validateDOMNesting = __webpack_require__(205);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function ReactDOMTextComponent(text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._nativeNode = null;
	  this._nativeParent = null;
	
	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);
	
	      var parentInfo;
	      if (nativeParent != null) {
	        parentInfo = nativeParent._ancestorInfo;
	      } else if (nativeContainerInfo != null) {
	        parentInfo = nativeContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = nativeContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._nativeParent = nativeParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = nativeContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function receiveComponent(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getNativeNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	
	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },
	
	  getNativeNode: function getNativeNode() {
	    var nativeNode = this._commentNodes;
	    if (nativeNode) {
	      return nativeNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : invariant(false) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    nativeNode = [this._nativeNode, this._closingComment];
	    this._commentNodes = nativeNode;
	    return nativeNode;
	  },
	
	  unmountComponent: function unmountComponent() {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var ReactUpdates = __webpack_require__(134);
	var Transaction = __webpack_require__(140);
	
	var emptyFunction = __webpack_require__(86);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function close() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var EventListener = __webpack_require__(211);
	var ExecutionEnvironment = __webpack_require__(95);
	var PooledClass = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactUpdates = __webpack_require__(134);
	
	var getEventTarget = __webpack_require__(141);
	var getUnboundedScrollPosition = __webpack_require__(212);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._nativeParent) {
	    inst = inst._nativeParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function destructor() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function setEnabled(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function isEnabled() {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function monitorScrollValue(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(86);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ },
/* 212 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(132);
	var EventPluginHub = __webpack_require__(116);
	var EventPluginUtils = __webpack_require__(118);
	var ReactComponentEnvironment = __webpack_require__(192);
	var ReactClass = __webpack_require__(102);
	var ReactEmptyComponent = __webpack_require__(200);
	var ReactBrowserEventEmitter = __webpack_require__(181);
	var ReactNativeComponent = __webpack_require__(201);
	var ReactUpdates = __webpack_require__(134);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(79);
	
	var CallbackQueue = __webpack_require__(135);
	var PooledClass = __webpack_require__(81);
	var ReactBrowserEventEmitter = __webpack_require__(181);
	var ReactInputSelection = __webpack_require__(215);
	var Transaction = __webpack_require__(140);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function initialize() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function close(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function initialize() {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function close() {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function getTransactionWrappers() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function getReactMountReady() {
	    return this.reactMountReady;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function checkpoint() {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function rollback(checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function destructor() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(216);
	
	var containsNode = __webpack_require__(218);
	var focusNode = __webpack_require__(167);
	var getActiveElement = __webpack_require__(221);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function getSelectionInformation() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function restoreSelection(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function getSelection(input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function setSelection(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(95);
	
	var getNodeForCharacterOffset = __webpack_require__(217);
	var getTextContentAccessor = __webpack_require__(126);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 217 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(219);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(220);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 220 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 222 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var EventPropagators = __webpack_require__(122);
	var ExecutionEnvironment = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactInputSelection = __webpack_require__(215);
	var SyntheticEvent = __webpack_require__(128);
	
	var getActiveElement = __webpack_require__(221);
	var isTextInputElement = __webpack_require__(143);
	var keyOf = __webpack_require__(106);
	var shallowEqual = __webpack_require__(204);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(115);
	var EventListener = __webpack_require__(211);
	var EventPropagators = __webpack_require__(122);
	var ReactDOMComponentTree = __webpack_require__(131);
	var SyntheticAnimationEvent = __webpack_require__(225);
	var SyntheticClipboardEvent = __webpack_require__(226);
	var SyntheticEvent = __webpack_require__(128);
	var SyntheticFocusEvent = __webpack_require__(227);
	var SyntheticKeyboardEvent = __webpack_require__(228);
	var SyntheticMouseEvent = __webpack_require__(146);
	var SyntheticDragEvent = __webpack_require__(231);
	var SyntheticTouchEvent = __webpack_require__(232);
	var SyntheticTransitionEvent = __webpack_require__(233);
	var SyntheticUIEvent = __webpack_require__(147);
	var SyntheticWheelEvent = __webpack_require__(234);
	
	var emptyFunction = __webpack_require__(86);
	var getEventCharCode = __webpack_require__(229);
	var invariant = __webpack_require__(82);
	var keyOf = __webpack_require__(106);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function didPutListener(inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function willDeleteListener(inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function clipboardData(event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(147);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(147);
	
	var getEventCharCode = __webpack_require__(229);
	var getEventKey = __webpack_require__(230);
	var getEventModifierState = __webpack_require__(149);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function charCode(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function keyCode(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function which(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 229 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(229);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(146);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(147);
	
	var getEventModifierState = __webpack_require__(149);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(128);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(146);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function deltaX(event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDefaultInjection = __webpack_require__(123);
	var ReactMount = __webpack_require__(236);
	var ReactReconciler = __webpack_require__(137);
	var ReactUpdates = __webpack_require__(134);
	var ReactVersion = __webpack_require__(111);
	
	var findDOMNode = __webpack_require__(241);
	var getNativeComponentFromComposite = __webpack_require__(242);
	var renderSubtreeIntoContainer = __webpack_require__(243);
	var warning = __webpack_require__(85);
	
	ReactDefaultInjection.inject();
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function getNodeFromInstance(inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getNativeComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(95);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(153);
	var DOMProperty = __webpack_require__(132);
	var ReactBrowserEventEmitter = __webpack_require__(181);
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactDOMContainerInfo = __webpack_require__(237);
	var ReactDOMFeatureFlags = __webpack_require__(238);
	var ReactElement = __webpack_require__(83);
	var ReactFeatureFlags = __webpack_require__(136);
	var ReactInstrumentation = __webpack_require__(93);
	var ReactMarkupChecksum = __webpack_require__(239);
	var ReactReconciler = __webpack_require__(137);
	var ReactUpdateQueue = __webpack_require__(198);
	var ReactUpdates = __webpack_require__(134);
	
	var emptyObject = __webpack_require__(101);
	var instantiateReactComponent = __webpack_require__(194);
	var invariant = __webpack_require__(82);
	var setInnerHTML = __webpack_require__(158);
	var shouldUpdateReactComponent = __webpack_require__(199);
	var warning = __webpack_require__(85);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  ReactReconciler.unmountComponent(instance, safely);
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._nativeParent);
	  }
	}
	
	function getNativeRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevNativeInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevNativeInstance && !prevNativeInstance._nativeParent ? prevNativeInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getNativeRootInstanceInContainer(container);
	  return root ? root._nativeContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function TopLevelWrapper() {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function scrollMonitor(container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function _updateRootComponent(prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginFlush();
	    }
	
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Mute future events from the top level wrapper.
	      // It is an implementation detail that devtools should not know about.
	      componentInstance._debugID = 0;
	    }
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	      ReactInstrumentation.debugTool.onEndFlush();
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function render(nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function unmountComponentAtNode(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : void 0;
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function _mountImageIntoNode(markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var nativeNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (nativeNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onNativeOperation(nativeNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(205);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ },
/* 238 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(240);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function addChecksumToMarkup(markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function canReuseMarkup(markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 240 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(131);
	var ReactInstanceMap = __webpack_require__(196);
	
	var getNativeComponentFromComposite = __webpack_require__(242);
	var invariant = __webpack_require__(82);
	var warning = __webpack_require__(85);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getNativeComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNativeComponentFromComposite
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(197);
	
	function getNativeComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.NATIVE) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getNativeComponentFromComposite;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(236);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(235);

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	__webpack_require__(246);
	
	__webpack_require__(250);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CreditCardExpirationDateInput = _react2.default.createClass({
		displayName: 'CreditCardExpirationDateInput',
	
	
		format: function format() {
			var month = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
			var year = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];
	
	
			var newMonth = month,
			    newYear = year;
	
			// Format the Year
			// ----------------
			// Remove the '20' from the beginning of the year
			newYear = newYear.slice(2, newYear.length);
	
			if (newYear === '') {
				if (newMonth.length === 2) {
					return newMonth + '/';
				} else {
					return newMonth;
				}
			} else if (newMonth === '') {
				return '';
			} else {
				return newMonth + '/' + newYear;
			}
		},
	
		unformat: function unformat() {
			var date = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
			var cursorPosition = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
	
	
			var newString = date;
	
			// Remove any non-numeric characters
			// with the exception of the slash
			newString = newString.replace(/[^0-9\/]/g, '');
	
			// Cap the string at 4 numbers and a slash
			var allowedLength = newString.includes('/') ? 5 : 4;
			if (newString.length > allowedLength) {
				newString = newString.slice(0, allowedLength);
			}
	
			// If the user has just deleted the slash,
			// remove both the slash and the digit just before it.
			// We know the slash was deleted if
			var month = this.props.expirationDate.values.month;
			var year = this.props.expirationDate.values.year;
			var previousMonthString = month ? month.toString() : '';
			var previousYearString = year ? year.toString().slice(2, year.toString().length) : '';
			var dateString = previousMonthString + previousYearString;
			if (newString === dateString && // 1) the input value matches the expirationDate prop
			newString.length === dateString.length && // 2) they're both 2 digits
			cursorPosition === 2 // 3) the caret position is at the end of the string
			) {
					newString = newString.slice(0, 1) + '/' + newString.slice(2, newString.length);
				}
	
			// Remove the slash that we'd previously added
			// newString = newString.replace(/\//, '')
			return newString;
		},
	
		getState: function getState() {
			var value = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			// Check whether the number is blank
			if (value === '') return inputStates.BLANK;
	
			// Split the date into month and year
	
			var _value$split = value.split('/');
	
			var _value$split2 = _slicedToArray(_value$split, 2);
	
			var expirationMonth = _value$split2[0];
			var expirationYear = _value$split2[1];
	
			// Check that both components are present
	
			if (!expirationMonth || !expirationYear) return inputStates.INCOMPLETE;
	
			// Check that we have enough characters
			if (value.length < 5) return inputStates.INCOMPLETE;
	
			// Check whether the date is valid
			if (Stripe.card.validateExpiry(expirationMonth, expirationYear)) return inputStates.VALID;
	
			// Otherwise return invalid
			return inputStates.INVALID;
		},
	
		getField: function getField() {
			return this.field;
		},
	
		render: function render() {
			var _this = this;
	
			var errorClass = this.props.expirationDate.status === inputStates.INVALID ? 'Error' : '';
			return _react2.default.createElement('input', {
				inputMode: 'numeric',
				pattern: '[0-9]*',
				value: this.format(this.props.expirationDate.values.month, this.props.expirationDate.values.year),
				style: this.props.style,
				placeholder: 'MM/YY',
				className: 'ExpirationDate ' + errorClass,
				onChange: function onChange(e) {
					e.preventDefault();
					var newValue = _this.unformat(e.target.value.trim(), e.target.selectionStart);
					_this.props.onChange(newValue, _this.getState(newValue), e.target.selectionStart);
	
					if (_this.getState(newValue) === inputStates.VALID) {
						_this.props.onShouldMoveToSecurityCodeField();
					}
				},
				onFocus: function onFocus(e) {
					_this.props.onFocus();
				}
			});
		}
	
	});
	
	exports.default = CreditCardExpirationDateInput;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(247);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(249)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./input.css", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(248)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Fonts */\n\n/* Colors */\n\n/* Spacing */\n\n/* Sizing */\n\n/* Animation */\n\n.Input {\n\tbackground: #ffffff;\n\tborder: 1px solid #ffffff;\n\tborder-radius: 3px;\n\tbox-sizing: border-box;\n\n\tdisplay: -webkit-box;\n\n\tdisplay: -ms-flexbox;\n\n\tdisplay: flex;\n\t-webkit-box-align: center;\n\t    -ms-flex-align: center;\n\t        align-items: center;\n\t-webkit-box-flex: 0;\n\t    -ms-flex-positive: 0;\n\t        flex-grow: 0;\n\twidth: 100%;\n}\n\n.Input input {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tfont-family: \"Avenir\",helvetica,sans-serif;\n\twidth: 100%;\n\theight: 48px;\n\tfont-size: 1rem;\n\tfont-weight: 300;\n\tcolor: #555555\n}\n\n.Input input:focus, .Input input:active {\n\tborder: none;\n\toutline: none;\n}\n\n/* Position the icon on the left side of the input */\n\n.Input i {\n\theight: 48px;\n\twidth: 48px;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-negative: 0;\n\tflex-shrink: 0;\n\t-ms-flex-preferred-size: 48px;\n\tflex-basis: 48px;\n\t-webkit-box-align: center;\n\t-ms-flex-align: center;\n\talign-items: center;\n\t-webkit-box-pack: center;\n\t-ms-flex-pack: center;\n\tjustify-content: center;\n}\n\n.Input i svg {\n\theight: 24px;\n}\n\n.Input i svg path {\n\tstroke: #555555;\n}\n\n.Input.Error input.Error {\n\tcolor: #D0021B;\n\t-webkit-animation: shake 0.5s linear;\n\tanimation: shake 0.5s linear;\n}\n\n.Input.Error i svg path {\n\tstroke: transparent;\n\tfill: #D0021B;\n}\n\n@-webkit-keyframes shake {\n    8%, 41% { -webkit-transform: translateX(-10px); transform: translateX(-10px); }\n    25%, 58% { -webkit-transform: translateX(10px); transform: translateX(10px); }\n    75% { -webkit-transform: translateX(-5px); transform: translateX(-5px); }\n    92% { -webkit-transform: translateX(5px); transform: translateX(5px); }\n    0%, 100% { -webkit-transform: translateX(0); transform: translateX(0); }\n}\n\n@keyframes shake {\n    8%, 41% { -webkit-transform: translateX(-10px); transform: translateX(-10px); }\n    25%, 58% { -webkit-transform: translateX(10px); transform: translateX(10px); }\n    75% { -webkit-transform: translateX(-5px); transform: translateX(-5px); }\n    92% { -webkit-transform: translateX(5px); transform: translateX(5px); }\n    0%, 100% { -webkit-transform: translateX(0); transform: translateX(0); }\n}", ""]);
	
	// exports


/***/ },
/* 248 */
/***/ function(module, exports) {

	"use strict";
	
	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function () {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(251);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(249)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./credit-card-payment-input.css", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./credit-card-payment-input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(248)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Fonts */\n\n/* Colors */\n\n/* Spacing */\n\n/* Sizing */\n\n/* Animation */\n\n/* \tOuter container for fields\n\t\tthat prevents overflow outside\n\t\tof the field area */\n\n.CreditCardPaymentInput .fields-container {\n\n\toverflow: hidden;\n\n\tposition: relative;\n\n\twidth: 100%;\n}\n\n/*\tInner container for fields\n\t\tthat allows for natural field sizing */\n\n.CreditCardPaymentInput .fields {\n\n\twidth: 100%;\n\n\t// display: flex;\n}\n\n/*\tMake the card number field half the width of the inner container\n\t\tso that it shows exclusively in card number mode */\n\n.CreditCardPaymentInput .CardNumber {\n\n\t// flex: 2;\n\n\tposition: relative;\n\n\tmargin-right: calc( 24px / 2 );\n\n\twidth: calc( 100% - ( 24px ) );\n\n\tfloat: left;\n\n\tbox-sizing: border-box;\n\n\t// flex: 0 0 180;\n\n\t// width: 50%;\n}\n\n.CreditCardPaymentInput .ExpirationDate, .CreditCardPaymentInput .SecurityCode {\n\n\t// flex: 0 0;\n\n\twidth: 2px;\n\n\tfloat: left;\n\n\ttext-align: center;\n\n\tbox-sizing: border-box;\n}\n\n/* \tPosition a ghost card number field over the container\n\t\tin order to show a peak at the last 5 credit card digits\n\t\twhen not in credit card editing mode */\n\n.CreditCardPaymentInput .AbbreviatedCardNumberGhost, .CreditCardPaymentInput .CardNumberGhost {\n\n\tposition: absolute;\n\n\tleft: 0;\n\n\tdisplay: -webkit-box;\n\n\tdisplay: -ms-flexbox;\n\n\tdisplay: flex;\n\n\t-webkit-box-align: center;\n\n\t-ms-flex-align: center;\n\n\talign-items: center;\n\n\theight: 48px;\n\n\tfont-size: 1rem;\n\n\tfont-weight: 300;\n\n\tcolor: #555555;\n\n\t// visibility: hidden;\n\n\topacity: 0;\n}\n\n/* Style the combo field when the credit card portion is active */\n.CreditCardPaymentInput.CreditCardNumber {\n\t\n\t/*\tAnimate the credit card field into view\n\t\twhen in credit card mode */\n\t/*.fields {\n\t\ttransform: translateX(0%);\n\t\ttransition: transform $animation-duration ease-in-out;\n\t}*/\n}\n/*\tAnimate the other fields out of view */\n.CreditCardPaymentInput.CreditCardNumber .ExpirationDate, .CreditCardPaymentInput.CreditCardNumber .SecurityCode, .CreditCardPaymentInput.CreditCardNumber .AbbreviatedCardNumberGhost {\n\n\topacity: 0;\n\n\t-webkit-transform: scale(0.8);\n\n\ttransform: scale(0.8);\n\n\t-webkit-transition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n}\n/*\tShow the credit card field\n\t\twhen in credid card number mode */\n.CreditCardPaymentInput.CreditCardNumber .CardNumber {\n\n\topacity: 1;\n\n\t// transform: scale(0.8);\n\n\t-webkit-transition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n}\n\n/* Style the combo field when the credit card portion is active */\n.CreditCardPaymentInput.CreditCardExpirationDate, .CreditCardPaymentInput.CreditCardSecurityCode {\n\t\n\t/*\tAnimate the credit card field out of view\n\t\twhen not in credit card mode */\n\t/*.fields {\n\t\ttransform: translateX(-25%);\n\t\ttransition: transform $animation-duration ease-in-out;\n\t}*/\n\n\t/*\tHide the credit card field\n\t\twhen not in credid card number mode\n\t\tand expand the other fields */\n\t/*.CardNumber {\n\t\tflex: 0;\n\t}\n\n\t.ExpirationDate,\n\t.SecurityCode {\n\t\tflex: 1;\n\t}*/\t\n}\n/*\tAnimate the other fields into view */\n.CreditCardPaymentInput.CreditCardExpirationDate .ExpirationDate, .CreditCardPaymentInput.CreditCardExpirationDate .SecurityCode, .CreditCardPaymentInput.CreditCardExpirationDate .AbbreviatedCardNumberGhost, .CreditCardPaymentInput.CreditCardSecurityCode .ExpirationDate, .CreditCardPaymentInput.CreditCardSecurityCode .SecurityCode, .CreditCardPaymentInput.CreditCardSecurityCode .AbbreviatedCardNumberGhost {\n\n\topacity: 1;\n\n\t-webkit-transform: scale(1);\n\n\ttransform: scale(1);\n\n\t-webkit-transition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n}\n/*\tAnimate the credit card field out of view */\n.CreditCardPaymentInput.CreditCardExpirationDate .CardNumber, .CreditCardPaymentInput.CreditCardSecurityCode .CardNumber {\n\n\topacity: 0;\n\n\t// transform: scale(0.8);\n\n\t-webkit-transition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out;\n\n\ttransition: transform 200ms ease-in-out, opacity 200ms ease-in-out, -webkit-transform 200ms ease-in-out;\n}\n\n/* Make the abbreviated card number red if there's an error */\n\n.CreditCardPaymentInput.Error .AbbreviatedCardNumberGhost {\n\n\tcolor: #D0021B\n}\n\n", ""]);
	
	// exports


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _CreditCardNumberInput = __webpack_require__(253);
	
	var _CreditCardNumberInput2 = _interopRequireDefault(_CreditCardNumberInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const DELETE_KEY_CODE = 46
	
	function setup(propOverrides) {
		var props = Object.assign({
			style: '',
			placeholder: 'hi',
			className: 'there',
			cardNumber: {
				status: inputStates.VALID,
				value: '4242424242424242',
				cursorPosition: 2
			},
			onChange: _expect2.default.createSpy(),
			onFocus: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_CreditCardNumberInput2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('CreditCardNumberInput', function () {
		it('should render an input field', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className).toBe('CardNumber ');
		});
	
		it('should render an input field with an error when the number is invalid', function () {
			var _setup2 = setup({
				cardNumber: { status: inputStates.INVALID }
			});
	
			var output = _setup2.output;
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		describe('Formatting a Number', function () {
			it('should return a blank string when given an undefined input', function () {
				var _setup3 = setup();
	
				var instance = _setup3.instance;
	
				(0, _expect2.default)(instance.format(undefined)).toBe('');
			});
	
			it('should add a space after the 4th character in a credit card number', function () {
				var _setup4 = setup();
	
				var instance = _setup4.instance;
	
				(0, _expect2.default)(instance.format('12345')).toBe('1234 5');
			});
	
			it('should add a space after the 11th characters in a credit card number', function () {
				var _setup5 = setup();
	
				var instance = _setup5.instance;
	
				(0, _expect2.default)(instance.format('123456789109876')).toBe('1234 567891 09876');
			});
		});
	
		describe('Unformatting a Number', function () {
			it('return a blank string when given an undefined input', function () {
				var _setup6 = setup();
	
				var instance = _setup6.instance;
	
				(0, _expect2.default)(instance.unformat(undefined)).toBe('');
			});
	
			it('should remove the spaces we previously added', function () {
				var _setup7 = setup();
	
				var instance = _setup7.instance;
	
				(0, _expect2.default)(instance.unformat('1234 567891 09876')).toBe('123456789109876');
			});
	
			it('should only accept numbers', function () {
				var _setup8 = setup();
	
				var instance = _setup8.instance;
	
				(0, _expect2.default)(instance.unformat('abcde')).toBe('');
			});
		});
	
		describe('Getting State', function () {
	
			// afterEach(function() {
			// 	delete Stripe
			// })
	
			it('should return BLANK when field is undefined', function () {
				var _setup9 = setup();
	
				var instance = _setup9.instance;
	
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.BLANK);
			});
	
			it('should return BLANK when the number is blank', function () {
				var _setup10 = setup();
	
				var instance = _setup10.instance;
	
				instance.field = { value: function value() {
						return '';
					} };
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.BLANK);
			});
	
			it('should return INCOMPLETE when an amex number is less than the required character count', function () {
				var _setup11 = setup();
	
				var instance = _setup11.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'amex';
					},
					value: function value() {
						return '3725000000';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.INCOMPLETE);
			});
	
			it('should return INCOMPLETE when a non-amex number is less than the required character count', function () {
				var _setup12 = setup();
	
				var instance = _setup12.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'visa';
					},
					value: function value() {
						return '424242424242';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.INCOMPLETE);
			});
	
			it('should return INVALID when an amex number is the right character count but not valid', function () {
				var _setup13 = setup();
	
				var instance = _setup13.instance;
	
				global.Stripe = {
					card: {
						validateCardNumber: function validateCardNumber() {
							return false;
						}
					}
				};
				instance.field = {
					cardType: function cardType() {
						return 'amex';
					},
					value: function value() {
						return '372500000000000';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.INVALID);
			});
	
			it('should return INVALID when a non-amex number is the right character count but not valid', function () {
				var _setup14 = setup();
	
				var instance = _setup14.instance;
	
				global.Stripe = {
					card: {
						validateCardNumber: function validateCardNumber() {
							return false;
						}
					}
				};
				instance.field = {
					cardType: function cardType() {
						return 'visa';
					},
					value: function value() {
						return '4242111111111111';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.INVALID);
			});
	
			it('should return VALID when an amex card is the right character count and valid', function () {
				var _setup15 = setup();
	
				var instance = _setup15.instance;
	
				global.Stripe = {
					card: {
						validateCardNumber: function validateCardNumber() {
							return true;
						}
					}
				};
				instance.field = {
					cardType: function cardType() {
						return 'amex';
					},
					value: function value() {
						return '378282246310005';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.VALID);
			});
	
			it('should return VALID when a non-amex card is the right character count and valid', function () {
				var _setup16 = setup();
	
				var instance = _setup16.instance;
	
				global.Stripe = {
					card: {
						validateCardNumber: function validateCardNumber() {
							return true;
						}
					}
				};
				instance.field = {
					cardType: function cardType() {
						return 'visa';
					},
					value: function value() {
						return '4242424242424242';
					}
				};
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.VALID);
			});
		});
	
		describe('Knowing When Editing is Finished', function () {
			it('should return false if the field has not been defined', function () {
				var _setup17 = setup();
	
				var instance = _setup17.instance;
	
				(0, _expect2.default)(instance.isDoneEditing()).toBe(false);
			});
	
			it('should return false if cardtype is not amex and there are less than 16 digits', function () {
				var _setup18 = setup();
	
				var instance = _setup18.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'visa';
					},
					value: function value() {
						return '424242424242';
					}
				};
				(0, _expect2.default)(instance.isDoneEditing()).toBe(false);
			});
	
			it('should return false if cardtype is amex and there are less than 15 digits', function () {
				var _setup19 = setup();
	
				var instance = _setup19.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'amex';
					},
					value: function value() {
						return '3725000000';
					}
				};
				(0, _expect2.default)(instance.isDoneEditing()).toBe(false);
			});
	
			it('should return true if cardtype is not amex and there are 16 digits', function () {
				var _setup20 = setup();
	
				var instance = _setup20.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'visa';
					},
					value: function value() {
						return '4242424242424242';
					}
				};
				(0, _expect2.default)(instance.isDoneEditing()).toBe(true);
			});
	
			it('should return true if cardtype is amex and there are 15 digits', function () {
				var _setup21 = setup();
	
				var instance = _setup21.instance;
	
				instance.field = {
					cardType: function cardType() {
						return 'amex';
					},
					value: function value() {
						return '372500000098765';
					}
				};
				(0, _expect2.default)(instance.isDoneEditing()).toBe(true);
			});
		});
	});

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _index = __webpack_require__(254);
	
	var _index2 = _interopRequireDefault(_index);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	__webpack_require__(246);
	
	__webpack_require__(250);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CreditCardNumberInput = _react2.default.createClass({
		displayName: 'CreditCardNumberInput',
	
	
		componentDidMount: function componentDidMount() {
	
			// Set up fieldkit formatting
			this.field = new _index2.default.CardTextField(_reactDom2.default.findDOMNode(this));
			this.field.setValue(this.props.cardNumber.value);
			// this.field.setCardMaskStrategy(
			// 	FieldKit.CardTextField.CardMaskStrategy.DoneEditing
			// );
			this.field.setDelegate({
				textDidChange: this.onChange
			});
		},
	
		format: function format() {
			var cardNumber = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			var newString = cardNumber;
	
			if (newString.length <= 4) return newString;
	
			if (newString.length > 4) {
				newString = [newString.slice(0, 4), ' ', newString.slice(4)].join('');
			}
	
			if (newString.length > 11) {
				newString = [newString.slice(0, 11), ' ', newString.slice(11)].join('');
			}
	
			return newString;
		},
	
		unformat: function unformat() {
			var cardNumber = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			var newString = cardNumber;
	
			// Remove any non-numerical characters
			newString = newString.replace(/\D/g, '');
	
			return newString;
		},
	
		getState: function getState() {
	
			var number = this.field ? this.field.value() : '';
	
			// Check whether the number is blank
			if (number === '') return inputStates.BLANK;
	
			// Check whether the number is the right character count
			if (number.length < 15) return inputStates.INCOMPLETE;
	
			if (this.field.cardType() !== 'amex' && number.length < 16) return inputStates.INCOMPLETE;
	
			// Check whether the number is valid
			if (Stripe.card.validateCardNumber(number)) return inputStates.VALID;
	
			// Otherwise return invalid
			return inputStates.INVALID;
		},
	
		isDoneEditing: function isDoneEditing() {
			var done = false;
	
			if (this.field) {
				done = this.field.cardType() === 'amex' ? this.field.value().length === 15 : this.field.value().length === 16;
			}
	
			return done;
		},
	
		getField: function getField() {
			return this.field;
		},
	
		onChange: function onChange(field) {
			this.props.onChange(this.field.value(), this.field.cardType(), this.field.cardMask(), this.getState(), _reactDom2.default.findDOMNode(this).selectionStart,
	
			// Also pass the widths of ghost elements on the payment page
			// so that we can save them to state and render them appropriately
			// the next time this page does a fresh render. Upon fresh render,
			// these elements won't be present in the DOM yet to measure directly.
			{
				cardNumberGhostWidth: document.getElementsByClassName(paymentFormStates.CARD_NUMBER_GHOST_CLASS)[0].scrollWidth,
				abbreviatedCardNumberGhostWidth: document.getElementsByClassName(paymentFormStates.ABBREVIATED_CARD_NUMBER_GHOST_CLASS)[0].scrollWidth,
				fieldsWidth: document.getElementsByClassName(paymentFormStates.FIELDS_CLASS)[0].scrollWidth
			});
	
			if (this.isDoneEditing() && this.getState() === inputStates.VALID) {
				this.props.onShouldMoveToExpirationDateField();
				// this.props.onDidFinishEditing()
			}
		},
	
		isInError: function isInError() {
			return this.props.cardNumber.status === inputStates.INVALID || this.props.cardNumber.status === inputStates.EXPIRED || this.props.cardNumber.status === inputStates.INCORRECT || this.props.cardNumber.status === inputStates.DECLINED;
		},
	
		render: function render() {
			var _this = this;
	
			var errorClass = this.isInError() ? 'Error' : '';
			return _react2.default.createElement('input', {
				inputMode: 'numeric',
				pattern: '[0-9]*',
				style: this.props.style,
				placeholder: 'Card Number',
				className: 'CardNumber ' + errorClass
				// onChange={e => {
				// 	e.preventDefault()
				// 	this.props.onChange(
				// 		this.field.value(),
				// 		this.getState(),
				// 		e.target.selectionStart
				// 	)
	
				// 	if ( this.isDoneEditing() && this.getState() === inputStates.VALID ) {
				// 		this.props.onDidFinishEditing()
				// 	}
				// }}
				, onFocus: function onFocus(e) {
					_this.props.onFocus();
				}
			});
		}
	
	});
	
	exports.default = CreditCardNumberInput;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _adaptive_card_formatter = __webpack_require__(255);
	
	var _adaptive_card_formatter2 = _interopRequireDefault(_adaptive_card_formatter);
	
	var _amex_card_formatter = __webpack_require__(256);
	
	var _amex_card_formatter2 = _interopRequireDefault(_amex_card_formatter);
	
	var _card_text_field = __webpack_require__(261);
	
	var _card_text_field2 = _interopRequireDefault(_card_text_field);
	
	var _card_utils = __webpack_require__(260);
	
	var _default_card_formatter = __webpack_require__(257);
	
	var _default_card_formatter2 = _interopRequireDefault(_default_card_formatter);
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	var _employer_identification_number_formatter = __webpack_require__(267);
	
	var _employer_identification_number_formatter2 = _interopRequireDefault(_employer_identification_number_formatter);
	
	var _expiry_date_field = __webpack_require__(268);
	
	var _expiry_date_field2 = _interopRequireDefault(_expiry_date_field);
	
	var _expiry_date_formatter = __webpack_require__(269);
	
	var _expiry_date_formatter2 = _interopRequireDefault(_expiry_date_formatter);
	
	var _formatter = __webpack_require__(259);
	
	var _formatter2 = _interopRequireDefault(_formatter);
	
	var _number_formatter = __webpack_require__(270);
	
	var _number_formatter2 = _interopRequireDefault(_number_formatter);
	
	var _number_formatter_settings_formatter = __webpack_require__(271);
	
	var _number_formatter_settings_formatter2 = _interopRequireDefault(_number_formatter_settings_formatter);
	
	var _phone_formatter = __webpack_require__(273);
	
	var _phone_formatter2 = _interopRequireDefault(_phone_formatter);
	
	var _social_security_number_formatter = __webpack_require__(274);
	
	var _social_security_number_formatter2 = _interopRequireDefault(_social_security_number_formatter);
	
	var _text_field = __webpack_require__(262);
	
	var _text_field2 = _interopRequireDefault(_text_field);
	
	var _undo_manager = __webpack_require__(263);
	
	var _undo_manager2 = _interopRequireDefault(_undo_manager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @namespace FieldKit
	 * @readonly
	 */
	module.exports = {
	  AdaptiveCardFormatter: _adaptive_card_formatter2.default,
	  AmexCardFormatter: _amex_card_formatter2.default,
	  CardTextField: _card_text_field2.default,
	  CardUtils: {
	    AMEX: _card_utils.AMEX,
	    DISCOVER: _card_utils.DISCOVER,
	    VISA: _card_utils.VISA,
	    MASTERCARD: _card_utils.MASTERCARD,
	    determineCardType: _card_utils.determineCardType,
	    luhnCheck: _card_utils.luhnCheck,
	    validCardLength: _card_utils.validCardLength
	  },
	  DefaultCardFormatter: _default_card_formatter2.default,
	  DelimitedTextFormatter: _delimited_text_formatter2.default,
	  EmployerIdentificationNumberFormatter: _employer_identification_number_formatter2.default,
	  ExpiryDateField: _expiry_date_field2.default,
	  ExpiryDateFormatter: _expiry_date_formatter2.default,
	  Formatter: _formatter2.default,
	  NumberFormatter: _number_formatter2.default,
	  NumberFormatterSettingsFormatter: _number_formatter_settings_formatter2.default,
	  PhoneFormatter: _phone_formatter2.default,
	  SocialSecurityNumberFormatter: _social_security_number_formatter2.default,
	  TextField: _text_field2.default,
	  UndoManager: _undo_manager2.default
	};

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _amex_card_formatter = __webpack_require__(256);
	
	var _amex_card_formatter2 = _interopRequireDefault(_amex_card_formatter);
	
	var _default_card_formatter = __webpack_require__(257);
	
	var _default_card_formatter2 = _interopRequireDefault(_default_card_formatter);
	
	var _card_utils = __webpack_require__(260);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * AdaptiveCardFormatter will decide if it needs to use
	 * {@link AmexCardFormatter} or {@link DefaultCardFormatter}.
	 */
	
	var AdaptiveCardFormatter = function () {
	  function AdaptiveCardFormatter() {
	    _classCallCheck(this, AdaptiveCardFormatter);
	
	    /** @private */
	    this.amexCardFormatter = new _amex_card_formatter2.default();
	    /** @private */
	    this.defaultCardFormatter = new _default_card_formatter2.default();
	    /** @private */
	    this.formatter = this.defaultCardFormatter;
	  }
	
	  /**
	   * Will pick the right formatter based on the `pan` and will return the
	   * formatted string.
	   *
	   * @param {string} pan
	   * @returns {string} formatted string
	   */
	
	
	  _createClass(AdaptiveCardFormatter, [{
	    key: 'format',
	    value: function format(pan) {
	      return this._formatterForPan(pan).format(pan);
	    }
	
	    /**
	     * Will call parse on the formatter.
	     *
	     * @param {string} text
	     * @param {function(string)} error
	     * @returns {string} returns value with delimiters removed
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text, error) {
	      return this.formatter.parse(text, error);
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(!string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      this.formatter = this._formatterForPan(change.proposed.text);
	      return this.formatter.isChangeValid(change, error);
	    }
	
	    /**
	     * Decides which formatter to use.
	     *
	     * @param {string} pan
	     * @returns {Formatter}
	     * @private
	     */
	
	  }, {
	    key: '_formatterForPan',
	    value: function _formatterForPan(pan) {
	      if ((0, _card_utils.determineCardType)(pan.replace(/[^\d]+/g, '')) === _card_utils.AMEX) {
	        return this.amexCardFormatter;
	      } else {
	        return this.defaultCardFormatter;
	      }
	    }
	  }]);
	
	  return AdaptiveCardFormatter;
	}();
	
	exports.default = AdaptiveCardFormatter;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _default_card_formatter = __webpack_require__(257);
	
	var _default_card_formatter2 = _interopRequireDefault(_default_card_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Amex credit card formatter.
	 *
	 * @extends DefaultCardFormatter
	 */
	
	var AmexCardFormatter = function (_DefaultCardFormatter) {
	  _inherits(AmexCardFormatter, _DefaultCardFormatter);
	
	  function AmexCardFormatter() {
	    _classCallCheck(this, AmexCardFormatter);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(AmexCardFormatter).apply(this, arguments));
	  }
	
	  _createClass(AmexCardFormatter, [{
	    key: 'hasDelimiterAtIndex',
	
	    /**
	     * @override
	     */
	    value: function hasDelimiterAtIndex(index) {
	      return index === 4 || index === 11;
	    }
	
	    /**
	     * @override
	     */
	
	  }, {
	    key: 'maximumLength',
	    get: function get() {
	      return 15 + 2;
	    }
	  }]);
	
	  return AmexCardFormatter;
	}(_default_card_formatter2.default);
	
	exports.default = AmexCardFormatter;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	var _card_utils = __webpack_require__(260);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * A generic credit card formatter.
	 *
	 * @extends DelimitedTextFormatter
	 */
	
	var DefaultCardFormatter = function (_DelimitedTextFormatt) {
	  _inherits(DefaultCardFormatter, _DelimitedTextFormatt);
	
	  function DefaultCardFormatter() {
	    _classCallCheck(this, DefaultCardFormatter);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(DefaultCardFormatter).call(this, ' '));
	  }
	
	  /**
	   * @param {number} index
	   * @returns {boolean}
	   */
	
	
	  _createClass(DefaultCardFormatter, [{
	    key: 'hasDelimiterAtIndex',
	    value: function hasDelimiterAtIndex(index) {
	      return index === 4 || index === 9 || index === 14;
	    }
	
	    /**
	     * Will call parse on the formatter.
	     *
	     * @param {string} text
	     * @param {function(string)} error
	     * @returns {string} returns value with delimiters removed
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text, error) {
	      var value = this._valueFromText(text);
	      if (typeof error === 'function') {
	        if (!(0, _card_utils.validCardLength)(value)) {
	          error('card-formatter.number-too-short');
	        }
	        if (!(0, _card_utils.luhnCheck)(value)) {
	          error('card-formatter.invalid-number');
	        }
	      }
	      return _get(Object.getPrototypeOf(DefaultCardFormatter.prototype), 'parse', this).call(this, text, error);
	    }
	
	    /**
	     * Parses the given text by removing delimiters.
	     *
	     * @param {?string} text
	     * @returns {string}
	     * @private
	     */
	
	  }, {
	    key: '_valueFromText',
	    value: function _valueFromText(text) {
	      return _get(Object.getPrototypeOf(DefaultCardFormatter.prototype), '_valueFromText', this).call(this, (text || '').replace(/[^\d]/g, ''));
	    }
	
	    /**
	     * Gets the maximum length of a formatted default card number.
	     *
	     * @returns {number}
	     */
	
	  }, {
	    key: 'maximumLength',
	    get: function get() {
	      return 16 + 3;
	    }
	  }]);
	
	  return DefaultCardFormatter;
	}(_delimited_text_formatter2.default);
	
	exports.default = DefaultCardFormatter;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _formatter = __webpack_require__(259);
	
	var _formatter2 = _interopRequireDefault(_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * A generic delimited formatter.
	 *
	 * @extends Formatter
	 */
	
	var DelimitedTextFormatter = function (_Formatter) {
	  _inherits(DelimitedTextFormatter, _Formatter);
	
	  /**
	   * @param {string=} delimiter
	   * @param {boolean=} isLazy
	   * @throws {Error} delimiter must have just one character
	   */
	
	  function DelimitedTextFormatter(delimiter) {
	    var isLazy = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	
	    _classCallCheck(this, DelimitedTextFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DelimitedTextFormatter).call(this));
	
	    if (arguments.length === 0) {
	      return _possibleConstructorReturn(_this);
	    }
	
	    if (delimiter === null || delimiter === undefined || delimiter.length !== 1) {
	      throw new Error('delimiter must have just one character');
	    }
	    _this.delimiter = delimiter;
	
	    // If the formatter is lazy, delimiter will not be added until input has gone
	    // past the delimiter index. Useful for 'optional' extension, like zip codes.
	    // 94103  ->  type '1'  ->  94103-1
	    _this.isLazy = isLazy;
	    return _this;
	  }
	
	  /**
	   * Determines the delimiter character at the given index.
	   *
	   * @param {number} index
	   * @returns {?string}
	   */
	
	
	  _createClass(DelimitedTextFormatter, [{
	    key: 'delimiterAt',
	    value: function delimiterAt(index) {
	      if (!this.hasDelimiterAtIndex(index)) {
	        return null;
	      }
	      return this.delimiter;
	    }
	
	    /**
	     * Determines whether the given character is a delimiter.
	     *
	     * @param {string} chr
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isDelimiter',
	    value: function isDelimiter(chr) {
	      return chr === this.delimiter;
	    }
	
	    /**
	     * Formats the given value by adding delimiters where needed.
	     *
	     * @param {?string} value
	     * @returns {string}
	     */
	
	  }, {
	    key: 'format',
	    value: function format(value) {
	      return this._textFromValue(value);
	    }
	
	    /**
	     * Formats the given value by adding delimiters where needed.
	     *
	     * @param {?string} value
	     * @returns {string}
	     * @private
	     */
	
	  }, {
	    key: '_textFromValue',
	    value: function _textFromValue(value) {
	      if (!value) {
	        return '';
	      }
	
	      var result = '';
	      var delimiter = void 0;
	      var maximumLength = this.maximumLength;
	
	      for (var i = 0, l = value.length; i < l; i++) {
	        while (delimiter = this.delimiterAt(result.length)) {
	          result += delimiter;
	        }
	        result += value[i];
	        if (!this.isLazy) {
	          while (delimiter = this.delimiterAt(result.length)) {
	            result += delimiter;
	          }
	        }
	      }
	
	      if (maximumLength !== undefined && maximumLength !== null) {
	        return result.slice(0, maximumLength);
	      } else {
	        return result;
	      }
	    }
	
	    /**
	     * Parses the given text by removing delimiters.
	     *
	     * @param {?string} text
	     * @returns {string}
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text) {
	      return this._valueFromText(text);
	    }
	
	    /**
	     * Parses the given text by removing delimiters.
	     *
	     * @param {?string} text
	     * @returns {string}
	     * @private
	     */
	
	  }, {
	    key: '_valueFromText',
	    value: function _valueFromText(text) {
	      if (!text) {
	        return '';
	      }
	      var result = '';
	      for (var i = 0, l = text.length; i < l; i++) {
	        if (!this.isDelimiter(text[i])) {
	          result += text[i];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      if (!_get(Object.getPrototypeOf(DelimitedTextFormatter.prototype), 'isChangeValid', this).call(this, change, error)) {
	        return false;
	      }
	
	      var newText = change.proposed.text;
	      var range = change.proposed.selectedRange;
	      var hasSelection = range.length !== 0;
	
	      var startMovedLeft = range.start < change.current.selectedRange.start;
	      var startMovedRight = range.start > change.current.selectedRange.start;
	      var endMovedLeft = range.start + range.length < change.current.selectedRange.start + change.current.selectedRange.length;
	      var endMovedRight = range.start + range.length > change.current.selectedRange.start + change.current.selectedRange.length;
	
	      var startMovedOverADelimiter = startMovedLeft && this.hasDelimiterAtIndex(range.start) || startMovedRight && this.hasDelimiterAtIndex(range.start - 1);
	      var endMovedOverADelimiter = endMovedLeft && this.hasDelimiterAtIndex(range.start + range.length) || endMovedRight && this.hasDelimiterAtIndex(range.start + range.length - 1);
	
	      if (this.isDelimiter(change.deleted.text)) {
	        var newCursorPosition = change.deleted.start - 1;
	        // delete any immediately preceding delimiters
	        while (this.isDelimiter(newText.charAt(newCursorPosition))) {
	          newText = newText.substring(0, newCursorPosition) + newText.substring(newCursorPosition + 1);
	          newCursorPosition--;
	        }
	        // finally delete the real character that was intended
	        newText = newText.substring(0, newCursorPosition) + newText.substring(newCursorPosition + 1);
	      }
	
	      // adjust the cursor / selection
	      if (startMovedLeft && startMovedOverADelimiter) {
	        // move left over any immediately preceding delimiters
	        while (this.delimiterAt(range.start - 1)) {
	          range.start--;
	          range.length++;
	        }
	        // finally move left over the real intended character
	        range.start--;
	        range.length++;
	      }
	
	      if (startMovedRight) {
	        // move right over any delimiters found on the way, including any leading delimiters
	        for (var i = change.current.selectedRange.start; i < range.start + range.length; i++) {
	          if (this.delimiterAt(i)) {
	            range.start++;
	            if (range.length > 0) {
	              range.length--;
	            }
	          }
	        }
	
	        while (this.delimiterAt(range.start)) {
	          range.start++;
	          range.length--;
	        }
	      }
	
	      if (hasSelection) {
	        // Otherwise, the logic for the range start takes care of everything.
	        if (endMovedOverADelimiter) {
	          if (endMovedLeft) {
	            // move left over any immediately preceding delimiters
	            while (this.delimiterAt(range.start + range.length - 1)) {
	              range.length--;
	            }
	            // finally move left over the real intended character
	            range.length--;
	          }
	
	          if (endMovedRight) {
	            // move right over any immediately following delimiters
	            while (this.delimiterAt(range.start + range.length)) {
	              range.length++;
	            }
	            // finally move right over the real intended character
	            range.length++;
	          }
	        }
	
	        // trailing delimiters in the selection
	        while (this.hasDelimiterAtIndex(range.start + range.length - 1)) {
	          if (startMovedLeft || endMovedLeft) {
	            range.length--;
	          } else {
	            range.length++;
	          }
	        }
	
	        while (this.hasDelimiterAtIndex(range.start)) {
	          if (startMovedRight || endMovedRight) {
	            range.start++;
	            range.length--;
	          } else {
	            range.start--;
	            range.length++;
	          }
	        }
	      } else {
	        range.length = 0;
	      }
	
	      var result = true;
	
	      var value = this._valueFromText(newText, function () {
	        result = false;
	        error.apply(undefined, arguments);
	      });
	
	      if (result) {
	        change.proposed.text = this._textFromValue(value);
	      }
	
	      return result;
	    }
	  }]);
	
	  return DelimitedTextFormatter;
	}(_formatter2.default);
	
	exports.default = DelimitedTextFormatter;

/***/ },
/* 259 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Base class providing basic formatting, parsing, and change validation to be
	 * customized in subclasses.
	 */
	
	var Formatter = function () {
	  function Formatter() {
	    _classCallCheck(this, Formatter);
	  }
	
	  _createClass(Formatter, [{
	    key: 'format',
	
	    /**
	     * @param {string} text
	     * @returns {string}
	     */
	    value: function format(text) {
	      if (text === undefined || text === null) {
	        text = '';
	      }
	      if (this.maximumLength !== undefined && this.maximumLength !== null) {
	        text = text.substring(0, this.maximumLength);
	      }
	      return text;
	    }
	
	    /**
	     * @param {string} text
	     * @returns {string}
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text) {
	      if (text === undefined || text === null) {
	        text = '';
	      }
	      if (this.maximumLength !== undefined && this.maximumLength !== null) {
	        text = text.substring(0, this.maximumLength);
	      }
	      return text;
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change) {
	      var selectedRange = change.proposed.selectedRange;
	      var text = change.proposed.text;
	      if (this.maximumLength !== undefined && this.maximumLength !== null && text.length > this.maximumLength) {
	        var available = this.maximumLength - (text.length - change.inserted.text.length);
	        var newText = change.current.text.substring(0, change.current.selectedRange.start);
	        if (available > 0) {
	          newText += change.inserted.text.substring(0, available);
	        }
	        newText += change.current.text.substring(change.current.selectedRange.start + change.current.selectedRange.length);
	        var truncatedLength = text.length - newText.length;
	        change.proposed.text = newText;
	        selectedRange.start -= truncatedLength;
	      }
	      return true;
	    }
	  }]);
	
	  return Formatter;
	}();
	
	exports.default = Formatter;

/***/ },
/* 260 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.determineCardType = determineCardType;
	exports.luhnCheck = luhnCheck;
	exports.validCardLength = validCardLength;
	/**
	 * @TODO Make this an enum
	 */
	var AMEX = exports.AMEX = 'amex';
	var DISCOVER = exports.DISCOVER = 'discover';
	var JCB = exports.JCB = 'jcb';
	var MASTERCARD = exports.MASTERCARD = 'mastercard';
	var VISA = exports.VISA = 'visa';
	
	/**
	 * Pass in a credit card number and it'll return the
	 * type of card it is.
	 *
	 * @param {string} pan
	 * @returns {?string} returns the type of card based in the digits
	 */
	function determineCardType(pan) {
	  if (pan === null || pan === undefined) {
	    return null;
	  }
	
	  pan = pan.toString();
	  var firsttwo = parseInt(pan.slice(0, 2), 10);
	  var iin = parseInt(pan.slice(0, 6), 10);
	  var halfiin = parseInt(pan.slice(0, 3), 10);
	
	  if (pan[0] === '4') {
	    return VISA;
	  } else if (pan.slice(0, 4) === '6011' || firsttwo === 65 || halfiin >= 664 && halfiin <= 649 || iin >= 622126 && iin <= 622925) {
	    return DISCOVER;
	  } else if (pan.slice(0, 4) === '2131' || pan.slice(0, 4) === '1800' || firsttwo === 35) {
	    return JCB;
	  } else if (firsttwo >= 51 && firsttwo <= 55) {
	    return MASTERCARD;
	  } else if (firsttwo === 34 || firsttwo === 37) {
	    return AMEX;
	  }
	}
	
	/**
	 * Pass in a credit card number and it'll return if it
	 * passes the [luhn algorithm](http://en.wikipedia.org/wiki/Luhn_algorithm)
	 *
	 * @param {string} pan
	 * @returns {boolean}
	 */
	function luhnCheck(pan) {
	  var sum = 0;
	  var flip = true;
	  for (var i = pan.length - 1; i >= 0; i--) {
	    var digit = parseInt(pan.charAt(i), 10);
	    sum += (flip = !flip) ? Math.floor(digit * 2 / 10) + Math.floor(digit * 2 % 10) : digit;
	  }
	
	  return sum % 10 === 0;
	}
	
	/**
	 * Pass in a credit card number and it'll return if it
	 * is a valid length for that type. If it doesn't know the
	 * type it'll return false
	 *
	 * @param {string} pan
	 * @returns {boolean}
	 */
	function validCardLength(pan) {
	  switch (determineCardType(pan)) {
	    case VISA:
	      return pan.length === 13 || pan.length === 16;
	    case DISCOVER:case MASTERCARD:
	      return pan.length === 16;
	    case JCB:
	      return pan.length === 15 || pan.length === 16;
	    case AMEX:
	      return pan.length === 15;
	    default:
	      return false;
	  }
	}

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _text_field = __webpack_require__(262);
	
	var _text_field2 = _interopRequireDefault(_text_field);
	
	var _adaptive_card_formatter = __webpack_require__(255);
	
	var _adaptive_card_formatter2 = _interopRequireDefault(_adaptive_card_formatter);
	
	var _card_utils = __webpack_require__(260);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Enum for card mask strategies.
	 *
	 * @readonly
	 * @enum {number}
	 * @private
	 */
	var CardMaskStrategy = {
	  None: 'None',
	  DoneEditing: 'DoneEditing'
	};
	
	/**
	 * CardTextField add some functionality for credit card inputs
	 *
	 * @extends TextField
	 */
	
	var CardTextField = function (_TextField) {
	  _inherits(CardTextField, _TextField);
	
	  /**
	   * @param {HTMLElement} element
	   */
	
	  function CardTextField(element) {
	    _classCallCheck(this, CardTextField);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CardTextField).call(this, element, new _adaptive_card_formatter2.default()));
	
	    _this.setCardMaskStrategy(CardMaskStrategy.None);
	
	    /**
	     * Whether we are currently masking the displayed text.
	     *
	     * @private
	     */
	    _this._masked = false;
	
	    /**
	     * Whether we are currently editing.
	     *
	     * @private
	     */
	    _this._editing = false;
	    return _this;
	  }
	
	  /**
	   * Gets the card type for the current value.
	   *
	   * @returns {string} Returns one of 'visa', 'mastercard', 'amex' and 'discover'.
	   */
	
	
	  _createClass(CardTextField, [{
	    key: 'cardType',
	    value: function cardType() {
	      return (0, _card_utils.determineCardType)(this.value());
	    }
	
	    /**
	     * Gets the type of masking this field uses.
	     *
	     * @returns {CardMaskStrategy}
	     */
	
	  }, {
	    key: 'cardMaskStrategy',
	    value: function cardMaskStrategy() {
	      return this._cardMaskStrategy;
	    }
	
	    /**
	     * Sets the type of masking this field uses.
	     *
	     * @param {CardMaskStrategy} cardMaskStrategy One of CardMaskStrategy.
	     */
	
	  }, {
	    key: 'setCardMaskStrategy',
	    value: function setCardMaskStrategy(cardMaskStrategy) {
	      if (cardMaskStrategy !== this._cardMaskStrategy) {
	        this._cardMaskStrategy = cardMaskStrategy;
	        this._syncMask();
	      }
	    }
	
	    /**
	     * Returns a masked version of the current formatted PAN. Example:
	     *
	     * @example
	     *     field.setText('4111 1111 1111 1111');
	     *     field.cardMask(); // "•••• •••• •••• 1111"
	     *
	     * @returns {string} Returns a masked card string.
	     */
	
	  }, {
	    key: 'cardMask',
	    value: function cardMask() {
	      var text = this.text();
	      var last4 = text.slice(-4);
	      var toMask = text.slice(0, -4);
	
	      return toMask.replace(/\d/g, '•') + last4;
	    }
	
	    /**
	     * Gets the formatted PAN for this field.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'text',
	    value: function text() {
	      if (this._masked) {
	        return this._unmaskedText;
	      } else {
	        return _get(Object.getPrototypeOf(CardTextField.prototype), 'text', this).call(this);
	      }
	    }
	
	    /**
	     * Sets the formatted PAN for this field.
	     *
	     * @param {string} text A formatted PAN.
	     */
	
	  }, {
	    key: 'setText',
	    value: function setText(text) {
	      if (this._masked) {
	        this._unmaskedText = text;
	        text = this.cardMask();
	      }
	      _get(Object.getPrototypeOf(CardTextField.prototype), 'setText', this).call(this, text);
	    }
	
	    /**
	     * Called by our superclass, used to implement card masking.
	     *
	     * @private
	     */
	
	  }, {
	    key: 'textFieldDidEndEditing',
	    value: function textFieldDidEndEditing() {
	      this._editing = false;
	      this._syncMask();
	    }
	
	    /**
	     * Called by our superclass, used to implement card masking.
	     *
	     * @private
	     */
	
	  }, {
	    key: 'textFieldDidBeginEditing',
	    value: function textFieldDidBeginEditing() {
	      this._editing = true;
	      this._syncMask();
	    }
	
	    /**
	     * Enables masking if it is not already enabled.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_enableMasking',
	    value: function _enableMasking() {
	      if (!this._masked) {
	        this._unmaskedText = this.text();
	        this._masked = true;
	        this.setText(this._unmaskedText);
	      }
	    }
	
	    /**
	     * Disables masking if it is currently enabled.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_disableMasking',
	    value: function _disableMasking() {
	      if (this._masked) {
	        this._masked = false;
	        this.setText(this._unmaskedText);
	        this._unmaskedText = null;
	      }
	    }
	
	    /**
	     * Enables or disables masking based on the mask settings.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_syncMask',
	    value: function _syncMask() {
	      if (this.cardMaskStrategy() === CardMaskStrategy.DoneEditing) {
	        if (this._editing) {
	          this._disableMasking();
	        } else {
	          this._enableMasking();
	        }
	      }
	    }
	
	    /**
	     * Enum for card mask strategies.
	     *
	     * @readonly
	     * @enum {number}
	     */
	
	  }], [{
	    key: 'CardMaskStrategy',
	    get: function get() {
	      return CardMaskStrategy;
	    }
	  }]);
	
	  return CardTextField;
	}(_text_field2.default);
	
	exports.default = CardTextField;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _formatter = __webpack_require__(259);
	
	var _formatter2 = _interopRequireDefault(_formatter);
	
	var _undo_manager = __webpack_require__(263);
	
	var _undo_manager2 = _interopRequireDefault(_undo_manager);
	
	var _utils = __webpack_require__(264);
	
	var _caret = __webpack_require__(265);
	
	var _caret2 = _interopRequireDefault(_caret);
	
	var _inputSim = __webpack_require__(266);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _installCaret = (0, _caret2.default)();
	
	var getCaret = _installCaret.getCaret;
	var setCaret = _installCaret.setCaret;
	
	/**
	 * Simulates input behavior.
	 *
	 * @external InputSim
	 * @see https://github.com/iamJoeTaylor/input-sim
	 */
	
	/**
	 * TextField is the simplest input and the base for more complex
	 * types to inherit.
	 *
	 * @extends external:InputSim.Input
	 */
	
	var TextField = function (_Input) {
	  _inherits(TextField, _Input);
	
	  /**
	   * Sets up the initial properties of the TextField and
	   * sets  up the event listeners
	   *
	   * @param {HTMLElement} element
	   * @param {Formatter} formatter
	   */
	
	  function TextField(element, formatter) {
	    _classCallCheck(this, TextField);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextField).call(this));
	
	    var caret = getCaret(element);
	    if (typeof element.get === 'function') {
	      console.warn('DEPRECATION: FieldKit.TextField instances should no longer be ' + 'created with a jQuery-wrapped element.');
	      element = element.get(0);
	    }
	    _this.element = element;
	    _this._formatter = formatter;
	    _this._enabled = true;
	    _this._manualCaret = { start: 0, end: 0 };
	    _this._placeholder = null;
	    _this._disabledPlaceholder = null;
	    _this._focusedPlaceholder = null;
	    _this._unfocusedPlaceholder = null;
	    _this._isDirty = false;
	    _this._valueOnFocus = '';
	    _this._currentValue = '';
	    // Make sure textDidChange fires while the value is correct
	    _this._needsKeyUpTextDidChangeTrigger = false;
	    _this._blur = (0, _utils.bind)(_this._blur, _this);
	    _this._focus = (0, _utils.bind)(_this._focus, _this);
	    _this._click = (0, _utils.bind)(_this._click, _this);
	    _this._paste = (0, _utils.bind)(_this._paste, _this);
	    _this._keyUp = (0, _utils.bind)(_this._keyUp, _this);
	    _this._keyPress = (0, _utils.bind)(_this._keyPress, _this);
	    _this._keyDown = (0, _utils.bind)(_this._keyDown, _this);
	    if (element['field-kit-text-field']) {
	      throw new Error('already attached a TextField to this element');
	    } else {
	      element['field-kit-text-field'] = _this;
	    }
	    element.addEventListener('keydown', _this._keyDown);
	    element.addEventListener('keypress', _this._keyPress);
	    element.addEventListener('keyup', _this._keyUp);
	    element.addEventListener('click', _this._click);
	    element.addEventListener('paste', _this._paste);
	    element.addEventListener('focus', _this._focus);
	    element.addEventListener('blur', _this._blur);
	
	    if (!element.getAttribute('autocapitalize')) {
	      element.setAttribute('autocapitalize', 'off');
	    }
	
	    var window = element.ownerDocument.defaultView;
	
	    /**
	     * Fixes caret bug (Android) that caused the input
	     * to place inserted characters in the wrong place
	     * Expected: 1234 5678|  =>  1234 5678 9|
	     * Bug: 1234 5678|  =>  1234 5679| 8
	     *
	     * @private
	     */
	    _this._needsManualCaret = window.navigator.userAgent.toLowerCase().indexOf('android') > -1;
	
	    _this.setText(element.value);
	
	    _this.setSelectedRange({
	      start: caret.start,
	      length: caret.end - caret.start
	    });
	    return _this;
	  }
	
	  /**
	   * **** Public Events ****
	   */
	
	  /**
	   * Called when the user has changed the text of the field. Can be used in
	   * subclasses to perform actions suitable for this event.
	   *
	   * @private
	   */
	
	
	  _createClass(TextField, [{
	    key: 'textDidChange',
	    value: function textDidChange() {}
	
	    /**
	     * Called when the user has in some way declared that they are done editing,
	     * such as leaving the field or perhaps pressing enter. Can be used in
	     * subclasses to perform actions suitable for this event.
	     *
	     * @private
	     */
	
	  }, {
	    key: 'textFieldDidEndEditing',
	    value: function textFieldDidEndEditing() {}
	
	    /**
	     * Performs actions necessary for beginning editing.
	     *
	     * @private
	     */
	
	  }, {
	    key: 'textFieldDidBeginEditing',
	    value: function textFieldDidBeginEditing() {}
	
	    /**
	     * **** Private Events ****
	     */
	
	    /**
	     * Performs actions necessary for text change.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_textDidChange',
	    value: function _textDidChange() {
	      var delegate = this._delegate;
	      this.textDidChange();
	      if (delegate && typeof delegate.textDidChange === 'function') {
	        delegate.textDidChange(this);
	      }
	
	      // manually fire the HTML5 input event
	      this._fireEvent('input');
	    }
	
	    /**
	     * Performs actions necessary for ending editing.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_textFieldDidEndEditing',
	    value: function _textFieldDidEndEditing() {
	      var delegate = this._delegate;
	      this.textFieldDidEndEditing();
	      if (delegate && typeof delegate.textFieldDidEndEditing === 'function') {
	        delegate.textFieldDidEndEditing(this);
	      }
	
	      // manually fire the HTML5 change event, only when a change has been made since focus
	      if (this._isDirty && this._valueOnFocus !== this.element.value) {
	        this._fireEvent('change');
	      }
	
	      // reset the dirty property
	      this._isDirty = false;
	      this._valueOnFocus = '';
	    }
	
	    /**
	     * Performs actions necessary for beginning editing.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_textFieldDidBeginEditing',
	    value: function _textFieldDidBeginEditing() {
	      var delegate = this._delegate;
	      this.textFieldDidBeginEditing();
	      if (delegate && typeof delegate.textFieldDidBeginEditing === 'function') {
	        delegate.textFieldDidBeginEditing(this);
	      }
	    }
	
	    /**
	     * **** Public Methods ****
	     */
	
	    /**
	     * Gets the current delegate for this text field.
	     *
	     * @returns {TextFieldDelegate}
	     */
	
	  }, {
	    key: 'delegate',
	    value: function delegate() {
	      return this._delegate;
	    }
	
	    /**
	     * Sets the current delegate for this text field.
	     *
	     * @param {TextFieldDelegate} delegate
	     */
	
	  }, {
	    key: 'setDelegate',
	    value: function setDelegate(delegate) {
	      this._delegate = delegate;
	    }
	
	    /**
	     * Tears down FieldKit
	     */
	
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      var element = this.element;
	      element.removeEventListener('keydown', this._keyDown);
	      element.removeEventListener('keypress', this._keyPress);
	      element.removeEventListener('keyup', this._keyUp);
	      element.removeEventListener('click', this._click);
	      element.removeEventListener('paste', this._paste);
	      element.removeEventListener('focus', this._focus);
	      element.removeEventListener('blur', this._blur);
	      delete element['field-kit-text-field'];
	    }
	
	    /**
	     * Gets the current formatter. Formatters are used to translate between text
	     * and value properties of the field.
	     *
	     * @returns {Formatter}
	     */
	
	  }, {
	    key: 'formatter',
	    value: function formatter() {
	      if (!this._formatter) {
	        this._formatter = new _formatter2.default();
	        var maximumLengthString = this.element.getAttribute('maxlength');
	        if (maximumLengthString !== undefined && maximumLengthString !== null) {
	          this._formatter.maximumLength = parseInt(maximumLengthString, 10);
	        }
	      }
	
	      return this._formatter;
	    }
	
	    /**
	     * Sets the current formatter.
	     *
	     * @param {Formatter} formatter
	     */
	
	  }, {
	    key: 'setFormatter',
	    value: function setFormatter(formatter) {
	      var value = this.value();
	      this._formatter = formatter;
	      this.setValue(value);
	    }
	
	    /**
	     * Builds a change instance and formats the change to see if it's valid
	     *
	     * @param   {object} current
	     * @param   {object} proposed
	     * @returns {?object} false if change doesn't have changes or change isn't valid. Change object if it is.
	     */
	
	  }, {
	    key: 'hasChangesAndIsValid',
	    value: function hasChangesAndIsValid(current, proposed) {
	      var _this2 = this;
	
	      var change = new TextFieldStateChange(this);
	      var error = function error(errorType) {
	        var delegate = _this2.delegate();
	        if (delegate) {
	          if (typeof delegate.textFieldDidFailToValidateChange === 'function') {
	            delegate.textFieldDidFailToValidateChange(_this2, change, errorType);
	          }
	        }
	      };
	      change.current = { text: current.text, selectedRange: current.selectedRange };
	      change.proposed = { text: proposed.text, selectedRange: proposed.selectedRange };
	      if (change.hasChanges() && this.formatter().isChangeValid(change, error)) {
	        return change;
	      }
	      return null;
	    }
	
	    /**
	     * Handles a key event could be trying to end editing.
	     *
	     */
	
	  }, {
	    key: 'insertNewline',
	    value: function insertNewline() {
	      this._textFieldDidEndEditing();
	      this._didEndEditingButKeptFocus = true;
	    }
	
	    /**
	     * Debug support
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'inspect',
	    value: function inspect() {
	      return '#<TextField text="' + this.text() + '">';
	    }
	
	    /**
	     * Replaces the current selection with text from the given pasteboard.
	     *
	     * @param {DataTransfer} pasteboard
	     */
	
	  }, {
	    key: 'readSelectionFromPasteboard',
	    value: function readSelectionFromPasteboard(pasteboard) {
	      var range = void 0,
	          text = void 0;
	      text = pasteboard.getData('Text');
	      this.replaceSelection(text);
	      range = this.selectedRange();
	      range.start += range.length;
	      range.length = 0;
	      this.setSelectedRange(range);
	    }
	
	    /**
	     * Checks changes after invoking the passed function for validity and rolls
	     * them back if the changes turned out to be invalid.
	     *
	     * @returns {Object} whatever object `callback` returns
	     */
	
	  }, {
	    key: 'rollbackInvalidChanges',
	    value: function rollbackInvalidChanges(callback) {
	      var result = null;
	      var errorType = null;
	      var change = TextFieldStateChange.build(this, function () {
	        return result = callback();
	      });
	      var error = function error(type) {
	        errorType = type;
	      };
	      if (change.hasChanges()) {
	        var formatter = this.formatter();
	        if (formatter && typeof formatter.isChangeValid === 'function') {
	          if (!this._isDirty) {
	            this._valueOnFocus = change.current.text || '';
	            this._isDirty = true;
	          }
	          if (formatter.isChangeValid(change, error)) {
	            change.recomputeDiff();
	            this.setText(change.proposed.text);
	            this.setSelectedRange(change.proposed.selectedRange);
	          } else {
	            var delegate = this.delegate();
	            if (delegate) {
	              if (typeof delegate.textFieldDidFailToValidateChange === 'function') {
	                delegate.textFieldDidFailToValidateChange(this, change, errorType);
	              }
	            }
	            this.setText(change.current.text);
	            this.setSelectedRange(change.current.selectedRange);
	            return result;
	          }
	        }
	        if (change.inserted.text.length || change.deleted.text.length) {
	          this.undoManager().proxyFor(this)._applyChangeFromUndoManager(change);
	          this._textDidChange();
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Gets the object value. This is the value that should be considered the
	     * 'real' value of the field.
	     *
	     * @returns {Object}
	     */
	
	  }, {
	    key: 'value',
	    value: function value() {
	      var _this3 = this;
	
	      var text = this.text();
	      var delegate = this.delegate();
	      var formatter = this.formatter();
	      if (!formatter) {
	        return text;
	      }
	
	      return formatter.parse(text, function (errorType) {
	        if (delegate) {
	          if (typeof delegate.textFieldDidFailToParseString === 'function') {
	            delegate.textFieldDidFailToParseString(_this3, text, errorType);
	          }
	        }
	      });
	    }
	
	    /**
	     * Sets the object value of the field.
	     *
	     * @param {string} value
	     */
	
	  }, {
	    key: 'setValue',
	    value: function setValue(value) {
	      if (this._formatter) {
	        value = this._formatter.format(value);
	      }
	      this.setText('' + value);
	    }
	
	    /**
	     * **** InputSim Overrides ****
	     */
	
	    /**
	     * Gets the formatted text value. This is the same as the value of the
	     * underlying input element.
	     *
	     * @augments external:InputSim.Input#text
	     * @returns {string}
	     */
	
	  }, {
	    key: 'text',
	    value: function text() {
	      return this.element.value;
	    }
	
	    /**
	     * Sets the formatted text value. This generally should not be used. Instead,
	     * use the value setter.
	     *
	     * @augments external:InputSim.Input#setText
	     * @param {string} text
	     */
	
	  }, {
	    key: 'setText',
	    value: function setText(text) {
	      this.element.value = text;
	      this._currentValue = text;
	    }
	
	    /**
	     * Gets the range of the current selection.
	     *
	     * @augments external:InputSim.Input#selectedRange
	     * @returns {Object} {start: number, length: number}
	     */
	
	  }, {
	    key: 'selectedRange',
	    value: function selectedRange() {
	      var caret = this._needsManualCaret ? this._manualCaret : getCaret(this.element);
	
	      return {
	        start: caret.start,
	        length: caret.end - caret.start
	      };
	    }
	
	    /**
	     * Sets the range of the current selection and the selection affinity.
	     *
	     * @augments external:InputSim.Input#setSelectedRangeWithAffinity
	     * @param {{start: number, length: number}} range
	     * @param {Affinity} affinity
	     */
	
	  }, {
	    key: 'setSelectedRangeWithAffinity',
	    value: function setSelectedRangeWithAffinity(range, affinity) {
	      var newRange = _get(Object.getPrototypeOf(TextField.prototype), 'setSelectedRangeWithAffinity', this).call(this, range, affinity);
	      var caret = {
	        start: newRange.start,
	        end: newRange.start + newRange.length
	      };
	      this._manualCaret = caret;
	      setCaret(this.element, caret.start, caret.end);
	      this.selectionAffinity = range.length === 0 ? null : affinity;
	    }
	
	    /**
	     * **** Undo Support ****
	     */
	
	    /**
	     * Gets whether this text field records undo actions with its undo manager.
	     *
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'allowsUndo',
	    value: function allowsUndo() {
	      return this._allowsUndo;
	    }
	
	    /**
	     * Sets whether this text field records undo actions with its undo manager.
	     *
	     * @param {boolean} allowsUndo
	     */
	
	  }, {
	    key: 'setAllowsUndo',
	    value: function setAllowsUndo(allowsUndo) {
	      this._allowsUndo = allowsUndo;
	    }
	
	    /**
	     * Triggers a redo in the underlying UndoManager, if applicable.
	     *
	     * @param {Event} event
	     */
	
	  }, {
	    key: 'redo',
	    value: function redo(event) {
	      if (this.undoManager().canRedo()) {
	        this.undoManager().redo();
	      }
	      event.preventDefault();
	    }
	
	    /**
	     * Triggers an undo in the underlying UndoManager, if applicable.
	     *
	     * @param {Event} event
	     */
	
	  }, {
	    key: 'undo',
	    value: function undo(event) {
	      if (this.undoManager().canUndo()) {
	        this.undoManager().undo();
	      }
	      event.preventDefault();
	    }
	
	    /**
	     * Gets the UndoManager for this text field.
	     *
	     * @returns {UndoManager}
	     */
	
	  }, {
	    key: 'undoManager',
	    value: function undoManager() {
	      return this._undoManager || (this._undoManager = new _undo_manager2.default());
	    }
	
	    /**
	     * **** Enabled/disabled support *****
	     */
	
	    /**
	     * Removes focus from this field if it has focus.
	     */
	
	  }, {
	    key: 'becomeFirstResponder',
	    value: function becomeFirstResponder() {
	      var _this4 = this;
	
	      this.element.focus();
	      this.rollbackInvalidChanges(function () {
	        _this4.element.select();
	        _this4._syncPlaceholder();
	      });
	    }
	
	    /**
	     * Determines whether this field has focus.
	     *
	     * @returns {boolean} true if this field has focus
	     */
	
	  }, {
	    key: 'hasFocus',
	    value: function hasFocus() {
	      return this.element.ownerDocument.activeElement === this.element;
	    }
	
	    /**
	     * Determines whether this field is enabled or disabled.
	     *
	     * @returns {boolean} true if this field is enabled
	     */
	
	  }, {
	    key: 'isEnabled',
	    value: function isEnabled() {
	      return this._enabled;
	    }
	
	    /**
	     * Sets whether this text field is enabled
	     * and syncs the placeholder to match
	     *
	     * @param {boolean} enabled
	     */
	
	  }, {
	    key: 'setEnabled',
	    value: function setEnabled(enabled) {
	      this._enabled = enabled;
	      this._syncPlaceholder();
	    }
	
	    /**
	     * Removes focus from this field if it has focus.
	     *
	     * @param {Event} event
	     */
	
	  }, {
	    key: 'resignFirstResponder',
	    value: function resignFirstResponder(event) {
	      if (event !== undefined && event !== null) {
	        event.preventDefault();
	      }
	      this.element.blur();
	      this._syncPlaceholder();
	    }
	
	    /*
	     * **** Placeholder support ****
	     */
	
	    /**
	     * Gets the disabled placeholder if one
	     * has been set.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'disabledPlaceholder',
	    value: function disabledPlaceholder() {
	      return this._disabledPlaceholder;
	    }
	
	    /**
	     * Sets the disabled placeholder.
	     *
	     * @param {string} disabledPlaceholder
	     */
	
	  }, {
	    key: 'setDisabledPlaceholder',
	    value: function setDisabledPlaceholder(disabledPlaceholder) {
	      this._disabledPlaceholder = disabledPlaceholder;
	      this._syncPlaceholder();
	    }
	
	    /**
	     * Gets the focused placeholder if one
	     * has been set.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'focusedPlaceholder',
	    value: function focusedPlaceholder() {
	      return this._focusedPlaceholder;
	    }
	
	    /**
	     * Sets the focused placeholder.
	     *
	     * @param {string} focusedPlaceholder
	     */
	
	  }, {
	    key: 'setFocusedPlaceholder',
	    value: function setFocusedPlaceholder(focusedPlaceholder) {
	      this._focusedPlaceholder = focusedPlaceholder;
	      this._syncPlaceholder();
	    }
	
	    /**
	     * Gets the placeholder if one has
	     * been set.
	     *
	     * @TODO Does this do anything?
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'placeholder',
	    value: function placeholder() {
	      return this._placeholder;
	    }
	
	    /**
	     * Sets the placeholder.
	     *
	     * @param {string} placeholder
	     */
	
	  }, {
	    key: 'setPlaceholder',
	    value: function setPlaceholder(placeholder) {
	      this._placeholder = placeholder;
	      this.element.setAttribute('placeholder', this._placeholder);
	    }
	
	    /**
	     * Gets the unfocused placeholder if one
	     * has been set.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'unfocusedPlaceholder',
	    value: function unfocusedPlaceholder() {
	      return this._unfocusedPlaceholder;
	    }
	
	    /**
	     * Sets the unfocused placeholder.
	     *
	     * @param {string} unfocusedPlaceholder
	     */
	
	  }, {
	    key: 'setUnfocusedPlaceholder',
	    value: function setUnfocusedPlaceholder(unfocusedPlaceholder) {
	      this._unfocusedPlaceholder = unfocusedPlaceholder;
	      this._syncPlaceholder();
	    }
	
	    /**
	     * **** Private Methods ****
	     */
	
	    /**
	     * Applies the given change as an undo/redo.
	     *
	     * @param {Object} change object with current and proposed properties
	     * @private
	     */
	
	  }, {
	    key: '_applyChangeFromUndoManager',
	    value: function _applyChangeFromUndoManager(change) {
	      this.undoManager().proxyFor(this)._applyChangeFromUndoManager(change);
	
	      if (this.undoManager().isUndoing()) {
	        this.setText(change.current.text);
	        this.setSelectedRange(change.current.selectedRange);
	      } else {
	        this.setText(change.proposed.text);
	        this.setSelectedRange(change.proposed.selectedRange);
	      }
	
	      this._textDidChange();
	    }
	
	    /**
	     * Handles clicks by resetting the selection affinity.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_click',
	    value: function _click() {
	      this._manualCaret = getCaret(this.element);
	      this._selectedRange = {
	        start: this._manualCaret.start,
	        length: this._manualCaret.end - this._manualCaret.start
	      };
	      this.selectionAffinity = null;
	    }
	
	    /**
	     * Fires event on the element
	     *
	     * @param {string} eventType
	     * @private
	     */
	
	  }, {
	    key: '_fireEvent',
	    value: function _fireEvent(eventType) {
	      var document = this.element.ownerDocument;
	      var window = document.defaultView;
	      if (typeof window.CustomEvent === 'function') {
	        this.element.dispatchEvent(new window.CustomEvent(eventType, {}));
	      } else {
	        var event = document.createEvent('Event');
	        event.initEvent(eventType, false, false);
	        this.element.dispatchEvent(event);
	      }
	    }
	
	    /**
	     * Handles gaining focus. This method delegates to other methods, and syncs
	     * the placeholder appropriately.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_focus',
	    value: function _focus() {
	      this._textFieldDidBeginEditing();
	      this._syncPlaceholder();
	    }
	
	    /**
	     * Handles losing focus. This method delegates to other methods, and syncs the
	     * placeholder appropriately.
	     *
	     * @private
	     */
	
	  }, {
	    key: '_blur',
	    value: function _blur() {
	      this._textFieldDidEndEditing();
	      this._syncPlaceholder();
	    }
	
	    /**
	     * Handles keyDown events. This method essentially just delegates to other,
	     * more semantic, methods based on the modifier keys and the pressed key of the
	     * event.
	     *
	     * @param {Event} event
	     * @private
	     */
	
	  }, {
	    key: '_keyDown',
	    value: function _keyDown(event) {
	      var _this5 = this;
	
	      if (this._didEndEditingButKeptFocus) {
	        this._textFieldDidBeginEditing();
	        this._didEndEditingButKeptFocus = false;
	      }
	
	      var action = this._bindings.actionForEvent(event);
	      if (action) {
	        switch (action) {
	          case 'undo':
	          case 'redo':
	            this[action](event);
	            break;
	
	          default:
	            this.rollbackInvalidChanges(function () {
	              return _this5[action](event);
	            });
	            break;
	        }
	      }
	    }
	
	    /**
	     * Handles inserting characters based on the typed key for normal keyboards.
	     *
	     * NOTE: Does not fire on some versions of Android, in which case we handle
	     * changes in _keyUp instead.
	     *
	     * @param {Event} event
	     * @private
	     */
	
	  }, {
	    key: '_keyPress',
	    value: function _keyPress(event) {
	      var _this6 = this;
	
	      var keyCode = event.keyCode;
	      if (!event.metaKey && !event.ctrlKey && keyCode !== _inputSim.KEYS.ENTER && keyCode !== _inputSim.KEYS.TAB && keyCode !== _inputSim.KEYS.BACKSPACE) {
	        if (event.charCode !== 0) {
	          (function () {
	            var newText = String.fromCharCode(event.charCode || event.keyCode);
	
	            _this6._processChange({
	              currentText: _this6.text(),
	              proposedText: (0, _utils.replaceStringSelection)(newText, _this6.text(), _this6.selectedRange()),
	              onSuccess: function onSuccess(change, changeTriggeredFormatting) {
	                if (!changeTriggeredFormatting && event instanceof KeyboardEvent) {
	                  // HACK(JoeTaylor) Use Browser's native input when using the formatter
	                  // would not make a difference https://code.google.com/p/chromium/issues/detail?id=32865
	                  if (!_this6._isDirty) {
	                    _this6._valueOnFocus = change.current.text || '';
	                    _this6._isDirty = true;
	                  }
	                  _this6.undoManager().proxyFor(_this6)._applyChangeFromUndoManager(change);
	                  _this6._manualCaret = {
	                    start: change.proposed.selectedRange.start,
	                    end: change.proposed.selectedRange.start + change.proposed.selectedRange.length
	                  };
	                  _this6._needsKeyUpTextDidChangeTrigger = true;
	                } else {
	                  event.preventDefault();
	                  _this6.rollbackInvalidChanges(function () {
	                    return _this6.insertText(newText);
	                  });
	                }
	                _this6._currentValue = change.proposed.text;
	              },
	              onFail: function onFail() {
	                event.preventDefault();
	                _this6.rollbackInvalidChanges(function () {
	                  return _this6.insertText(newText);
	                });
	              }
	            });
	          })();
	        } else {
	          event.preventDefault();
	        }
	      }
	    }
	
	    /**
	     * Handles keyup events. On Some Android we need to do all input processing
	     * here because no other information comes in.
	     *
	     * @param {Event} event
	     * @private
	     */
	
	  }, {
	    key: '_keyUp',
	    value: function _keyUp(event) {
	      var _this7 = this;
	
	      if (this._needsKeyUpTextDidChangeTrigger) {
	        this._textDidChange();
	        this._needsKeyUpTextDidChangeTrigger = false;
	      }
	      var keyCode = event.keyCode;
	      // NOTE: Certain Androids on Chrome always return 229
	      // https://code.google.com/p/chromium/issues/detail?id=118639
	      if (keyCode === 229) {
	        (function () {
	          // Text has already been changed at this point, so we check the previous text
	          // to determine whether we need to undo the change.
	          var previousText = _this7._currentValue || '';
	          _this7._processChange({
	            currentText: previousText,
	            proposedText: _this7.text(),
	            onSuccess: function onSuccess(change, changeTriggeredFormatting) {
	              if (changeTriggeredFormatting) {
	                var newText = change.proposed.text;
	                _this7.setSelectedRange(change.proposed.selectedRange);
	                _this7.setText(newText);
	              }
	              if (!_this7._isDirty) {
	                _this7._valueOnFocus = change.current.text || '';
	                _this7._isDirty = true;
	              }
	              _this7.undoManager().proxyFor(_this7)._applyChangeFromUndoManager(change);
	              _this7._textDidChange();
	              _this7._currentValue = change.proposed.text;
	            },
	            onFail: function onFail() {
	              // Need to rollback the letter input in the Keyup event because it is not valid,
	              // so we set text to the previous state (as collected from the UndoManager).
	              _this7.setText(previousText);
	            }
	          });
	        })();
	      } else {
	        this.rollbackInvalidChanges(function () {
	          if (event.keyCode === _inputSim.KEYS.TAB) {
	            _this7.selectAll(event);
	          }
	        });
	      }
	    }
	
	    /**
	     * Checks if a change is valid and calls `onSuccess` if so,
	     * and `onFail` if not.
	     *
	     * @param {object} options
	     * @param {string} options.currentText
	     * @param {string} options.proposedText
	     * @param {function} options.onSuccess
	     * @param {function=} options.onFail
	     * @private
	     */
	
	  }, {
	    key: '_processChange',
	    value: function _processChange(_ref) {
	      var currentText = _ref.currentText;
	      var proposedText = _ref.proposedText;
	      var onSuccess = _ref.onSuccess;
	      var _ref$onFail = _ref.onFail;
	      var onFail = _ref$onFail === undefined ? function () {} : _ref$onFail;
	
	      var current = {
	        text: currentText,
	        selectedRange: this.selectedRange()
	      };
	      var proposed = {
	        text: proposedText,
	        selectedRange: { start: current.selectedRange.start + 1, length: 0 }
	      };
	      var change = this.hasChangesAndIsValid(current, proposed);
	      var changeTriggeredFormatting = change && (change.proposed.text !== proposed.text || change.proposed.selectedRange.start !== proposed.selectedRange.start || change.proposed.selectedRange.length !== proposed.selectedRange.length);
	
	      if (change) {
	        onSuccess(change, changeTriggeredFormatting);
	      } else {
	        onFail();
	      }
	    }
	
	    /**
	     * Handles paste events.
	     *
	     * @param {Event} event
	     * @private
	     */
	
	  }, {
	    key: '_paste',
	    value: function _paste(event) {
	      var _this8 = this;
	
	      event.preventDefault();
	      this.rollbackInvalidChanges(function () {
	        _this8.readSelectionFromPasteboard(event.clipboardData);
	      });
	    }
	
	    /**
	     * @private
	     */
	
	  }, {
	    key: '_syncPlaceholder',
	    value: function _syncPlaceholder() {
	      if (!this._enabled) {
	        var disabledPlaceholder = this._disabledPlaceholder;
	        if (disabledPlaceholder !== undefined && disabledPlaceholder !== null) {
	          this.setPlaceholder(disabledPlaceholder);
	        }
	      } else if (this.hasFocus()) {
	        var focusedPlaceholder = this._focusedPlaceholder;
	        if (focusedPlaceholder !== undefined && focusedPlaceholder !== null) {
	          this.setPlaceholder(focusedPlaceholder);
	        }
	      } else {
	        var unfocusedPlaceholder = this._unfocusedPlaceholder;
	        if (unfocusedPlaceholder !== undefined && unfocusedPlaceholder !== null) {
	          this.setPlaceholder(unfocusedPlaceholder);
	        }
	      }
	    }
	  }]);
	
	  return TextField;
	}(_inputSim.Input);
	
	/**
	 * Helps calculate the changes after an event on a FieldKit.TextField.
	 *
	 * @private
	 */
	
	
	var TextFieldStateChange = function () {
	  /**
	   * @param {TextField} field
	   */
	
	  function TextFieldStateChange(field) {
	    _classCallCheck(this, TextFieldStateChange);
	
	    this.field = field;
	  }
	
	  /**
	   * Determines whether this field has changes.
	   *
	   * @returns {boolean} true if either the current text doesn't match the proposed text
	   *    or the current selection range doesn't match the proposed selection range
	   */
	
	
	  _createClass(TextFieldStateChange, [{
	    key: 'hasChanges',
	    value: function hasChanges() {
	      this.recomputeDiff();
	      return this.current.text !== this.proposed.text || this.current.selectedRange.start !== this.proposed.selectedRange.start || this.current.selectedRange.length !== this.proposed.selectedRange.length;
	    }
	
	    /**
	     * Updates {TextFieldStateChange} inserted and {TextFieldStateChange} deleted
	     * based on proposed and current
	     */
	
	  }, {
	    key: 'recomputeDiff',
	    value: function recomputeDiff() {
	      if (this.proposed.text !== this.current.text) {
	        var ctext = this.current.text;
	        var ptext = this.proposed.text;
	        var sharedPrefixLength = 0;
	        var sharedSuffixLength = 0;
	        var minTextLength = Math.min(ctext.length, ptext.length);
	        var i = void 0;
	
	        for (i = 0; i < minTextLength; i++) {
	          if (ptext[i] === ctext[i]) {
	            sharedPrefixLength = i + 1;
	          } else {
	            break;
	          }
	        }
	
	        for (i = 0; i < minTextLength - sharedPrefixLength; i++) {
	          if (ptext[ptext.length - 1 - i] === ctext[ctext.length - 1 - i]) {
	            sharedSuffixLength = i + 1;
	          } else {
	            break;
	          }
	        }
	
	        var inserted = {
	          start: sharedPrefixLength,
	          end: ptext.length - sharedSuffixLength
	        };
	        var deleted = {
	          start: sharedPrefixLength,
	          end: ctext.length - sharedSuffixLength
	        };
	        inserted.text = ptext.substring(inserted.start, inserted.end);
	        deleted.text = ctext.substring(deleted.start, deleted.end);
	        this.inserted = inserted;
	        this.deleted = deleted;
	      } else {
	        this.inserted = {
	          start: this.proposed.selectedRange.start,
	          end: this.proposed.selectedRange.start + this.proposed.selectedRange.length,
	          text: ''
	        };
	        this.deleted = {
	          start: this.current.selectedRange.start,
	          end: this.current.selectedRange.start + this.current.selectedRange.length,
	          text: ''
	        };
	      }
	    }
	  }]);
	
	  return TextFieldStateChange;
	}();
	
	/**
	 * Builds a new {TextFieldStateChange} that will allow you to
	 * compute differences, and see the current vs proposed changes.
	 *
	 * @param {TextField} field
	 * @param {Function} callback called when you want changes to the field
	 *    take place. Current will be calculated before this callback.
	 *    Proposed will be calculated after this callback.
	 *
	 * @returns {Object} change object with current and proposed properties
	 */
	
	
	TextFieldStateChange.build = function (field, callback) {
	  var change = new this(field);
	  change.current = {
	    text: field.text(),
	    selectedRange: field.selectedRange()
	  };
	  callback();
	  change.proposed = {
	    text: field.text(),
	    selectedRange: field.selectedRange()
	  };
	  change.recomputeDiff();
	  return change;
	};
	
	exports.default = TextField;

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _utils = __webpack_require__(264);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * UndoManager is a general-purpose recorder of operations for undo and redo.
	 *
	 * Registering an undo action is done by specifying the changed object, along
	 * with a method to invoke to revert its state and the arguments for that
	 * method. When performing undo an UndoManager saves the operations reverted so
	 * that you can redo the undos.
	 */
	
	var UndoManager = function () {
	  function UndoManager() {
	    _classCallCheck(this, UndoManager);
	
	    /** @private */
	    this._undos = [];
	    /** @private */
	    this._redos = [];
	    /** @private */
	    this._isUndoing = false;
	    /** @private */
	    this._isRedoing = false;
	  }
	
	  /**
	   * Determines whether there are any undo actions on the stack.
	   *
	   * @returns {boolean}
	   */
	
	
	  _createClass(UndoManager, [{
	    key: 'canUndo',
	    value: function canUndo() {
	      return this._undos.length !== 0;
	    }
	
	    /**
	     * Determines whether there are any redo actions on the stack.
	     *
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'canRedo',
	    value: function canRedo() {
	      return this._redos.length !== 0;
	    }
	
	    /**
	     * Indicates whether or not this manager is currently processing an undo.
	     *
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isUndoing',
	    value: function isUndoing() {
	      return this._isUndoing;
	    }
	
	    /**
	     * Indicates whether or not this manager is currently processing a redo.
	     *
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isRedoing',
	    value: function isRedoing() {
	      return this._isRedoing;
	    }
	
	    /**
	     * Manually registers an simple undo action with the given args.
	     *
	     * If this undo manager is currently undoing then this will register a redo
	     * action instead. If this undo manager is neither undoing or redoing then the
	     * redo stack will be cleared.
	     *
	     * @param {Object} target call `selector` on this object
	     * @param {string} selector the method name to call on `target`
	     * @param {...Object} args arguments to pass when calling `selector` on `target`
	     */
	
	  }, {
	    key: 'registerUndo',
	    value: function registerUndo(target, selector) {
	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }
	
	      if (this._isUndoing) {
	        this._appendRedo.apply(this, [target, selector].concat(args));
	      } else {
	        if (!this._isRedoing) {
	          this._redos.length = 0;
	        }
	        this._appendUndo.apply(this, [target, selector].concat(args));
	      }
	    }
	
	    /**
	     * Appends an undo action to the internal stack.
	     *
	     * @param {Object} target call `selector` on this object
	     * @param {string} selector the method name to call on `target`
	     * @param {...Object} args arguments to pass when calling `selector` on `target`
	     * @private
	     */
	
	  }, {
	    key: '_appendUndo',
	    value: function _appendUndo(target, selector) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }
	
	      this._undos.push({
	        target: target,
	        selector: selector,
	        args: args
	      });
	    }
	
	    /**
	     * Appends a redo action to the internal stack.
	     *
	     * @param {Object} target call `selector` on this object
	     * @param {string} selector the method name to call on `target`
	     * @param {...Object} args arguments to pass when calling `selector` on `target`
	     * @private
	     */
	
	  }, {
	    key: '_appendRedo',
	    value: function _appendRedo(target, selector) {
	      for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
	        args[_key3 - 2] = arguments[_key3];
	      }
	
	      this._redos.push({
	        target: target,
	        selector: selector,
	        args: args
	      });
	    }
	
	    /**
	     * Performs the top-most undo action on the stack.
	     *
	     * @throws {Error} Raises an error if there are no available undo actions.
	     */
	
	  }, {
	    key: 'undo',
	    value: function undo() {
	      if (!this.canUndo()) {
	        throw new Error('there are no registered undos');
	      }
	      var data = this._undos.pop();
	      var target = data.target;
	      var selector = data.selector;
	      var args = data.args;
	      this._isUndoing = true;
	      target[selector].apply(target, args);
	      this._isUndoing = false;
	    }
	
	    /**
	     * Performs the top-most redo action on the stack.
	     *
	     * @throws {Error} Raises an error if there are no available redo actions.
	     */
	
	  }, {
	    key: 'redo',
	    value: function redo() {
	      if (!this.canRedo()) {
	        throw new Error('there are no registered redos');
	      }
	      var data = this._redos.pop();
	      var target = data.target;
	      var selector = data.selector;
	      var args = data.args;
	      this._isRedoing = true;
	      target[selector].apply(target, args);
	      this._isRedoing = false;
	    }
	
	    /**
	     * Returns a proxy object based on target that will register undo/redo actions
	     * by calling methods on the proxy.
	     *
	     * @example
	     *     setSize(size) {
	     *       this.undoManager.proxyFor(this).setSize(this._size);
	     *       this._size = size;
	     *     }
	     *
	     * @param {Object} target call `selector` on this object
	     * @returns {Object}
	     */
	
	  }, {
	    key: 'proxyFor',
	    value: function proxyFor(target) {
	      var proxy = {};
	      var self = this;
	
	      function proxyMethod(selector) {
	        return function () {
	          for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	            args[_key4] = arguments[_key4];
	          }
	
	          self.registerUndo.apply(self, [target, selector].concat(args));
	        };
	      }
	
	      (0, _utils.getAllPropertyNames)(target).forEach(function (selector) {
	        // don't trigger anything that has a getter
	        if ((0, _utils.hasGetter)(target, selector)) {
	          return;
	        }
	
	        // don't try to proxy properties that aren't functions
	        if (typeof target[selector] !== 'function') {
	          return;
	        }
	
	        // set up a proxy function to register an undo
	        proxy[selector] = proxyMethod(selector);
	      });
	
	      return proxy;
	    }
	  }]);
	
	  return UndoManager;
	}();
	
	exports.default = UndoManager;

/***/ },
/* 264 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isDigits = isDigits;
	exports.startsWith = startsWith;
	exports.endsWith = endsWith;
	exports.zpad = zpad;
	exports.zpad2 = zpad2;
	exports.bind = bind;
	exports.replaceStringSelection = replaceStringSelection;
	exports.forEach = forEach;
	exports.hasGetter = hasGetter;
	exports.getAllPropertyNames = getAllPropertyNames;
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	/**
	 * @const
	 * @private
	 */
	var DIGITS_PATTERN = /^\d*$/;
	
	/**
	 * @const
	 * @private
	 */
	var SURROUNDING_SPACE_PATTERN = /(^\s+|\s+$)/;
	
	/**
	 * @param {string} string
	 * @returns {boolean}
	 */
	function isDigits(string) {
	  return DIGITS_PATTERN.test(string);
	}
	
	/**
	 * @param {string} prefix
	 * @param {string} string
	 * @returns {boolean}
	 */
	function startsWith(prefix, string) {
	  return string.slice(0, prefix.length) === prefix;
	}
	
	/**
	 * @param {string} suffix
	 * @param {string} string
	 * @returns {boolean}
	 */
	function endsWith(suffix, string) {
	  return string.slice(string.length - suffix.length) === suffix;
	}
	
	/**
	 * @param {string} string
	 * @returns {string}
	 */
	var trim = exports.trim = typeof ''.trim === 'function' ? function (string) {
	  return string.trim();
	} : function (string) {
	  return string.replace(SURROUNDING_SPACE_PATTERN, '');
	};
	
	/**
	 * Will pad n with `0` up until length.
	 *
	 * @example
	 *     zpad(16, '1234');
	 *     // => 0000000000001234
	 *
	 * @param {number} length
	 * @param {(string|number)} n
	 * @returns {string}
	 */
	function zpad(length, n) {
	  var result = '' + n;
	  while (result.length < length) {
	    result = '0' + result;
	  }
	  return result;
	}
	
	/**
	 * Will pad n with `0` up until length is 2.
	 *
	 * @example
	 *     zpad2('2');
	 *     // => 02
	 *
	 * @param {(string|number)} n
	 * @returns {string}
	 */
	function zpad2(n) {
	  return zpad(2, n);
	}
	
	/**
	 * PhantomJS 1.9 does not have Function.bind.
	 *
	 * @param {Function} fn
	 * @param {*} context
	 * @returns {*}
	 */
	function bind(fn, context) {
	  return fn.bind(context);
	}
	
	if (!Function.prototype.bind) {
	  Function.prototype.bind = function (context) {
	    for (var _len = arguments.length, prependedArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      prependedArgs[_key - 1] = arguments[_key];
	    }
	
	    var self = this;
	    return function () {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      return self.apply(context, prependedArgs.concat(args));
	    };
	  };
	}
	
	/**
	 * Replaces the characters within the selection with given text.
	 *
	 * @example
	 *     // 12|34567|8
	 *     replaceStringSelection('12345678', '00', { start: 2, length: 5 });
	 *     // 12|00|8
	 *
	 * @param   {string} replacement
	 * @param   {string} text
	 * @param   {object} {start: number, length: number}
	 * @returns {string}
	 */
	function replaceStringSelection(replacement, text, range) {
	  var end = range.start + range.length;
	  return text.substring(0, range.start) + replacement + text.substring(end);
	}
	
	var hasOwnProp = Object.prototype.hasOwnProperty;
	/**
	 * @param {*} iterable
	 * @param {Function} iterator
	 */
	function forEach(iterable, iterator) {
	  if (iterable && typeof iterable.forEach === 'function') {
	    iterable.forEach(iterator);
	  } else if ({}.toString.call(iterable) === '[object Array]') {
	    for (var i = 0, l = iterable.length; i < l; i++) {
	      iterator.call(null, iterable[i], i, iterable);
	    }
	  } else {
	    for (var key in iterable) {
	      if (hasOwnProp.call(iterable, key)) {
	        iterator.call(null, iterable[key], key, iterable);
	      }
	    }
	  }
	}
	
	var getOwnPropertyNames = function () {
	  var getOwnPropertyNames = Object.getOwnPropertyNames;
	
	  try {
	    Object.getOwnPropertyNames({}, 'sq');
	  } catch (e) {
	    // IE 8
	    getOwnPropertyNames = function getOwnPropertyNames(object) {
	      var result = [];
	      for (var key in object) {
	        if (hasOwnProp.call(object, key)) {
	          result.push(key);
	        }
	      }
	      return result;
	    };
	  }
	
	  return getOwnPropertyNames;
	}();
	
	var getPrototypeOf = Object.getPrototypeOf || function (object) {
	  return object.__proto__;
	};
	/**
	 * @param {Object} object
	 * @param {string} property
	 * @returns {boolean}
	 */
	function hasGetter(object, property) {
	  // Skip if getOwnPropertyDescriptor throws (IE8)
	  try {
	    Object.getOwnPropertyDescriptor({}, 'sq');
	  } catch (e) {
	    return false;
	  }
	
	  var descriptor = void 0;
	
	  if (object && object.constructor && object.constructor.prototype) {
	    descriptor = Object.getOwnPropertyDescriptor(object.constructor.prototype, property);
	  }
	
	  if (!descriptor) {
	    descriptor = Object.getOwnPropertyDescriptor(object, property);
	  }
	
	  if (descriptor && descriptor.get) {
	    return true;
	  } else {
	    return false;
	  }
	}
	
	/**
	 * @param {Object} object
	 * @returns {?string[]}
	 */
	function getAllPropertyNames(object) {
	  if (object === null || object === undefined) {
	    return [];
	  }
	
	  var result = getOwnPropertyNames(object);
	
	  var prototype = object.constructor && object.constructor.prototype;
	  while (prototype) {
	    result.push.apply(result, _toConsumableArray(getOwnPropertyNames(prototype)));
	    prototype = getPrototypeOf(prototype);
	  }
	
	  return result;
	}

/***/ },
/* 265 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = installCaret;
	function installCaret() {
	  var _document = arguments.length <= 0 || arguments[0] === undefined ? document : arguments[0];
	
	  var getCaret = void 0;
	  var setCaret = void 0;
	
	  if (!_document) {
	    throw new Error('Caret does not have access to document');
	  } else if ('selectionStart' in _document.createElement('input')) {
	    getCaret = function getCaret(element) {
	      return {
	        start: element.selectionStart,
	        end: element.selectionEnd
	      };
	    };
	    setCaret = function setCaret(element, start, end) {
	      element.selectionStart = start;
	      element.selectionEnd = end;
	    };
	  } else if (_document.selection) {
	    getCaret = function getCaret(element) {
	      var selection = _document.selection;
	      var value = element.value;
	      var range = selection.createRange().duplicate();
	
	      range.moveEnd('character', value.length);
	
	      var start = range.text === '' ? value.length : value.lastIndexOf(range.text);
	      range = selection.createRange().duplicate();
	
	      range.moveStart('character', -value.length);
	
	      var end = range.text.length;
	      return { start: start, end: end };
	    };
	    setCaret = function setCaret(element, start, end) {
	      var range = element.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    };
	  } else {
	    throw new Error('Caret unknown input selection capabilities');
	  }
	
	  return { getCaret: getCaret, setCaret: setCaret };
	};

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== 'undefined') {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.InputSim = mod.exports;
	  }
	})(undefined, function (exports) {
	  /*! jshint esnext:true, undef:true, unused:true */
	
	  /** @private */
	  'use strict';
	
	  Object.defineProperty(exports, '__esModule', {
	    value: true
	  });
	
	  var _createClass = function () {
	    function defineProperties(target, props) {
	      for (var i = 0; i < props.length; i++) {
	        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	      }
	    }return function (Constructor, protoProps, staticProps) {
	      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	  }();
	
	  function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	      throw new TypeError('Cannot call a class as a function');
	    }
	  }
	
	  var A = 65;
	  /** @private */
	  var Y = 89;
	  /** @private */
	  var Z = 90;
	  /** @private */
	  var ZERO = 48;
	  /** @private */
	  var NINE = 57;
	  /** @private */
	  var LEFT = 37;
	  /** @private */
	  var RIGHT = 39;
	  /** @private */
	  var UP = 38;
	  /** @private */
	  var DOWN = 40;
	  /** @private */
	  var BACKSPACE = 8;
	  /** @private */
	  var DELETE = 46;
	  /** @private */
	  var TAB = 9;
	  /** @private */
	  var ENTER = 13;
	
	  /**
	   * @namespace KEYS
	   */
	  var KEYS = {
	    A: A,
	    Y: Y,
	    Z: Z,
	    ZERO: ZERO,
	    NINE: NINE,
	    LEFT: LEFT,
	    RIGHT: RIGHT,
	    UP: UP,
	    DOWN: DOWN,
	    BACKSPACE: BACKSPACE,
	    DELETE: DELETE,
	    TAB: TAB,
	    ENTER: ENTER,
	
	    /**
	     * @param {number} keyCode
	     * @returns {boolean}
	     */
	    isDigit: function isDigit(keyCode) {
	      return ZERO <= keyCode && keyCode <= NINE;
	    },
	
	    /**
	     * Is an arrow keyCode.
	     *
	     * @param {number} keyCode
	     * @returns {boolean}
	     */
	    isDirectional: function isDirectional(keyCode) {
	      return keyCode === LEFT || keyCode === RIGHT || keyCode === UP || keyCode === DOWN;
	    }
	  };
	
	  var CTRL = 1 << 0;
	  var META = 1 << 1;
	  var ALT = 1 << 2;
	  var SHIFT = 1 << 3;
	
	  var cache = {};
	
	  /**
	   * Builds a BindingSet based on the current platform.
	   *
	   * @param {string} platform A string name of a platform (e.g. "OSX").
	   * @returns {BindingSet} keybindings appropriate for the given platform.
	   */
	  function keyBindingsForPlatform(platform) {
	    var osx = platform === 'OSX';
	    var ctrl = osx ? META : CTRL;
	
	    if (!cache[platform]) {
	      cache[platform] = build(function (bind) {
	        bind(A, ctrl, 'selectAll');
	        bind(LEFT, null, 'moveLeft');
	        bind(LEFT, ALT, 'moveWordLeft');
	        bind(LEFT, SHIFT, 'moveLeftAndModifySelection');
	        bind(LEFT, ALT | SHIFT, 'moveWordLeftAndModifySelection');
	        bind(RIGHT, null, 'moveRight');
	        bind(RIGHT, ALT, 'moveWordRight');
	        bind(RIGHT, SHIFT, 'moveRightAndModifySelection');
	        bind(RIGHT, ALT | SHIFT, 'moveWordRightAndModifySelection');
	        bind(UP, null, 'moveUp');
	        bind(UP, ALT, 'moveToBeginningOfParagraph');
	        bind(UP, SHIFT, 'moveUpAndModifySelection');
	        bind(UP, ALT | SHIFT, 'moveParagraphBackwardAndModifySelection');
	        bind(DOWN, null, 'moveDown');
	        bind(DOWN, ALT, 'moveToEndOfParagraph');
	        bind(DOWN, SHIFT, 'moveDownAndModifySelection');
	        bind(DOWN, ALT | SHIFT, 'moveParagraphForwardAndModifySelection');
	        bind(BACKSPACE, null, 'deleteBackward');
	        bind(BACKSPACE, SHIFT, 'deleteBackward');
	        bind(BACKSPACE, ALT, 'deleteWordBackward');
	        bind(BACKSPACE, ALT | SHIFT, 'deleteWordBackward');
	        bind(BACKSPACE, ctrl, 'deleteBackwardToBeginningOfLine');
	        bind(BACKSPACE, ctrl | SHIFT, 'deleteBackwardToBeginningOfLine');
	        bind(DELETE, null, 'deleteForward');
	        bind(DELETE, ALT, 'deleteWordForward');
	        bind(TAB, null, 'insertTab');
	        bind(TAB, SHIFT, 'insertBackTab');
	        bind(ENTER, null, 'insertNewline');
	        bind(Z, ctrl, 'undo');
	
	        if (osx) {
	          bind(LEFT, META, 'moveToBeginningOfLine');
	          bind(LEFT, META | SHIFT, 'moveToBeginningOfLineAndModifySelection');
	          bind(RIGHT, META, 'moveToEndOfLine');
	          bind(RIGHT, META | SHIFT, 'moveToEndOfLineAndModifySelection');
	          bind(UP, META, 'moveToBeginningOfDocument');
	          bind(UP, META | SHIFT, 'moveToBeginningOfDocumentAndModifySelection');
	          bind(DOWN, META, 'moveToEndOfDocument');
	          bind(DOWN, META | SHIFT, 'moveToEndOfDocumentAndModifySelection');
	          bind(BACKSPACE, CTRL, 'deleteBackwardByDecomposingPreviousCharacter');
	          bind(BACKSPACE, CTRL | SHIFT, 'deleteBackwardByDecomposingPreviousCharacter');
	          bind(Z, META | SHIFT, 'redo');
	        } else {
	          bind(Y, CTRL, 'redo');
	        }
	      });
	    }
	
	    return cache[platform];
	  }
	
	  function build(callback) {
	    var result = new BindingSet();
	    callback(function () {
	      return result.bind.apply(result, arguments);
	    });
	    return result;
	  }
	
	  /**
	   * @private
	   */
	
	  var BindingSet = function () {
	    function BindingSet() {
	      _classCallCheck(this, BindingSet);
	
	      this.bindings = {};
	    }
	
	    /**
	     * Enum for text direction affinity.
	     *
	     * @const
	     * @enum {number}
	     * @private
	     */
	
	    /**
	     * @param {number} keyCode
	     * @param {number} modifiers
	     * @param {string} action
	     */
	
	    _createClass(BindingSet, [{
	      key: 'bind',
	      value: function bind(keyCode, modifiers, action) {
	        if (!this.bindings[keyCode]) {
	          this.bindings[keyCode] = {};
	        }
	        this.bindings[keyCode][modifiers || 0] = action;
	      }
	
	      /**
	       * @param {Event} event
	       * @returns {?string}
	       */
	    }, {
	      key: 'actionForEvent',
	      value: function actionForEvent(event) {
	        var bindingsForKeyCode = this.bindings[event.keyCode];
	        if (bindingsForKeyCode) {
	          var modifiers = 0;
	          if (event.altKey) {
	            modifiers |= ALT;
	          }
	          if (event.ctrlKey) {
	            modifiers |= CTRL;
	          }
	          if (event.metaKey) {
	            modifiers |= META;
	          }
	          if (event.shiftKey) {
	            modifiers |= SHIFT;
	          }
	          return bindingsForKeyCode[modifiers];
	        }
	      }
	    }]);
	
	    return BindingSet;
	  }();
	
	  var Affinity = {
	    UPSTREAM: 0,
	    DOWNSTREAM: 1,
	    NONE: null
	  };
	
	  /**
	   * Tests is string passed in is a single word.
	   *
	   * @param {string} chr
	   * @returns {boolean}
	   * @private
	   */
	  function isWordChar(chr) {
	    return chr && /^\w$/.test(chr);
	  }
	
	  /**
	   * Checks if char to the left of {index} in {string}
	   * is a break (non-char).
	   *
	   * @param {string} text
	   * @param {number} index
	   * @returns {boolean}
	   * @private
	   */
	  function hasLeftWordBreakAtIndex(text, index) {
	    if (index === 0) {
	      return true;
	    } else {
	      return !isWordChar(text[index - 1]) && isWordChar(text[index]);
	    }
	  }
	
	  /**
	   * Checks if char to the right of {index} in {string}
	   * is a break (non-char).
	   *
	   * @param {string} text
	   * @param {number} index
	   * @returns {boolean}
	   * @private
	   */
	  function hasRightWordBreakAtIndex(text, index) {
	    if (index === text.length - 1) {
	      return true;
	    } else {
	      return isWordChar(text[index]) && !isWordChar(text[index + 1]);
	    }
	  }
	
	  var Input = function () {
	    /**
	      * Sets up the initial properties of the TextField and
	      * sets  up the event listeners
	      *
	      * @param {string} value
	      * @param {Object} range ({start: 0, length: 0})
	      */
	
	    function Input(value, range) {
	      _classCallCheck(this, Input);
	
	      this._value = '';
	      this._selectedRange = {
	        start: 0,
	        length: 0
	      };
	      this.shouldCancelEvents = true;
	      this.selectionAffinity = Affinity.NONE;
	
	      if (value) {
	        this.setText(value);
	      }
	      if (range) {
	        this.setSelectedRange(range);
	      }
	      this._buildKeybindings();
	    }
	
	    /**
	     * Clears all characters in the existing selection.
	     *
	     * @example
	     *     // 12|34567|8
	     *     clearSelection();
	     *     // 12|8
	     *
	     */
	
	    _createClass(Input, [{
	      key: 'clearSelection',
	      value: function clearSelection() {
	        this.replaceSelection('');
	      }
	
	      /**
	       * Deletes backward one character or clears a non-empty selection.
	       *
	       * @example
	       *
	       *     // |What's up, doc?
	       *     deleteBackward(event);
	       *     // |What's up, doc?
	       *
	       *     // What'|s up, doc?
	       *     deleteBackward(event);
	       *     // What|s up, doc?
	       *
	       *     // |What's| up, doc?
	       *     deleteBackward(event);
	       *     // | up, doc?
	       */
	    }, {
	      key: 'deleteBackward',
	      value: function deleteBackward(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        if (range.length === 0) {
	          range.start--;
	          range.length++;
	          this.setSelectedRange(range);
	        }
	        this.clearSelection();
	      }
	
	      /**
	       * Deletes backward one word or clears a non-empty selection.
	       *
	       * @example
	       *     // |What's up, doc?
	       *     deleteWordBackward(event);
	       *     // |What's up, doc?
	       *
	       *     // What'|s up, doc?
	       *     deleteWordBackward(event);
	       *     // |s up, doc?
	       *
	       *     // |What's| up, doc?
	       *     deleteWordBackward(event);
	       *     // | up, doc?
	       */
	    }, {
	      key: 'deleteWordBackward',
	      value: function deleteWordBackward(event) {
	        if (this.hasSelection()) {
	          this.deleteBackward(event);
	        } else {
	          this._handleEvent(event);
	          var range = this.selectedRange();
	          var start = this._lastWordBreakBeforeIndex(range.start);
	          range.length += range.start - start;
	          range.start = start;
	          this.setSelectedRange(range);
	          this.clearSelection();
	        }
	      }
	
	      /**
	       * Deletes backward one character, clears a non-empty selection, or decomposes
	       * an accented character to its simple form.
	       *
	       * @TODO Make this work as described.
	       *
	       * @example
	       *     // |fiancée
	       *     deleteBackwardByDecomposingPreviousCharacter(event);
	       *     // |What's up, doc?
	       *
	       *     // fianc|é|e
	       *     deleteBackwardByDecomposingPreviousCharacter(event);
	       *     // fianc|e
	       *
	       *     // fiancé|e
	       *     deleteBackwardByDecomposingPreviousCharacter(event);
	       *     // fiance|e
	       *
	       */
	    }, {
	      key: 'deleteBackwardByDecomposingPreviousCharacter',
	      value: function deleteBackwardByDecomposingPreviousCharacter(event) {
	        this.deleteBackward(event);
	      }
	
	      /**
	       * Deletes all characters before the cursor or clears a non-empty selection.
	       *
	       * @example
	       *     // The quick |brown fox.
	       *     deleteBackwardToBeginningOfLine(event);
	       *     // |brown fox.
	       *
	       *     // The |quick |brown fox.
	       *     deleteBackwardToBeginningOfLine(event);
	       *     // The brown fox.
	       *
	       */
	    }, {
	      key: 'deleteBackwardToBeginningOfLine',
	      value: function deleteBackwardToBeginningOfLine(event) {
	        if (this.hasSelection()) {
	          this.deleteBackward(event);
	        } else {
	          this._handleEvent(event);
	          var range = this.selectedRange();
	          range.length = range.start;
	          range.start = 0;
	          this.setSelectedRange(range);
	          this.clearSelection();
	        }
	      }
	
	      /**
	       * Deletes forward one character or clears a non-empty selection.
	       *
	       * @example
	       *     // What's up, doc?|
	       *     deleteForward(event);
	       *     // What's up, doc?|
	       *
	       *     // What'|s up, doc?
	       *     deleteForward(event);
	       *     // What'| up, doc?
	       *
	       *     // |What's| up, doc?
	       *     deleteForward(event);
	       *     // | up, doc?
	       *
	       */
	    }, {
	      key: 'deleteForward',
	      value: function deleteForward(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        if (range.length === 0) {
	          range.length++;
	          this.setSelectedRange(range);
	        }
	        this.clearSelection();
	      }
	
	      /**
	       * Deletes forward one word or clears a non-empty selection.
	       *
	       * @example
	       *     // What's up, doc?|
	       *     deleteWordForward(event);
	       *     // What's up, doc?|
	       *
	       *     // What's |up, doc?
	       *     deleteWordForward(event);
	       *     // What's |, doc?
	       *
	       *     // |What's| up, doc?
	       *     deleteWordForward(event);
	       *     // | up, doc?
	       */
	    }, {
	      key: 'deleteWordForward',
	      value: function deleteWordForward(event) {
	        if (this.hasSelection()) {
	          return this.deleteForward(event);
	        } else {
	          this._handleEvent(event);
	          var range = this.selectedRange();
	          var end = this._nextWordBreakAfterIndex(range.start + range.length);
	          this.setSelectedRange({
	            start: range.start,
	            length: end - range.start
	          });
	          this.clearSelection();
	        }
	      }
	    }, {
	      key: 'handleEvent',
	      value: function handleEvent(event) {
	        if (typeof event === 'undefined') {
	          throw new Error('cannot handle and event that isn\'t passed');
	        }
	        var action = this._bindings.actionForEvent(event);
	        if (action) this[action](event);
	        return action;
	      }
	
	      /**
	       * Determines whether this field has any selection.
	       *
	       * @returns {boolean} true if there is at least one character selected
	       */
	    }, {
	      key: 'hasSelection',
	      value: function hasSelection() {
	        return this.selectedRange().length !== 0;
	      }
	
	      /**
	       * Handles the back tab key.
	       *
	       */
	    }, {
	      key: 'insertBackTab',
	      value: function insertBackTab() {}
	
	      /**
	       * Handles a key event could be trying to end editing.
	       *
	       */
	    }, {
	      key: 'insertNewline',
	      value: function insertNewline() {}
	
	      /**
	       * Handles the tab key.
	       *
	       */
	    }, {
	      key: 'insertTab',
	      value: function insertTab() {}
	
	      /**
	       * Handles a event that is trying to insert a character.
	       *
	       * @param {string} text
	       */
	    }, {
	      key: 'insertText',
	      value: function insertText(text) {
	        var range;
	        if (this.hasSelection()) {
	          this.clearSelection();
	        }
	
	        this.replaceSelection(text);
	        range = this.selectedRange();
	        range.start += range.length;
	        range.length = 0;
	        this.setSelectedRange(range);
	      }
	
	      /**
	       * Moves the cursor up, which because this is a single-line text field, means
	       * moving to the beginning of the value.
	       *
	       * @example
	       *     // Hey guys|
	       *     moveUp(event);
	       *     // |Hey guys
	       *
	       *     // Hey |guys|
	       *     moveUp(event);
	       *     // |Hey guys
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveUp',
	      value: function moveUp(event) {
	        this._handleEvent(event);
	        this.setSelectedRange({
	          start: 0,
	          length: 0
	        });
	      }
	
	      /**
	       * Moves the cursor up to the beginning of the current paragraph, which because
	       * this is a single-line text field, means moving to the beginning of the
	       * value.
	       *
	       * @example
	       *     // Hey guys|
	       *     moveToBeginningOfParagraph(event)
	       *     // |Hey guys
	       *
	       *     // Hey |guys|
	       *     moveToBeginningOfParagraph(event)
	       *     // |Hey guys
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToBeginningOfParagraph',
	      value: function moveToBeginningOfParagraph(event) {
	        this.moveUp(event);
	      }
	
	      /**
	       * Moves the cursor up, keeping the current anchor point and extending the
	       * selection to the beginning as moveUp would.
	       *
	       * @example
	       *     // rightward selections are shrunk
	       *     // Hey guys, |where> are you?
	       *     moveUpAndModifySelection(event);
	       *     // <Hey guys, |where are you?
	       *
	       *     // leftward selections are extended
	       *     // Hey guys, <where| are you?
	       *     moveUpAndModifySelection(event);
	       *     // <Hey guys, where| are you?
	       *
	       *     // neutral selections are extended
	       *     // Hey guys, |where| are you?
	       *     moveUpAndModifySelection(event);
	       *     // <Hey guys, where| are you?
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveUpAndModifySelection',
	      value: function moveUpAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	          case Affinity.NONE:
	            // 12<34 56|78  =>  <1234 56|78
	            range.length += range.start;
	            range.start = 0;
	            break;
	          case Affinity.DOWNSTREAM:
	            // 12|34 56>78   =>   <12|34 5678
	            range.length = range.start;
	            range.start = 0;
	            break;
	        }
	        this.setSelectedRangeWithAffinity(range, Affinity.UPSTREAM);
	      }
	
	      /**
	       * Moves the free end of the selection to the beginning of the paragraph, or
	       * since this is a single-line text field to the beginning of the line.
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveParagraphBackwardAndModifySelection',
	      value: function moveParagraphBackwardAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	          case Affinity.NONE:
	            // 12<34 56|78  =>  <1234 56|78
	            range.length += range.start;
	            range.start = 0;
	            break;
	          case Affinity.DOWNSTREAM:
	            // 12|34 56>78  =>  12|34 5678
	            range.length = 0;
	            break;
	        }
	        this.setSelectedRangeWithAffinity(range, Affinity.UPSTREAM);
	      }
	
	      /**
	       * Moves the cursor to the beginning of the document.
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToBeginningOfDocument',
	      value: function moveToBeginningOfDocument(event) {
	        // Since we only support a single line this is just an alias.
	        this.moveToBeginningOfLine(event);
	      }
	
	      /**
	       * Moves the selection start to the beginning of the document.
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToBeginningOfDocumentAndModifySelection',
	      value: function moveToBeginningOfDocumentAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        range.length += range.start;
	        range.start = 0;
	        this.setSelectedRangeWithAffinity(range, Affinity.UPSTREAM);
	      }
	
	      /**
	       * Moves the cursor down, which because this is a single-line text field, means
	       * moving to the end of the value.
	       *
	       * @example
	       *     // Hey |guys
	       *     moveDown(event)
	       *     // Hey guys|
	       *
	       *     // |Hey| guys
	       *     moveDown(event)
	       *     // Hey guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveDown',
	      value: function moveDown(event) {
	        this._handleEvent(event);
	        // 12|34 56|78  =>  1234 5678|
	        var range = {
	          start: this.text().length,
	          length: 0
	        };
	        this.setSelectedRangeWithAffinity(range, Affinity.NONE);
	      }
	
	      /**
	       * Moves the cursor up to the end of the current paragraph, which because this
	       * is a single-line text field, means moving to the end of the value.
	       *
	       * @example
	       *     // |Hey guys
	       *     moveToEndOfParagraph(event)
	       *     // Hey guys|
	       *
	       *     // Hey |guys|
	       *     moveToEndOfParagraph(event)
	       *     // Hey guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToEndOfParagraph',
	      value: function moveToEndOfParagraph(event) {
	        this.moveDown(event);
	      }
	
	      /**
	       * Moves the cursor down, keeping the current anchor point and extending the
	       * selection to the end as moveDown would.
	       *
	       * @example
	       *     // leftward selections are shrunk
	       *     // Hey guys, <where| are you?
	       *     moveDownAndModifySelection(event)
	       *     // Hey guys, where| are you?>
	       *
	       *     // rightward selections are extended
	       *     // Hey guys, |where> are you?
	       *     moveDownAndModifySelection(event)
	       *     // Hey guys, |where are you?>
	       *
	       *     // neutral selections are extended
	       *     // Hey guys, |where| are you?
	       *     moveDownAndModifySelection(event)
	       *     // Hey guys, |where are you?>
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveDownAndModifySelection',
	      value: function moveDownAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        var end = this.text().length;
	        if (this.selectionAffinity === Affinity.UPSTREAM) {
	          range.start += range.length;
	        }
	        range.length = end - range.start;
	        this.setSelectedRangeWithAffinity(range, Affinity.DOWNSTREAM);
	      }
	
	      /**
	       * Moves the free end of the selection to the end of the paragraph, or since
	       * this is a single-line text field to the end of the line.
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveParagraphForwardAndModifySelection',
	      value: function moveParagraphForwardAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.DOWNSTREAM:
	          case Affinity.NONE:
	            // 12|34 56>78  =>  12|34 5678>
	            range.length = this.text().length - range.start;
	            break;
	          case Affinity.UPSTREAM:
	            // 12<34 56|78  =>  12|34 5678
	            range.start += range.length;
	            range.length = 0;
	            break;
	        }
	        this.setSelectedRangeWithAffinity(range, Affinity.DOWNSTREAM);
	      }
	
	      /**
	       * Moves the cursor to the end of the document.
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToEndOfDocument',
	      value: function moveToEndOfDocument(event) {
	        // Since we only support a single line this is just an alias.
	        this.moveToEndOfLine(event);
	      }
	
	      /**
	       * Moves the selection end to the end of the document.
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToEndOfDocumentAndModifySelection',
	      value: function moveToEndOfDocumentAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        range.length = this.text().length - range.start;
	        this.setSelectedRangeWithAffinity(range, Affinity.DOWNSTREAM);
	      }
	
	      /**
	       * Moves the cursor to the left, counting selections as a thing to move past.
	       *
	       * @example
	       *     // no selection just moves the cursor left
	       *     // Hey guys|
	       *     moveLeft(event)
	       *     // Hey guy|s
	       *
	       *     // selections are removed
	       *     // Hey |guys|
	       *     moveLeft(event)
	       *     // Hey |guys
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveLeft',
	      value: function moveLeft(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        if (range.length !== 0) {
	          range.length = 0;
	        } else {
	          range.start--;
	        }
	        this.setSelectedRangeWithAffinity(range, Affinity.NONE);
	      }
	
	      /**
	       * Moves the free end of the selection one to the left.
	       *
	       * @example
	       *     // no selection just selects to the left
	       *     // Hey guys|
	       *     moveLeftAndModifySelection(event)
	       *     // Hey guy<s|
	       *
	       *     // left selections are extended
	       *     // Hey <guys|
	       *     moveLeftAndModifySelection(event)
	       *     // Hey< guys|
	       *
	       *     // right selections are shrunk
	       *     // Hey |guys>
	       *     moveLeftAndModifySelection(event)
	       *     // Hey |guy>s
	       *
	       *     // neutral selections are extended
	       *     // Hey |guys|
	       *     moveLeftAndModifySelection(event)
	       *     //Hey< guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveLeftAndModifySelection',
	      value: function moveLeftAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	          case Affinity.NONE:
	            this.selectionAffinity = Affinity.UPSTREAM;
	            range.start--;
	            range.length++;
	            break;
	          case Affinity.DOWNSTREAM:
	            range.length--;
	            break;
	        }
	        this.setSelectedRange(range);
	      }
	
	      /**
	       * Moves the cursor left until the start of a word is found.
	       *
	       * @example
	       *     // no selection just moves the cursor left
	       *     // Hey guys|
	       *     moveWordLeft(event)
	       *     // Hey |guys
	       *
	       *     // selections are removed
	       *     // Hey |guys|
	       *     moveWordLeft(event)
	       *     // |Hey guys
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveWordLeft',
	      value: function moveWordLeft(event) {
	        this._handleEvent(event);
	        var index = this._lastWordBreakBeforeIndex(this.selectedRange().start - 1);
	        this.setSelectedRange({ start: index, length: 0 });
	      }
	
	      /**
	       * Moves the free end of the current selection to the beginning of the previous
	       * word.
	       *
	       * @example
	       *     // no selection just selects to the left
	       *     // Hey guys|
	       *     moveWordLeftAndModifySelection(event)
	       *     // Hey <guys|
	       *
	       *     // left selections are extended
	       *     // Hey <guys|
	       *     moveWordLeftAndModifySelection(event)
	       *     // <Hey guys|
	       *
	       *     // right selections are shrunk
	       *     // |Hey guys>
	       *     moveWordLeftAndModifySelection(event)
	       *     // |Hey >guys
	       *
	       *     // neutral selections are extended
	       *     // Hey |guys|
	       *     moveWordLeftAndModifySelection(event)
	       *     // <Hey guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveWordLeftAndModifySelection',
	      value: function moveWordLeftAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	          case Affinity.NONE:
	            this.selectionAffinity = Affinity.UPSTREAM;
	            var start = this._lastWordBreakBeforeIndex(range.start - 1);
	            range.length += range.start - start;
	            range.start = start;
	            break;
	          case Affinity.DOWNSTREAM:
	            var end = this._lastWordBreakBeforeIndex(range.start + range.length);
	            if (end < range.start) {
	              end = range.start;
	            }
	            range.length -= range.start + range.length - end;
	            break;
	        }
	        this.setSelectedRange(range);
	      }
	
	      /**
	       * Moves the cursor to the beginning of the current line.
	       *
	       * @example
	       *     // Hey guys, where| are ya?
	       *     moveToBeginningOfLine(event)
	       *     // |Hey guys, where are ya?
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToBeginningOfLine',
	      value: function moveToBeginningOfLine(event) {
	        this._handleEvent(event);
	        this.setSelectedRange({ start: 0, length: 0 });
	      }
	
	      /**
	       * Select from the free end of the selection to the beginning of line.
	       *
	       * @example
	       *     // Hey guys, where| are ya?
	       *     moveToBeginningOfLineAndModifySelection(event)
	       *     // <Hey guys, where| are ya?
	       *
	       *     // Hey guys, where| are> ya?
	       *     moveToBeginningOfLineAndModifySelection(event)
	       *     // <Hey guys, where are| ya?
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToBeginningOfLineAndModifySelection',
	      value: function moveToBeginningOfLineAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        range.length += range.start;
	        range.start = 0;
	        this.setSelectedRangeWithAffinity(range, Affinity.UPSTREAM);
	      }
	
	      /**
	       * Moves the cursor to the right, counting selections as a thing to move past.
	       *
	       * @example
	       *     // no selection just moves the cursor right
	       *     // Hey guy|s
	       *     moveRight(event)
	       *     // Hey guys|
	       *
	       *     // selections are removed
	       *     // Hey |guys|
	       *     moveRight(event)
	       *     // Hey guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveRight',
	      value: function moveRight(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        if (range.length !== 0) {
	          range.start += range.length;
	          range.length = 0;
	        } else {
	          range.start++;
	        }
	        this.setSelectedRangeWithAffinity(range, Affinity.NONE);
	      }
	
	      /**
	       * Moves the free end of the selection one to the right.
	       *
	       * @example
	       *     // no selection just selects to the right
	       *     // Hey |guys
	       *     moveRightAndModifySelection(event)
	       *     // Hey |g>uys
	       *
	       *     // right selections are extended
	       *     // Hey |gu>ys
	       *     moveRightAndModifySelection(event)
	       *     // Hey |guy>s
	       *
	       *     // left selections are shrunk
	       *     // <Hey |guys
	       *     moveRightAndModifySelection(event)
	       *     // H<ey |guys
	       *
	       *     // neutral selections are extended
	       *     // |Hey| guys
	       *     moveRightAndModifySelection(event)
	       *     // |Hey >guys
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveRightAndModifySelection',
	      value: function moveRightAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	            range.start++;
	            range.length--;
	            break;
	          case Affinity.DOWNSTREAM:
	          case Affinity.NONE:
	            this.selectionAffinity = Affinity.DOWNSTREAM;
	            range.length++;
	            break;
	        }
	        this.setSelectedRange(range);
	      }
	
	      /**
	       * Moves the cursor right until the end of a word is found.
	       *
	       * @example
	       *     // no selection just moves the cursor right
	       *     // Hey| guys
	       *     moveWordRight(event)
	       *     // Hey guys|
	       *
	       *     // selections are removed
	       *     // |Hey| guys
	       *     moveWordRight(event)
	       *     // Hey guys|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveWordRight',
	      value: function moveWordRight(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        var index = this._nextWordBreakAfterIndex(range.start + range.length);
	        this.setSelectedRange({ start: index, length: 0 });
	      }
	
	      /**
	       * Moves the free end of the current selection to the next end of word.
	       *
	       * @example
	       *     // no selection just selects to the right
	       *     // Hey |guys
	       *     moveWordRightAndModifySelection(event)
	       *     // Hey |guys|
	       *
	       *     // right selections are extended
	       *     // Hey |g>uys
	       *     moveWordRightAndModifySelection(event)
	       *     // Hey |guys>
	       *
	       *     // left selections are shrunk
	       *     // He<y |guys
	       *     moveWordRightAndModifySelection(event)
	       *     // Hey< |guys
	       *
	       *     // neutral selections are extended
	       *     // He|y |guys
	       *     moveWordRightAndModifySelection(event)
	       *     // He|y guys>
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveWordRightAndModifySelection',
	      value: function moveWordRightAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        var start = range.start;
	        var end = range.start + range.length;
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	            start = Math.min(this._nextWordBreakAfterIndex(start), end);
	            break;
	          case Affinity.DOWNSTREAM:
	          case Affinity.NONE:
	            this.selectionAffinity = Affinity.DOWNSTREAM;
	            end = this._nextWordBreakAfterIndex(range.start + range.length);
	            break;
	        }
	        this.setSelectedRange({ start: start, length: end - start });
	      }
	
	      /**
	       * Moves the cursor to the end of the current line.
	       *
	       * @example
	       *     // Hey guys, where| are ya?
	       *     moveToEndOfLine(event)
	       *     // |Hey guys, where are ya?
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToEndOfLine',
	      value: function moveToEndOfLine(event) {
	        this._handleEvent(event);
	        this.setSelectedRange({ start: this.text().length, length: 0 });
	      }
	
	      /**
	       * Moves the free end of the selection to the end of the current line.
	       *
	       * @example
	       *     // Hey guys, where| are ya?
	       *     moveToEndOfLineAndModifySelection(event)
	       *     // Hey guys, where| are ya?>
	       *
	       *     // Hey guys, <where| are ya?
	       *     moveToEndOfLineAndModifySelection(event)
	       *     // Hey guys, |where are ya?>
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'moveToEndOfLineAndModifySelection',
	      value: function moveToEndOfLineAndModifySelection(event) {
	        this._handleEvent(event);
	        var range = this.selectedRange();
	        range.length = this.text().length - range.start;
	        this.setSelectedRangeWithAffinity(range, Affinity.DOWNSTREAM);
	      }
	
	      /**
	       * Replaces the characters within the selection with given text.
	       *
	       * @example
	       *     // 12|34567|8
	       *     replaceSelection('00')
	       *     // 12|00|8
	       *
	       * @param {string} replacement
	       */
	    }, {
	      key: 'replaceSelection',
	      value: function replaceSelection(replacement) {
	        var range = this.selectedRange();
	        var end = range.start + range.length;
	        var text = this.text();
	        text = text.substring(0, range.start) + replacement + text.substring(end);
	        range.length = replacement.length;
	        this.setText(text);
	        this.setSelectedRangeWithAffinity(range, Affinity.NONE);
	      }
	
	      /**
	       * Find ends of 'words' for navigational purposes.
	       *
	       * @example
	       *     // given value of '123456789' and text of '123-45-6789'
	       *     rightWordBreakIndexes()
	       *     //=> [3, 5, 9]
	       *
	       * @returns {number[]}
	       */
	    }, {
	      key: 'rightWordBreakIndexes',
	      value: function rightWordBreakIndexes() {
	        var result = [];
	        var text = this.text();
	        for (var i = 0, l = text.length; i < l; i++) {
	          if (hasRightWordBreakAtIndex(text, i)) {
	            result.push(i + 1);
	          }
	        }
	        return result;
	      }
	
	      /**
	       * Expands the selection to contain all the characters in the content.
	       *
	       * @example
	       *     // 123|45678
	       *     selectAll(event)
	       *     // |12345678|
	       *
	       * @param {Event} event
	       */
	    }, {
	      key: 'selectAll',
	      value: function selectAll(event) {
	        this._handleEvent(event);
	        this.setSelectedRangeWithAffinity({
	          start: 0,
	          length: this.text().length
	        }, Affinity.NONE);
	      }
	
	      /**
	       * Gets the object value. This is the value that should be considered the
	       * 'real' value of the field.
	       *
	       * @returns {String}
	       */
	    }, {
	      key: 'text',
	      value: function text() {
	        return this._value;
	      }
	
	      /**
	       * Sets the object value of the field.
	       *
	       * @param {string} value
	       */
	    }, {
	      key: 'setText',
	      value: function setText(value) {
	        this._value = '' + value;
	        this.setSelectedRange({
	          start: this._value.length,
	          length: 0
	        });
	      }
	
	      /**
	       * Gets the range of the current selection.
	       *
	       * @returns {Object} {start: number, length: number}
	       */
	    }, {
	      key: 'selectedRange',
	      value: function selectedRange() {
	        return this._selectedRange;
	      }
	
	      /**
	       * Sets the range of the current selection without changing the affinity.
	       * @param {Object} range ({start: 0, length: 0})
	       */
	    }, {
	      key: 'setSelectedRange',
	      value: function setSelectedRange(range) {
	        this.setSelectedRangeWithAffinity(range, this.selectionAffinity);
	      }
	
	      /**
	       * Sets the range of the current selection and the selection affinity.
	       *
	       * @param {Object} range {start: number, length: number}
	       * @param {Affinity} affinity
	       * @returns {Object} {start: 0, length: 0}
	       */
	    }, {
	      key: 'setSelectedRangeWithAffinity',
	      value: function setSelectedRangeWithAffinity(range, affinity) {
	        var min = 0;
	        var max = this.text().length;
	        var caret = {
	          start: Math.max(min, Math.min(max, range.start)),
	          end: Math.max(min, Math.min(max, range.start + range.length))
	        };
	        this._selectedRange = {
	          start: caret.start,
	          length: caret.end - caret.start
	        };
	        this.selectionAffinity = range.length === 0 ? Affinity.NONE : affinity;
	        return this._selectedRange;
	      }
	
	      /**
	       * Gets the position of the current selection's anchor point, i.e. the point
	       * that the selection extends from, if any.
	       *
	       * @returns {number}
	       */
	    }, {
	      key: 'selectionAnchor',
	      value: function selectionAnchor() {
	        var range = this.selectedRange();
	        switch (this.selectionAffinity) {
	          case Affinity.UPSTREAM:
	            return range.start + range.length;
	          case Affinity.DOWNSTREAM:
	            return range.start;
	          default:
	            return Affinity.NONE;
	        }
	      }
	
	      /**
	       * Builds the key bindings for platform
	       *
	       * @TODO: Make this better
	       * @private
	       */
	    }, {
	      key: '_buildKeybindings',
	      value: function _buildKeybindings() {
	        var osx;
	
	        if (typeof navigator !== 'undefined') {
	          osx = /^Mozilla\/[\d\.]+ \(Macintosh/.test(navigator.userAgent);
	        } else if (typeof process !== 'undefined') {
	          osx = /darwin/.test(process.platform);
	        }
	        this._bindings = keyBindingsForPlatform(osx ? 'OSX' : 'Default');
	      }
	
	      /**
	       * Handles the event based on the `shouldCancelEvents` prop.
	       *
	       * @param {Event} event
	       * @private
	       */
	    }, {
	      key: '_handleEvent',
	      value: function _handleEvent(event) {
	        if (event && this.shouldCancelEvents) {
	          event.preventDefault();
	        }
	      }
	
	      /**
	       * Finds the start of the 'word' before index.
	       *
	       * @param {number} index position at which to start looking
	       * @returns {number} index in value less than or equal to the given index
	       * @private
	       */
	    }, {
	      key: '_lastWordBreakBeforeIndex',
	      value: function _lastWordBreakBeforeIndex(index) {
	        var indexes = this._leftWordBreakIndexes();
	        var result = indexes[0];
	        for (var i = 0, l = indexes.length; i < l; i++) {
	          var wordBreakIndex = indexes[i];
	          if (index > wordBreakIndex) {
	            result = wordBreakIndex;
	          } else {
	            break;
	          }
	        }
	        return result;
	      }
	
	      /**
	       * Find starts of 'words' for navigational purposes.
	       *
	       * @example
	       *     // given value of '123456789' and text of '123-45-6789'
	       *     leftWordBreakIndexes()
	       *     // => [0, 3, 5]
	       *
	       * @returns {number[]} indexes in value of word starts.
	       * @private
	       */
	    }, {
	      key: '_leftWordBreakIndexes',
	      value: function _leftWordBreakIndexes() {
	        var result = [];
	        var text = this.text();
	        for (var i = 0, l = text.length; i < l; i++) {
	          if (hasLeftWordBreakAtIndex(text, i)) {
	            result.push(i);
	          }
	        }
	        return result;
	      }
	
	      /**
	       * Finds the end of the 'word' after index.
	       *
	       * @param {number} index position in value at which to start looking.
	       * @returns {number}
	       * @private
	       */
	    }, {
	      key: '_nextWordBreakAfterIndex',
	      value: function _nextWordBreakAfterIndex(index) {
	        var indexes = this.rightWordBreakIndexes().reverse();
	        var result = indexes[0];
	        for (var i = 0, l = indexes.length; i < l; i++) {
	          var wordBreakIndex = indexes[i];
	          if (index < wordBreakIndex) {
	            result = wordBreakIndex;
	          } else {
	            break;
	          }
	        }
	        return result;
	      }
	    }]);
	
	    return Input;
	  }();
	
	  exports.Input = Input;
	  exports.KEYS = KEYS;
	  exports.keyBindingsForPlatform = keyBindingsForPlatform;
	});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * @const
	 * @private
	 */
	var DIGITS_PATTERN = /^\d*$/;
	
	/**
	 * @extends DelimitedTextFormatter
	 */
	
	var EmployerIdentificationNumberFormatter = function (_DelimitedTextFormatt) {
	  _inherits(EmployerIdentificationNumberFormatter, _DelimitedTextFormatt);
	
	  function EmployerIdentificationNumberFormatter() {
	    _classCallCheck(this, EmployerIdentificationNumberFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(EmployerIdentificationNumberFormatter).call(this, '-'));
	
	    _this.maximumLength = 9 + 1;
	    return _this;
	  }
	
	  /**
	   * @param {number} index
	   * @returns {boolean}
	   */
	
	
	  _createClass(EmployerIdentificationNumberFormatter, [{
	    key: 'hasDelimiterAtIndex',
	    value: function hasDelimiterAtIndex(index) {
	      return index === 2;
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      if (DIGITS_PATTERN.test(change.inserted.text)) {
	        return _get(Object.getPrototypeOf(EmployerIdentificationNumberFormatter.prototype), 'isChangeValid', this).call(this, change, error);
	      } else {
	        return false;
	      }
	    }
	  }]);
	
	  return EmployerIdentificationNumberFormatter;
	}(_delimited_text_formatter2.default);
	
	exports.default = EmployerIdentificationNumberFormatter;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _text_field = __webpack_require__(262);
	
	var _text_field2 = _interopRequireDefault(_text_field);
	
	var _expiry_date_formatter = __webpack_require__(269);
	
	var _expiry_date_formatter2 = _interopRequireDefault(_expiry_date_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Adds a default formatter for expiration dates.
	 *
	 * @extends TextField
	 */
	
	var ExpiryDateField = function (_TextField) {
	  _inherits(ExpiryDateField, _TextField);
	
	  /**
	   * @param {HTMLElement} element
	   */
	
	  function ExpiryDateField(element) {
	    _classCallCheck(this, ExpiryDateField);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ExpiryDateField).call(this, element, new _expiry_date_formatter2.default()));
	  }
	
	  /**
	   * Called by our superclass, used to post-process the text.
	   *
	   * @private
	   */
	
	
	  _createClass(ExpiryDateField, [{
	    key: 'textFieldDidEndEditing',
	    value: function textFieldDidEndEditing() {
	      var value = this.value();
	      if (value) {
	        this.setText(this.formatter().format(value));
	      }
	    }
	  }]);
	
	  return ExpiryDateField;
	}(_text_field2.default);
	
	exports.default = ExpiryDateField;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	var _utils = __webpack_require__(264);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * Give this function a 2 digit year it'll return with 4.
	 *
	 * @example
	 *     interpretTwoDigitYear(15);
	 *     // => 2015
	 *     interpretTwoDigitYear(97);
	 *     // => 1997
	 * @param {number} year
	 * @returns {number}
	 * @private
	 */
	function interpretTwoDigitYear(year) {
	  var thisYear = new Date().getFullYear();
	  var thisCentury = thisYear - thisYear % 100;
	  var centuries = [thisCentury, thisCentury - 100, thisCentury + 100].sort(function (a, b) {
	    return Math.abs(thisYear - (year + a)) - Math.abs(thisYear - (year + b));
	  });
	  return year + centuries[0];
	}
	
	/**
	 * @extends DelimitedTextFormatter
	 */
	
	var ExpiryDateFormatter = function (_DelimitedTextFormatt) {
	  _inherits(ExpiryDateFormatter, _DelimitedTextFormatt);
	
	  function ExpiryDateFormatter() {
	    _classCallCheck(this, ExpiryDateFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExpiryDateFormatter).call(this, '/'));
	
	    _this.maximumLength = 5;
	    return _this;
	  }
	
	  /**
	   * @param {number} index
	   * @returns {boolean}
	   */
	
	
	  _createClass(ExpiryDateFormatter, [{
	    key: 'hasDelimiterAtIndex',
	    value: function hasDelimiterAtIndex(index) {
	      return index === 2;
	    }
	
	    /**
	     * Formats the given value by adding delimiters where needed.
	     *
	     * @param {?string} value
	     * @returns {string}
	     */
	
	  }, {
	    key: 'format',
	    value: function format(value) {
	      if (!value) {
	        return '';
	      }
	
	      var month = value.month;
	      var year = value.year;
	
	      year = year % 100;
	
	      return _get(Object.getPrototypeOf(ExpiryDateFormatter.prototype), 'format', this).call(this, (0, _utils.zpad2)(month) + (0, _utils.zpad2)(year));
	    }
	
	    /**
	     * Parses the given text
	     *
	     * @param {string} text
	     * @param {Function(string)} error
	     * @returns {?Object} { month: month, year: year }
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text, error) {
	      var monthAndYear = text.split(this.delimiter);
	      var month = monthAndYear[0];
	      var year = monthAndYear[1];
	      if (month && month.match(/^(0?[1-9]|1\d)$/) && year && year.match(/^\d\d?$/)) {
	        month = Number(month);
	        year = interpretTwoDigitYear(Number(year));
	        return { month: month, year: year };
	      } else {
	        if (typeof error === 'function') {
	          error('expiry-date-formatter.invalid-date');
	        }
	        return null;
	      }
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      if (!error) {
	        error = function error() {};
	      }
	
	      var isBackspace = change.proposed.text.length < change.current.text.length;
	      var newText = change.proposed.text;
	
	      if (change.inserted.text === this.delimiter && change.current.text === '1') {
	        newText = '01' + this.delimiter;
	      } else if (change.inserted.text.length > 0 && !/^\d$/.test(change.inserted.text)) {
	        error('expiry-date-formatter.only-digits-allowed');
	        return false;
	      } else {
	        if (isBackspace) {
	          if (change.deleted.text === this.delimiter) {
	            newText = newText[0];
	          }
	          if (newText === '0') {
	            newText = '';
	          }
	          if (change.inserted.text.length > 0 && !/^\d$/.test(change.inserted.text)) {
	            error('expiry-date-formatter.only-digits-allowed');
	            return false;
	          }
	        }
	
	        // 4| -> 04|
	        if (/^[2-9]$/.test(newText)) {
	          newText = '0' + newText;
	        }
	
	        // 1|1|/5 -> 11|/5
	        if (/^1[3-9].+$/.test(newText)) {
	          error('expiry-date-formatter.invalid-month');
	          return false;
	        }
	
	        // 15| -> 01/5|
	        if (/^1[3-9]$/.test(newText)) {
	          newText = '01' + this.delimiter + newText.slice(-1);
	        }
	
	        // Don't allow 00
	        if (newText === '00') {
	          error('expiry-date-formatter.invalid-month');
	          return false;
	        }
	
	        // 11| -> 11/
	        if (/^(0[1-9]|1[0-2])$/.test(newText)) {
	          newText += this.delimiter;
	        }
	
	        var match = newText.match(/^(\d\d)(.)(\d\d?).*$/);
	        if (match && match[2] === this.delimiter) {
	          newText = match[1] + this.delimiter + match[3];
	        }
	      }
	
	      change.proposed.text = newText;
	      change.proposed.selectedRange = { start: newText.length, length: 0 };
	
	      return true;
	    }
	  }]);
	
	  return ExpiryDateFormatter;
	}(_delimited_text_formatter2.default);
	
	exports.default = ExpiryDateFormatter;

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _formatter = __webpack_require__(259);
	
	var _formatter2 = _interopRequireDefault(_formatter);
	
	var _number_formatter_settings_formatter = __webpack_require__(271);
	
	var _number_formatter_settings_formatter2 = _interopRequireDefault(_number_formatter_settings_formatter);
	
	var _utils = __webpack_require__(264);
	
	var _stround = __webpack_require__(272);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// Style
	var NONE = 0;
	var CURRENCY = 1;
	var PERCENT = 2;
	
	var DEFAULT_LOCALE = 'en-US';
	var DEFAULT_COUNTRY = 'US';
	
	/**
	 * @param {string} locale
	 * @returns {Object} {lang: lang, country: country}
	 * @private
	 */
	function splitLocaleComponents(locale) {
	  var match = locale.match(/^([a-z][a-z])(?:[-_]([a-z][a-z]))?$/i);
	  if (match) {
	    var lang = match[1] && match[1].toLowerCase();
	    var country = match[2] && match[2].toLowerCase();
	    return { lang: lang, country: country };
	  }
	}
	
	/**
	 * This simple property getter assumes that properties will never be functions
	 * and so attempts to run those functions using the given args.
	 *
	 * @private
	 */
	function get(object, key) {
	  if (object) {
	    var value = object[key];
	    if (typeof value === 'function') {
	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }
	
	      return value.apply(undefined, args);
	    } else {
	      return value;
	    }
	  }
	}
	
	/**
	 * @param {string} string
	 * @param {string} currencySymbol
	 * @return {string}
	 * @private
	 */
	function replaceCurrencySymbol(string, currencySymbol) {
	  return string.replace(/¤/g, currencySymbol);
	}
	
	/**
	 * @param {string} string
	 * @param {string} plusSign
	 * @returns {string}
	 * @private
	 */
	function replacePlusSign(string, plusSign) {
	  return string.replace(/\+/g, plusSign);
	}
	/**
	 * @param {string} string
	 * @param {string} minusSign
	 * @returns {string}
	 * @private
	 */
	function replaceMinusSign(string, minusSign) {
	  return string.replace(/-/g, minusSign);
	}
	
	/**
	 * Formats and parses numbers. There are many configuration options for how to
	 * format numbers as strings, but for many users simply adjusting the
	 * {@link NumberFormatter#numberStyle}, {@link NumberFormatter#locale},
	 * {@link NumberFormatter#currencyCode}, and {@link NumberFormatter#countryCode}
	 * values will be sufficient. NumberFormatter natively understands how to
	 * format numbers, currencies, and percentages for a variety of locales.
	 *
	 * @example
	 *
	 *   // Configure a NumberFormatter to display currencies.
	 *   var f = new FieldKit.NumberFormatter();
	 *   f.setNumberStyle(FieldKit.NumberFormatter.Style.CURRENCY);
	 *
	 *   // Configure the current locale info.
	 *   f.setLocale('en-US');
	 *   f.setCountryCode('US');
	 *   f.setCurrencyCode('USD');
	 *
	 *   // Showing USD in US uses abbreviated currency.
	 *   f.format(6.17);  // '$6.17'
	 *
	 *   // Showing CAD in US uses fully-qualified currency.
	 *   f.setCurrencyCode('CAD');
	 *   f.format(6.17);  // 'CA$6.17'
	 *
	 *   // Showing CAD in CA again uses abbreviated currency.
	 *   f.setLocale('en-CA');
	 *   f.setCountryCode('CA');
	 *   f.format(6.17);  // '$6.17'
	 *
	 *   // Showing CAD in CA to a French speaker uses correct formatting.
	 *   f.setLocale('fr-CA');
	 *   f.format(6.17);  // '6,17 $'
	 *
	 *   // You may customize the behavior of NumberFormatter to achieve whatever
	 *   // number formatting you need using the setter methods for the various
	 *   // settings, or you can use the {@link NumberFormatter#positiveFormat} and
	 *   // {@link NumberFormatter#negativeFormat} shorthand templates.
	 *
	 *   var f = new FieldKit.NumberFormatter();
	 *
	 *   // Using this template string…
	 *   f.setPositiveFormat('¤#0.00');
	 *
	 *   // …is equivalent to this:
	 *   f.setPositivePrefix('¤');
	 *   f.setPositiveSuffix('');
	 *   f.setMinimumIntegerDigits(1);
	 *   f.setMinimumFractionDigits(2);
	 *   f.setMaximumFractionDigits(2);
	 *
	 *   // And you can determine what the template string is for however you've
	 *   // configured the NumberFormatter:
	 *   f.setUsesGroupingSeparator(true);
	 *   f.setGroupingSize(2);
	 *   f.positiveFormat(); // '¤#,#0.00'
	 *
	 * @extends Formatter
	 */
	
	var NumberFormatter = function (_Formatter) {
	  _inherits(NumberFormatter, _Formatter);
	
	  function NumberFormatter() {
	    _classCallCheck(this, NumberFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NumberFormatter).call(this));
	
	    _this.setNumberStyle(NONE);
	    return _this;
	  }
	
	  /**
	   * Gets whether this formatter will parse float number values. This value does
	   * not apply to formatting. To prevent formatting floats, set
	   * maximumFractionDigits to 0.
	   *
	   * @returns {boolean}
	   */
	
	
	  _createClass(NumberFormatter, [{
	    key: 'allowsFloats',
	    value: function allowsFloats() {
	      return this._get('allowsFloats');
	    }
	
	    /**
	     * Sets whether this formatter will parse float number values.
	     *
	     * @param {boolean} allowsFloats
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setAllowsFloats',
	    value: function setAllowsFloats(allowsFloats) {
	      this._allowsFloats = allowsFloats;
	      return this;
	    }
	
	    /**
	     * Gets whether this formatter should show the decimal separator.
	     *
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'alwaysShowsDecimalSeparator',
	    value: function alwaysShowsDecimalSeparator() {
	      return this._get('alwaysShowsDecimalSeparator');
	    }
	
	    /**
	     * Sets whether this formatter will show the decimal separator.
	     *
	     * @param {boolean} alwaysShowsDecimalSeparator
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setAlwaysShowsDecimalSeparator',
	    value: function setAlwaysShowsDecimalSeparator(alwaysShowsDecimalSeparator) {
	      this._alwaysShowsDecimalSeparator = alwaysShowsDecimalSeparator;
	      return this;
	    }
	
	    /**
	     * Gets the country code for formatter.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'countryCode',
	    value: function countryCode() {
	      return this._countryCode || DEFAULT_COUNTRY;
	    }
	
	    /**
	     * Sets the country code for formatter.
	     *
	     * @param {string} countryCode
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setCountryCode',
	    value: function setCountryCode(countryCode) {
	      this._countryCode = countryCode;
	      return this;
	    }
	
	    /**
	     * Gets the currency code for formatter.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'currencyCode',
	    value: function currencyCode() {
	      return this._get('currencyCode');
	    }
	
	    /**
	     * Sets the currency code for formatter.
	     *
	     * @param {string} currencyCode
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setCurrencyCode',
	    value: function setCurrencyCode(currencyCode) {
	      this._currencyCode = currencyCode;
	      return this;
	    }
	
	    /**
	     * Gets the currency symbol for formatter.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'currencySymbol',
	    value: function currencySymbol() {
	      if (this._shouldShowNativeCurrencySymbol()) {
	        return this._get('currencySymbol');
	      } else {
	        return this._get('internationalCurrencySymbol');
	      }
	    }
	
	    /**
	     * Sets the currency symbol for formatter.
	     *
	     * @param {string} currencySymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setCurrencySymbol',
	    value: function setCurrencySymbol(currencySymbol) {
	      this._currencySymbol = currencySymbol;
	      return this;
	    }
	
	    /**
	     * @returns {boolean}
	     * @private
	     */
	
	  }, {
	    key: '_shouldShowNativeCurrencySymbol',
	    value: function _shouldShowNativeCurrencySymbol() {
	      var regionDefaultCurrencyCode = this._regionDefaults().currencyCode;
	      if (typeof regionDefaultCurrencyCode === 'function') {
	        regionDefaultCurrencyCode = regionDefaultCurrencyCode();
	      }
	      return this.currencyCode() === regionDefaultCurrencyCode;
	    }
	
	    /**
	     * Gets the decimal separator for formatter.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'decimalSeparator',
	    value: function decimalSeparator() {
	      return this._get('decimalSeparator');
	    }
	
	    /**
	     * Sets the decimal separator for formatter.
	     *
	     * @param {string} decimalSeparator
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setDecimalSeparator',
	    value: function setDecimalSeparator(decimalSeparator) {
	      this._decimalSeparator = decimalSeparator;
	      return this;
	    }
	
	    /**
	     * Gets the number of decimal places to shift numbers before formatting.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'exponent',
	    value: function exponent() {
	      return this._get('exponent');
	    }
	
	    /**
	     * Sets the number of decimal places to shift numbers before formatting.
	     *
	     * @param exponent
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setExponent',
	    value: function setExponent(exponent) {
	      this._exponent = exponent;
	      return this;
	    }
	  }, {
	    key: 'groupingSeparator',
	    value: function groupingSeparator() {
	      return this._get('groupingSeparator');
	    }
	
	    /**
	     * @param {string} groupingSeparator
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setGroupingSeparator',
	    value: function setGroupingSeparator(groupingSeparator) {
	      this._groupingSeparator = groupingSeparator;
	      return this;
	    }
	
	    /**
	     * Gets the grouping size for formatter.
	     *
	     * @returns {number}
	     */
	
	  }, {
	    key: 'groupingSize',
	    value: function groupingSize() {
	      return this._get('groupingSize');
	    }
	
	    /**
	     * @param {number} groupingSize
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setGroupingSize',
	    value: function setGroupingSize(groupingSize) {
	      this._groupingSize = groupingSize;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'internationalCurrencySymbol',
	    value: function internationalCurrencySymbol() {
	      return this._get('internationalCurrencySymbol');
	    }
	
	    /**
	     * @param {string} internationalCurrencySymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setInternationalCurrencySymbol',
	    value: function setInternationalCurrencySymbol(internationalCurrencySymbol) {
	      this._internationalCurrencySymbol = internationalCurrencySymbol;
	      return this;
	    }
	
	    /**
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isLenient',
	    value: function isLenient() {
	      return this._lenient;
	    }
	
	    /**
	     * @param {boolean} lenient
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setLenient',
	    value: function setLenient(lenient) {
	      this._lenient = lenient;
	      return this;
	    }
	
	    /**
	     * Gets the locale identifier for which this formatter is currently
	     * configured to format strings. This setting controls default settings such
	     * as the grouping separator character, decimal separator character, placement
	     * of currency and percent symbols, etc.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'locale',
	    value: function locale() {
	      return this._locale || DEFAULT_LOCALE;
	    }
	
	    /**
	     * Sets the locale identifier used for default settings values.
	     *
	     * @see {@link NumberFormatter#locale}
	     * @param {string} locale
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setLocale',
	    value: function setLocale(locale) {
	      this._locale = locale;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'maximum',
	    value: function maximum() {
	      return this._maximum;
	    }
	
	    /**
	     * @param {number} max
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMaximum',
	    value: function setMaximum(max) {
	      this._maximum = max;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'minimum',
	    value: function minimum() {
	      return this._minimum;
	    }
	
	    /**
	     * @param {number} min
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMinimum',
	    value: function setMinimum(min) {
	      this._minimum = min;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'maximumFractionDigits',
	    value: function maximumFractionDigits() {
	      var result = this._get('maximumFractionDigits');
	      var minimumFractionDigits = this._minimumFractionDigits;
	      if (result !== null && result !== undefined && minimumFractionDigits !== null && minimumFractionDigits !== undefined && minimumFractionDigits > result) {
	        result = minimumFractionDigits;
	      }
	      return result;
	    }
	
	    /**
	     * @param {number} maximumFractionDigits
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMaximumFractionDigits',
	    value: function setMaximumFractionDigits(maximumFractionDigits) {
	      this._maximumFractionDigits = maximumFractionDigits;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'minimumFractionDigits',
	    value: function minimumFractionDigits() {
	      var result = this._get('minimumFractionDigits');
	      var maximumFractionDigits = this._maximumFractionDigits;
	      if (result !== null && result !== undefined && maximumFractionDigits !== null && maximumFractionDigits !== undefined && maximumFractionDigits < result) {
	        result = maximumFractionDigits;
	      }
	      return result;
	    }
	
	    /**
	     * @param {number} minimumFractionDigits
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMinimumFractionDigits',
	    value: function setMinimumFractionDigits(minimumFractionDigits) {
	      this._minimumFractionDigits = minimumFractionDigits;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'maximumIntegerDigits',
	    value: function maximumIntegerDigits() {
	      var result = this._get('maximumIntegerDigits');
	      var minimumIntegerDigits = this._minimumIntegerDigits;
	      if (result !== null && result !== undefined && minimumIntegerDigits !== null && minimumIntegerDigits !== undefined && minimumIntegerDigits > result) {
	        result = minimumIntegerDigits;
	      }
	      return result;
	    }
	
	    /**
	     * @param {number} maximumIntegerDigits
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMaximumIntegerDigits',
	    value: function setMaximumIntegerDigits(maximumIntegerDigits) {
	      this._maximumIntegerDigits = maximumIntegerDigits;
	      return this;
	    }
	
	    /**
	     * @returns {number}
	     */
	
	  }, {
	    key: 'minimumIntegerDigits',
	    value: function minimumIntegerDigits() {
	      var result = this._get('minimumIntegerDigits');
	      var maximumIntegerDigits = this._maximumIntegerDigits;
	      if (result !== null && result !== undefined && maximumIntegerDigits !== null && maximumIntegerDigits !== undefined && maximumIntegerDigits < result) {
	        result = maximumIntegerDigits;
	      }
	      return result;
	    }
	
	    /**
	     * @param {number} minimumIntegerDigits
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMinimumIntegerDigits',
	    value: function setMinimumIntegerDigits(minimumIntegerDigits) {
	      this._minimumIntegerDigits = minimumIntegerDigits;
	      return this;
	    }
	
	    /**
	     * Gets the minus sign used for negative numbers in some locales.
	     *
	     * @returns {?string}
	     */
	
	  }, {
	    key: 'minusSign',
	    value: function minusSign() {
	      return this._get('minusSign');
	    }
	
	    /**
	     * Sets the minus sign used for negative numbers in some locales.
	     *
	     * @param {?string} minusSign
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setMinusSign',
	    value: function setMinusSign(minusSign) {
	      this._minusSign = minusSign;
	      return this;
	    }
	
	    /**
	     * Gets the negative number format string for the current settings. For
	     * example, changing `minimumFractionDigits` from 0 to 3 would change this
	     * value from "-#" to "-#.000".
	     *
	     * @return {string}
	     */
	
	  }, {
	    key: 'negativeFormat',
	    value: function negativeFormat() {
	      return this.numberFormatFormatter().format({
	        alwaysShowsDecimalSeparator: this.alwaysShowsDecimalSeparator(),
	        groupingSize: this.groupingSize(),
	        maximumFractionDigits: this.maximumFractionDigits(),
	        minimumFractionDigits: this.minimumFractionDigits(),
	        minimumIntegerDigits: this.minimumIntegerDigits(),
	        prefix: this._get('negativePrefix'),
	        suffix: this._get('negativeSuffix'),
	        usesGroupingSeparator: this.usesGroupingSeparator()
	      });
	    }
	
	    /**
	     * Configures this number formatter according to the given format string.
	     * For most usages you should simply use
	     * {@link NumberFormatter#setPositiveFormat} and configure the negative
	     * prefix and suffix separately.
	     *
	     * @param negativeFormat
	     */
	
	  }, {
	    key: 'setNegativeFormat',
	    value: function setNegativeFormat(negativeFormat) {
	      var settings = this.numberFormatFormatter().parse(negativeFormat);
	      this.setNegativePrefix(settings.prefix);
	      this.setNegativeSuffix(settings.suffix);
	      this.setGroupingSize(settings.groupingSize);
	      this.setMaximumFractionDigits(settings.maximumFractionDigits);
	      this.setMinimumFractionDigits(settings.minimumFractionDigits);
	      this.setMinimumIntegerDigits(settings.minimumIntegerDigits);
	      this.setUsesGroupingSeparator(settings.usesGroupingSeparator);
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'negativeInfinitySymbol',
	    value: function negativeInfinitySymbol() {
	      return this._get('negativeInfinitySymbol');
	    }
	
	    /**
	     * @param {string} negativeInfinitySymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNegativeInfinitySymbol',
	    value: function setNegativeInfinitySymbol(negativeInfinitySymbol) {
	      this._negativeInfinitySymbol = negativeInfinitySymbol;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'negativePrefix',
	    value: function negativePrefix() {
	      return replaceCurrencySymbol(replaceMinusSign(this._get('negativePrefix'), this._get('minusSign')), this.currencySymbol());
	    }
	
	    /**
	     * @param {string} prefix
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNegativePrefix',
	    value: function setNegativePrefix(prefix) {
	      this._negativePrefix = prefix;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'negativeSuffix',
	    value: function negativeSuffix() {
	      return replaceCurrencySymbol(replaceMinusSign(this._get('negativeSuffix'), this._get('minusSign')), this.currencySymbol());
	    }
	
	    /**
	     * @param {string} prefix
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNegativeSuffix',
	    value: function setNegativeSuffix(prefix) {
	      this._negativeSuffix = prefix;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'notANumberSymbol',
	    value: function notANumberSymbol() {
	      return this._get('notANumberSymbol');
	    }
	
	    /**
	     * @param {string} notANumberSymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNotANumberSymbol',
	    value: function setNotANumberSymbol(notANumberSymbol) {
	      this._notANumberSymbol = notANumberSymbol;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'nullSymbol',
	    value: function nullSymbol() {
	      return this._get('nullSymbol');
	    }
	
	    /**
	     * @param {string} nullSymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNullSymbol',
	    value: function setNullSymbol(nullSymbol) {
	      this._nullSymbol = nullSymbol;
	      return this;
	    }
	
	    /**
	     * @return {NumberFormatterSettingsFormatter}
	     * @private
	     */
	
	  }, {
	    key: 'numberFormatFormatter',
	    value: function numberFormatFormatter() {
	      if (!this._numberFormatFormatter) {
	        this._numberFormatFormatter = new _number_formatter_settings_formatter2.default();
	      }
	      return this._numberFormatFormatter;
	    }
	
	    /**
	     * Gets the number style used to configure various default setting values.
	     *
	     * @returns {NumberFormatter.Style}
	     */
	
	  }, {
	    key: 'numberStyle',
	    value: function numberStyle() {
	      return this._numberStyle;
	    }
	
	    /**
	     * Sets the number style used to configure various default setting values.
	     *
	     * @param {string} numberStyle
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setNumberStyle',
	    value: function setNumberStyle(numberStyle) {
	      this._numberStyle = numberStyle;
	      switch (this._numberStyle) {
	        case NONE:
	          this._styleDefaults = StyleDefaults.NONE;
	          break;
	        case PERCENT:
	          this._styleDefaults = StyleDefaults.PERCENT;
	          break;
	        case CURRENCY:
	          this._styleDefaults = StyleDefaults.CURRENCY;
	          break;
	        default:
	          this._styleDefaults = null;
	      }
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'percentSymbol',
	    value: function percentSymbol() {
	      return this._get('percentSymbol');
	    }
	
	    /**
	     * @param {string} percentSymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setPercentSymbol',
	    value: function setPercentSymbol(percentSymbol) {
	      this._percentSymbol = percentSymbol;
	      return this;
	    }
	
	    /**
	     * Gets the plus sign used in positive numbers in some locales.
	     *
	     * @returns {string}
	     */
	
	  }, {
	    key: 'plusSign',
	    value: function plusSign() {
	      return this._get('plusSign');
	    }
	
	    /**
	     * Sets the plus sign used in positive numbers in some locales.
	     *
	     * @param {?string} plusSign
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setPlusSign',
	    value: function setPlusSign(plusSign) {
	      this._plusSign = plusSign;
	      return this;
	    }
	
	    /**
	     * Gets the positive number format string for the current settings. For
	     * example, changing `minimumFractionDigits` from 0 to 3 would change this
	     * value from "#" to "#.000".
	     *
	     * @return {string}
	     */
	
	  }, {
	    key: 'positiveFormat',
	    value: function positiveFormat() {
	      return this.numberFormatFormatter().format({
	        alwaysShowsDecimalSeparator: this.alwaysShowsDecimalSeparator(),
	        groupingSize: this.groupingSize(),
	        maximumFractionDigits: this.maximumFractionDigits(),
	        minimumFractionDigits: this.minimumFractionDigits(),
	        minimumIntegerDigits: this.minimumIntegerDigits(),
	        prefix: this._get('positivePrefix'),
	        suffix: this._get('positiveSuffix'),
	        usesGroupingSeparator: this.usesGroupingSeparator()
	      });
	    }
	
	    /**
	     * Configures this number formatter according to the given format string.
	     *
	     * @example
	     *
	     *   // Use '0' for padding, '.' for decimal separator.
	     *   formatter.setPositiveFormat('00.000');
	     *   formatter.format(2);     // '02.000'
	     *   formatter.format(-5.03); // '-05.030'
	     *   formatter.setLocale('fr-FR');
	     *   formatter.format(2);     // '02,000'
	     *
	     *   // Use '#' for maximum fraction digits.
	     *   formatter.setPositiveFormat('#.##');
	     *   formatter.format(3.456); // '3.46'
	     *
	     *   // Use '¤' as the currency placeholder.
	     *   formatter.setPositiveFormat('¤#0.00');
	     *   formatter.format(1.23); // '$1.23'
	     *   formatter.setCurrencyCode('JPY');
	     *   formatter.format(81);   // 'JP¥81.00'
	     *   formatter.setLocale('jp-JP');
	     *   formatter.format(7);   // '¥7.00'
	     *
	     *   // Use ',' for grouping separator placement.
	     *   formatter.setPositiveFormat('#,##');
	     *   formatter.format(123); // '1,23'
	     *
	     * @param positiveFormat
	     */
	
	  }, {
	    key: 'setPositiveFormat',
	    value: function setPositiveFormat(positiveFormat) {
	      var settings = this.numberFormatFormatter().parse(positiveFormat);
	      this.setPositivePrefix(settings.prefix);
	      this.setPositiveSuffix(settings.suffix);
	      this.setGroupingSize(settings.groupingSize);
	      this.setMaximumFractionDigits(settings.maximumFractionDigits);
	      this.setMinimumFractionDigits(settings.minimumFractionDigits);
	      this.setMinimumIntegerDigits(settings.minimumIntegerDigits);
	      this.setUsesGroupingSeparator(settings.usesGroupingSeparator);
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'positiveInfinitySymbol',
	    value: function positiveInfinitySymbol() {
	      return this._get('positiveInfinitySymbol');
	    }
	
	    /**
	     * @param {string} positiveInfinitySymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setPositiveInfinitySymbol',
	    value: function setPositiveInfinitySymbol(positiveInfinitySymbol) {
	      this._positiveInfinitySymbol = positiveInfinitySymbol;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'positivePrefix',
	    value: function positivePrefix() {
	      return replaceCurrencySymbol(replacePlusSign(this._get('positivePrefix'), this._get('plusSign')), this.currencySymbol());
	    }
	
	    /**
	     * @param {string} prefix
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setPositivePrefix',
	    value: function setPositivePrefix(prefix) {
	      this._positivePrefix = prefix;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'positiveSuffix',
	    value: function positiveSuffix() {
	      return replaceCurrencySymbol(replacePlusSign(this._get('positiveSuffix'), this._get('plusSign')), this.currencySymbol());
	    }
	
	    /**
	     * @param {string} prefix
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setPositiveSuffix',
	    value: function setPositiveSuffix(prefix) {
	      this._positiveSuffix = prefix;
	      return this;
	    }
	
	    /**
	     * @returns {Function}
	     */
	
	  }, {
	    key: 'roundingMode',
	    value: function roundingMode() {
	      return this._get('roundingMode');
	    }
	
	    /**
	     * @param {Function} roundingMode
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setRoundingMode',
	    value: function setRoundingMode(roundingMode) {
	      this._roundingMode = roundingMode;
	      return this;
	    }
	
	    /**
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'usesGroupingSeparator',
	    value: function usesGroupingSeparator() {
	      return this._get('usesGroupingSeparator');
	    }
	
	    /**
	     * @param {boolean} usesGroupingSeparator
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setUsesGroupingSeparator',
	    value: function setUsesGroupingSeparator(usesGroupingSeparator) {
	      this._usesGroupingSeparator = usesGroupingSeparator;
	      return this;
	    }
	
	    /**
	     * @returns {string}
	     */
	
	  }, {
	    key: 'zeroSymbol',
	    value: function zeroSymbol() {
	      return this._get('zeroSymbol');
	    }
	
	    /**
	     * @param {string} zeroSymbol
	     * @returns {NumberFormatter}
	     */
	
	  }, {
	    key: 'setZeroSymbol',
	    value: function setZeroSymbol(zeroSymbol) {
	      this._zeroSymbol = zeroSymbol;
	      return this;
	    }
	
	    /**
	     * @param {string} attr
	     * @returns {*}
	     * @private
	     */
	
	  }, {
	    key: '_get',
	    value: function _get(attr) {
	      var value = this['_' + attr];
	      if (value !== null && value !== undefined) {
	        return value;
	      }
	      var styleDefaults = this._styleDefaults;
	      var localeDefaults = this._localeDefaults();
	      var regionDefaults = this._regionDefaults();
	      value = get(styleDefaults, attr, this, localeDefaults);
	      if (value !== null && value !== undefined) {
	        return value;
	      }
	      value = get(localeDefaults, attr, this, styleDefaults);
	      if (value !== null && value !== undefined) {
	        return value;
	      }
	      value = get(regionDefaults, attr, this, styleDefaults);
	      if (value !== null && value !== undefined) {
	        return value;
	      }
	      value = get(this._currencyDefaults(), attr, this, localeDefaults);
	      if (value !== null && value !== undefined) {
	        return value;
	      }
	      return null;
	    }
	
	    /**
	     * Formats the given number as a string according to the settings applied to
	     * this formatter. This may cause the number to be truncated, rounded, or
	     * otherwise differ from what you might expect.
	     *
	     * @example
	     *
	     *   // By default no fraction digits are shown.
	     *   var f = new FieldKit.NumberFormatter();
	     *   f.format(Math.PI);  // '3'
	     *
	     *   // Let's format as a currency.
	     *   f.setNumberStyle(FieldKit.NumberFormatter.Style.CURRENCY);
	     *   f.format(Math.PI);  // '$3.14'
	     *
	     *   // Or as a percentage, which illustrates usage of {@link NumberFormatter#exponent}.
	     *   f.setNumberStyle(FieldKit.NumberFormatter.Style.PERCENT);
	     *   f.format(Math.PI);  // '314%'
	     *
	     *   // For the rest of the examples we'll go back to normal.
	     *   f.setNumberStyle(FieldKit.NumberFormatter.Style.NONE);
	     *
	     *   // The default rounding mode is {@link NumberFormatter.Rounding.HALF_EVEN}.
	     *   f.setMaximumFractionDigits(4);
	     *   f.format(Math.PI);  // '3.1416'
	     *
	     *   // And we can change the rounding mode if we like.
	     *   f.setRoundingMode(FieldKit.NumberFormatter.Rounding.FLOOR);
	     *   f.format(Math.PI);  // '3.1415'
	     *
	     * @param {number} number
	     * @returns {string}
	     */
	
	  }, {
	    key: 'format',
	    value: function format(number) {
	      if (number === '') {
	        return '';
	      }
	
	      var zeroSymbol = this.zeroSymbol();
	      if (zeroSymbol !== undefined && zeroSymbol !== null && number === 0) {
	        return zeroSymbol;
	      }
	
	      var nullSymbol = this.nullSymbol();
	      if (nullSymbol !== undefined && nullSymbol !== null && number === null) {
	        return nullSymbol;
	      }
	
	      var notANumberSymbol = this.notANumberSymbol();
	      if (notANumberSymbol !== undefined && notANumberSymbol !== null && isNaN(number)) {
	        return notANumberSymbol;
	      }
	
	      var positiveInfinitySymbol = this.positiveInfinitySymbol();
	      if (positiveInfinitySymbol !== undefined && positiveInfinitySymbol !== null && number === Infinity) {
	        return positiveInfinitySymbol;
	      }
	
	      var negativeInfinitySymbol = this.negativeInfinitySymbol();
	      if (negativeInfinitySymbol !== undefined && negativeInfinitySymbol !== null && number === -Infinity) {
	        return negativeInfinitySymbol;
	      }
	
	      var negative = number < 0;
	
	      var parts = ('' + Math.abs(number)).split('.');
	      var integerPart = parts[0];
	      var fractionPart = parts[1] || '';
	
	      var exponent = this.exponent();
	      if (exponent !== undefined && exponent !== null) {
	        var shifted = (0, _stround.shiftParts)([negative, integerPart, fractionPart], exponent);
	        negative = shifted[0];
	        integerPart = shifted[1];
	        fractionPart = shifted[2];
	        while (integerPart[0] === '0') {
	          integerPart = integerPart.slice(1);
	        }
	      }
	
	      // round fraction part to the maximum length
	      var maximumFractionDigits = this.maximumFractionDigits();
	      if (fractionPart.length > maximumFractionDigits) {
	        var unrounded = integerPart + '.' + fractionPart;
	        var rounded = this._round(negative ? '-' + unrounded : unrounded);
	        if (rounded[0] === '-') {
	          rounded = rounded.slice(1);
	        }
	        parts = rounded.split('.');
	        integerPart = parts[0];
	        fractionPart = parts[1] || '';
	      }
	
	      // right-pad fraction zeros up to the minimum length
	      var minimumFractionDigits = this.minimumFractionDigits();
	      while (fractionPart.length < minimumFractionDigits) {
	        fractionPart += '0';
	      }
	
	      // left-pad integer zeros up to the minimum length
	      var minimumIntegerDigits = this.minimumIntegerDigits();
	      while (integerPart.length < minimumIntegerDigits) {
	        integerPart = '0' + integerPart;
	      }
	
	      // eat any unneeded trailing zeros
	      while (fractionPart.length > minimumFractionDigits && fractionPart.slice(-1) === '0') {
	        fractionPart = fractionPart.slice(0, -1);
	      }
	
	      // left-truncate any integer digits over the maximum length
	      var maximumIntegerDigits = this.maximumIntegerDigits();
	      if (maximumIntegerDigits !== undefined && maximumIntegerDigits !== null && integerPart.length > maximumIntegerDigits) {
	        integerPart = integerPart.slice(-maximumIntegerDigits);
	      }
	
	      // add the decimal separator
	      if (fractionPart.length > 0 || this.alwaysShowsDecimalSeparator()) {
	        fractionPart = this.decimalSeparator() + fractionPart;
	      }
	
	      if (this.usesGroupingSeparator()) {
	        var integerPartWithGroupingSeparators = '';
	        var copiedCharacterCount = 0;
	
	        for (var i = integerPart.length - 1; i >= 0; i--) {
	          if (copiedCharacterCount > 0 && copiedCharacterCount % this.groupingSize() === 0) {
	            integerPartWithGroupingSeparators = this.groupingSeparator() + integerPartWithGroupingSeparators;
	          }
	          integerPartWithGroupingSeparators = integerPart[i] + integerPartWithGroupingSeparators;
	          copiedCharacterCount++;
	        }
	        integerPart = integerPartWithGroupingSeparators;
	      }
	
	      var result = integerPart + fractionPart;
	
	      // surround with the appropriate prefix and suffix
	      if (negative) {
	        result = this.negativePrefix() + result + this.negativeSuffix();
	      } else {
	        result = this.positivePrefix() + result + this.positiveSuffix();
	      }
	      return result;
	    }
	
	    /**
	     * @param {number} number
	     * @returns {number}
	     * @private
	     */
	
	  }, {
	    key: '_round',
	    value: function _round(number) {
	      return (0, _stround.round)(number, this.maximumFractionDigits(), this.roundingMode());
	    }
	
	    /**
	     * Parses the given string according to the current formatting settings.
	     * When parsing values with a guaranteed regular format you can simply
	     * configure the formatter correctly and call this method. However, when
	     * dealing with human input it is often useful to configure
	     * {@link NumberFormatter#isLenient} to be true, allowing more leeway in what
	     * may be parsed as a valid number.
	     *
	     * @example
	     *
	     *   var f = new FieldKit.NumberFormatter();
	     *   f.parse('89'); // 89
	     *
	     * @param {string} string
	     * @param {function(string)} error
	     * @returns {?number}
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(string, error) {
	      var result = void 0;
	      var positivePrefix = this.positivePrefix();
	      var negativePrefix = this.negativePrefix();
	      var positiveSuffix = this.positiveSuffix();
	      var negativeSuffix = this.negativeSuffix();
	
	      if (this.isLenient()) {
	        string = string.replace(/\s/g, '');
	        positivePrefix = (0, _utils.trim)(positivePrefix);
	        negativePrefix = (0, _utils.trim)(negativePrefix);
	        positiveSuffix = (0, _utils.trim)(positiveSuffix);
	        negativeSuffix = (0, _utils.trim)(negativeSuffix);
	      }
	
	      var zeroSymbol = void 0;
	      var nullSymbol = void 0;
	      var notANumberSymbol = void 0;
	      var positiveInfinitySymbol = void 0;
	      var negativeInfinitySymbol = void 0;
	      var innerString = void 0;
	
	      if ((zeroSymbol = this.zeroSymbol()) !== undefined && zeroSymbol !== null && string === zeroSymbol) {
	        result = 0;
	      } else if ((nullSymbol = this.nullSymbol()) !== undefined && nullSymbol !== null && string === nullSymbol) {
	        result = null;
	      } else if ((notANumberSymbol = this.notANumberSymbol()) !== undefined && notANumberSymbol !== null && string === notANumberSymbol) {
	        result = NaN;
	      } else if ((positiveInfinitySymbol = this.positiveInfinitySymbol()) !== undefined && positiveInfinitySymbol !== null && string === positiveInfinitySymbol) {
	        result = Infinity;
	      } else if ((negativeInfinitySymbol = this.negativeInfinitySymbol()) !== undefined && negativeInfinitySymbol !== null && string === negativeInfinitySymbol) {
	        result = -Infinity;
	      } else {
	        var hasNegativePrefix = (0, _utils.startsWith)(negativePrefix, string);
	        var hasNegativeSuffix = (0, _utils.endsWith)(negativeSuffix, string);
	        if (hasNegativePrefix && (this.isLenient() || hasNegativeSuffix)) {
	          innerString = string.slice(negativePrefix.length);
	          if (hasNegativeSuffix) {
	            innerString = innerString.slice(0, innerString.length - negativeSuffix.length);
	          }
	          result = this._parseAbsoluteValue(innerString, error);
	          if (result !== undefined && result !== null) {
	            result *= -1;
	          }
	        } else {
	          var hasPositivePrefix = (0, _utils.startsWith)(positivePrefix, string);
	          var hasPositiveSuffix = (0, _utils.endsWith)(positiveSuffix, string);
	          if (this.isLenient() || hasPositivePrefix && hasPositiveSuffix) {
	            innerString = string;
	            if (hasPositivePrefix) {
	              innerString = innerString.slice(positivePrefix.length);
	            }
	            if (hasPositiveSuffix) {
	              innerString = innerString.slice(0, innerString.length - positiveSuffix.length);
	            }
	            result = this._parseAbsoluteValue(innerString, error);
	          } else {
	            if (typeof error === 'function') {
	              error('number-formatter.invalid-format');
	            }
	            return null;
	          }
	        }
	      }
	
	      if (result !== undefined && result !== null) {
	        var minimum = this.minimum();
	        if (minimum !== undefined && minimum !== null && result < minimum) {
	          if (typeof error === 'function') {
	            error('number-formatter.out-of-bounds.below-minimum');
	          }
	          return null;
	        }
	
	        var maximum = this.maximum();
	        if (maximum !== undefined && maximum !== null && result > maximum) {
	          if (typeof error === 'function') {
	            error('number-formatter.out-of-bounds.above-maximum');
	          }
	          return null;
	        }
	      }
	
	      return result;
	    }
	
	    /**
	     * @param {string} string
	     * @param {function(string)} error
	     * @returns {?number} returns value with delimiters removed
	     * @private
	     */
	
	  }, {
	    key: '_parseAbsoluteValue',
	    value: function _parseAbsoluteValue(string, error) {
	      var number = void 0;
	      if (string.length === 0) {
	        if (typeof error === 'function') {
	          error('number-formatter.invalid-format');
	        }
	        return null;
	      }
	
	      var parts = string.split(this.decimalSeparator());
	      if (parts.length > 2) {
	        if (typeof error === 'function') {
	          error('number-formatter.invalid-format');
	        }
	        return null;
	      }
	
	      var integerPart = parts[0];
	      var fractionPart = parts[1] || '';
	
	      if (this.usesGroupingSeparator()) {
	        var groupingSize = this.groupingSize();
	        var groupParts = integerPart.split(this.groupingSeparator());
	
	        if (!this.isLenient()) {
	          if (groupParts.length > 1) {
	            // disallow 1000,000
	            if (groupParts[0].length > groupingSize) {
	              if (typeof error === 'function') {
	                error('number-formatter.invalid-format.grouping-size');
	              }
	              return null;
	            }
	
	            // disallow 1,00
	            var groupPartsTail = groupParts.slice(1);
	            for (var i = 0, l = groupPartsTail.length; i < l; i++) {
	              if (groupPartsTail[i].length !== groupingSize) {
	                if (typeof error === 'function') {
	                  error('number-formatter.invalid-format.grouping-size');
	                }
	                return null;
	              }
	            }
	          }
	        }
	
	        // remove grouping separators
	        integerPart = groupParts.join('');
	      }
	
	      if (!(0, _utils.isDigits)(integerPart) || !(0, _utils.isDigits)(fractionPart)) {
	        if (typeof error === 'function') {
	          error('number-formatter.invalid-format');
	        }
	        return null;
	      }
	
	      var exponent = this.exponent();
	      if (exponent !== undefined && exponent !== null) {
	        var shifted = (0, _stround.shiftParts)([false, integerPart, fractionPart], -exponent);
	        integerPart = shifted[1];
	        fractionPart = shifted[2];
	      }
	
	      number = Number(integerPart) + Number('.' + (fractionPart || '0'));
	
	      if (!this.allowsFloats() && number !== ~ ~number) {
	        if (typeof error === 'function') {
	          error('number-formatter.floats-not-allowed');
	        }
	        return null;
	      }
	
	      return number;
	    }
	
	    /**
	     * Gets defaults.
	     *
	     * @returns {Array}
	     * @private
	     */
	
	  }, {
	    key: '_currencyDefaults',
	    value: function _currencyDefaults() {
	      var result = {};
	
	      (0, _utils.forEach)(CurrencyDefaults['default'], function (value, key) {
	        result[key] = value;
	      });
	
	      (0, _utils.forEach)(CurrencyDefaults[this.currencyCode()], function (value, key) {
	        result[key] = value;
	      });
	
	      return result;
	    }
	
	    /**
	     * Gets defaults.
	     *
	     * @returns {Array}
	     * @private
	     */
	
	  }, {
	    key: '_regionDefaults',
	    value: function _regionDefaults() {
	      var result = {};
	
	      (0, _utils.forEach)(RegionDefaults.default, function (value, key) {
	        result[key] = value;
	      });
	
	      (0, _utils.forEach)(RegionDefaults[this.countryCode()], function (value, key) {
	        result[key] = value;
	      });
	
	      return result;
	    }
	
	    /**
	     * Gets defaults.
	     *
	     * @returns {Array}
	     * @private
	     */
	
	  }, {
	    key: '_localeDefaults',
	    value: function _localeDefaults() {
	      var locale = this.locale();
	      var countryCode = this.countryCode();
	      var lang = splitLocaleComponents(locale).lang;
	      var result = {};
	
	      var defaultFallbacks = [RegionDefaults.default, LocaleDefaults.default, RegionDefaults[countryCode], // CA
	      LocaleDefaults[lang], // fr
	      LocaleDefaults[locale] // fr-CA
	      ];
	
	      (0, _utils.forEach)(defaultFallbacks, function (defaults) {
	        (0, _utils.forEach)(defaults, function (value, key) {
	          result[key] = value;
	        });
	      });
	
	      return result;
	    }
	  }]);
	
	  return NumberFormatter;
	}(_formatter2.default);
	
	/**
	 * Defaults
	 */
	
	/** @private */
	
	
	NumberFormatter.prototype._allowsFloats = null;
	/** @private */
	NumberFormatter.prototype._alwaysShowsDecimalSeparator = null;
	/** @private */
	NumberFormatter.prototype._countryCode = null;
	/** @private */
	NumberFormatter.prototype._currencyCode = null;
	/** @private */
	NumberFormatter.prototype._exponent = null;
	/** @private */
	NumberFormatter.prototype._groupingSeparator = null;
	/** @private */
	NumberFormatter.prototype._groupingSize = null;
	/** @private */
	NumberFormatter.prototype._lenient = false;
	/** @private */
	NumberFormatter.prototype._locale = null;
	/** @private */
	NumberFormatter.prototype._internationalCurrencySymbol = null;
	/** @private */
	NumberFormatter.prototype._maximumFractionDigits = null;
	/** @private */
	NumberFormatter.prototype._minimumFractionDigits = null;
	/** @private */
	NumberFormatter.prototype._maximumIntegerDigits = null;
	/** @private */
	NumberFormatter.prototype._minimumIntegerDigits = null;
	/** @private */
	NumberFormatter.prototype._maximum = null;
	/** @private */
	NumberFormatter.prototype._minimum = null;
	/** @private */
	NumberFormatter.prototype._notANumberSymbol = null;
	/** @private */
	NumberFormatter.prototype._nullSymbol = null;
	/** @private */
	NumberFormatter.prototype._numberStyle = null;
	/** @private */
	NumberFormatter.prototype._roundingMode = null;
	/** @private */
	NumberFormatter.prototype._usesGroupingSeparator = null;
	/** @private */
	NumberFormatter.prototype._zeroSymbol = null;
	
	/**
	 * Aliases
	 */
	
	NumberFormatter.prototype.stringFromNumber = NumberFormatter.prototype.format;
	NumberFormatter.prototype.numberFromString = NumberFormatter.prototype.parse;
	
	NumberFormatter.Rounding = _stround.modes;
	
	/**
	 * @enum {number}
	 * @readonly
	 */
	NumberFormatter.Style = {
	  NONE: NONE,
	  CURRENCY: CURRENCY,
	  PERCENT: PERCENT
	};
	
	/**
	 * @namespace StyleDefaults
	 */
	var StyleDefaults = {
	  NONE: {
	    usesGroupingSeparator: false,
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0,
	    minimumIntegerDigits: 0
	  },
	  PERCENT: {
	    usesGroupingSeparator: false,
	    exponent: 2,
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0,
	    minimumIntegerDigits: 1,
	    positiveSuffix: function positiveSuffix(formatter) {
	      return formatter.percentSymbol();
	    },
	    negativeSuffix: function negativeSuffix(formatter) {
	      return formatter.percentSymbol();
	    }
	  },
	  CURRENCY: {
	    positivePrefix: function positivePrefix(formatter, locale) {
	      return get(locale, 'positiveCurrencyPrefix', formatter, this);
	    },
	    positiveSuffix: function positiveSuffix(formatter, locale) {
	      return get(locale, 'positiveCurrencySuffix', formatter, this);
	    },
	    negativePrefix: function negativePrefix(formatter, locale) {
	      return get(locale, 'negativeCurrencyPrefix', formatter, this);
	    },
	    negativeSuffix: function negativeSuffix(formatter, locale) {
	      return get(locale, 'negativeCurrencySuffix', formatter, this);
	    }
	  }
	};
	
	/**
	 * Contains the default values for various number formatter settings, including
	 * per-locale overrides. Some of these characters will not be used as-is and
	 * instead serve as placeholders:
	 *
	 *   "¤"  placeholder for `currencySymbol()`.
	 *   "-"  placeholder for `minusSign()`.
	 *   "+"  placeholder for `plusSign()`.
	 *
	 * @namespace LocaleDefaults
	 */
	var LocaleDefaults = {
	  'default': {
	    allowsFloats: true,
	    alwaysShowsDecimalSeparator: false,
	    decimalSeparator: '.',
	    groupingSeparator: ',',
	    groupingSize: 3,
	    minusSign: '-',
	    negativeInfinitySymbol: '-∞',
	    negativePrefix: '-',
	    negativeSuffix: '',
	    notANumberSymbol: 'NaN',
	    nullSymbol: '',
	    percentSymbol: '%',
	    positiveInfinitySymbol: '+∞',
	    positivePrefix: '',
	    positiveSuffix: '',
	    plusSign: '+',
	    roundingMode: NumberFormatter.Rounding.HALF_EVEN,
	    positiveCurrencyPrefix: '¤',
	    positiveCurrencySuffix: '',
	    negativeCurrencyPrefix: '(¤',
	    negativeCurrencySuffix: ')'
	  },
	  fr: {
	    decimalSeparator: ',',
	    groupingSeparator: ' ',
	    percentSymbol: ' %',
	    positiveCurrencyPrefix: '',
	    positiveCurrencySuffix: ' ¤',
	    negativeCurrencyPrefix: '(',
	    negativeCurrencySuffix: ' ¤)'
	  },
	  ja: {
	    negativeCurrencyPrefix: '-¤',
	    negativeCurrencySuffix: ''
	  },
	  'en-GB': {
	    negativeCurrencyPrefix: '-¤',
	    negativeCurrencySuffix: ''
	  }
	};
	
	/**
	 * @namespace RegionDefaults
	 */
	var RegionDefaults = {
	  AE: {
	    currencyCode: 'AED'
	  },
	  AG: {
	    currencyCode: 'XCD'
	  },
	  AI: {
	    currencyCode: 'XCD'
	  },
	  AL: {
	    currencyCode: 'ALL'
	  },
	  AM: {
	    currencyCode: 'AMD'
	  },
	  AO: {
	    currencyCode: 'AOA'
	  },
	  AR: {
	    currencyCode: 'ARS'
	  },
	  AT: {
	    currencyCode: 'EUR'
	  },
	  AU: {
	    currencyCode: 'AUD'
	  },
	  AW: {
	    currencyCode: 'AWG'
	  },
	  AZ: {
	    currencyCode: 'AZN'
	  },
	  BA: {
	    currencyCode: 'BAM'
	  },
	  BB: {
	    currencyCode: 'BBD'
	  },
	  BD: {
	    currencyCode: 'BDT'
	  },
	  BE: {
	    currencyCode: 'EUR'
	  },
	  BF: {
	    currencyCode: 'XOF'
	  },
	  BG: {
	    currencyCode: 'BGN'
	  },
	  BH: {
	    currencyCode: 'BHD'
	  },
	  BJ: {
	    currencyCode: 'XOF'
	  },
	  BM: {
	    currencyCode: 'BMD'
	  },
	  BN: {
	    currencyCode: 'BND'
	  },
	  BO: {
	    currencyCode: 'BOB'
	  },
	  BR: {
	    currencyCode: 'BRL'
	  },
	  BS: {
	    currencyCode: 'BSD'
	  },
	  BT: {
	    currencyCode: 'BTN'
	  },
	  BW: {
	    currencyCode: 'BWP'
	  },
	  BY: {
	    currencyCode: 'BYR'
	  },
	  BZ: {
	    currencyCode: 'BZD'
	  },
	  CA: {
	    currencyCode: 'CAD'
	  },
	  CG: {
	    currencyCode: 'CDF'
	  },
	  CH: {
	    currencyCode: 'CHF'
	  },
	  CI: {
	    currencyCode: 'XOF'
	  },
	  CL: {
	    currencyCode: 'CLP'
	  },
	  CM: {
	    currencyCode: 'XAF'
	  },
	  CN: {
	    currencyCode: 'CNY'
	  },
	  CO: {
	    currencyCode: 'COP'
	  },
	  CR: {
	    currencyCode: 'CRC'
	  },
	  CV: {
	    currencyCode: 'CVE'
	  },
	  CY: {
	    currencyCode: 'EUR'
	  },
	  CZ: {
	    currencyCode: 'CZK'
	  },
	  DE: {
	    currencyCode: 'EUR'
	  },
	  DK: {
	    currencyCode: 'DKK'
	  },
	  DM: {
	    currencyCode: 'XCD'
	  },
	  DO: {
	    currencyCode: 'DOP'
	  },
	  DZ: {
	    currencyCode: 'DZD'
	  },
	  EC: {
	    currencyCode: 'USD'
	  },
	  EE: {
	    currencyCode: 'EUR'
	  },
	  EG: {
	    currencyCode: 'EGP'
	  },
	  ES: {
	    currencyCode: 'EUR'
	  },
	  ET: {
	    currencyCode: 'ETB'
	  },
	  FI: {
	    currencyCode: 'EUR'
	  },
	  FJ: {
	    currencyCode: 'FJD'
	  },
	  FM: {
	    currencyCode: 'USD'
	  },
	  FR: {
	    currencyCode: 'EUR'
	  },
	  GA: {
	    currencyCode: 'XAF'
	  },
	  GB: {
	    currencyCode: 'GBP'
	  },
	  GD: {
	    currencyCode: 'XCD'
	  },
	  GE: {
	    currencyCode: 'GEL'
	  },
	  GH: {
	    currencyCode: 'GHS'
	  },
	  GI: {
	    currencyCode: 'GIP'
	  },
	  GM: {
	    currencyCode: 'GMD'
	  },
	  GR: {
	    currencyCode: 'EUR'
	  },
	  GT: {
	    currencyCode: 'GTQ'
	  },
	  GU: {
	    currencyCode: 'USD'
	  },
	  GW: {
	    currencyCode: 'XOF'
	  },
	  GY: {
	    currencyCode: 'GYD'
	  },
	  HK: {
	    currencyCode: 'HKD'
	  },
	  HN: {
	    currencyCode: 'HNL'
	  },
	  HR: {
	    currencyCode: 'HRK'
	  },
	  HT: {
	    currencyCode: 'HTG'
	  },
	  HU: {
	    currencyCode: 'HUF'
	  },
	  ID: {
	    currencyCode: 'IDR'
	  },
	  IE: {
	    currencyCode: 'EUR'
	  },
	  IL: {
	    currencyCode: 'ILS'
	  },
	  IN: {
	    currencyCode: 'INR'
	  },
	  IS: {
	    currencyCode: 'ISK'
	  },
	  IT: {
	    currencyCode: 'EUR'
	  },
	  JM: {
	    currencyCode: 'JMD'
	  },
	  JO: {
	    currencyCode: 'JOD'
	  },
	  JP: {
	    currencyCode: 'JPY'
	  },
	  KE: {
	    currencyCode: 'KES'
	  },
	  KG: {
	    currencyCode: 'KGS'
	  },
	  KH: {
	    currencyCode: 'KHR'
	  },
	  KN: {
	    currencyCode: 'XCD'
	  },
	  KR: {
	    currencyCode: 'KRW'
	  },
	  KW: {
	    currencyCode: 'KWD'
	  },
	  KY: {
	    currencyCode: 'KYD'
	  },
	  KZ: {
	    currencyCode: 'KZT'
	  },
	  LA: {
	    currencyCode: 'LAK'
	  },
	  LB: {
	    currencyCode: 'LBP'
	  },
	  LC: {
	    currencyCode: 'XCD'
	  },
	  LI: {
	    currencyCode: 'CHF'
	  },
	  LK: {
	    currencyCode: 'LKR'
	  },
	  LR: {
	    currencyCode: 'LRD'
	  },
	  LT: {
	    currencyCode: 'LTL'
	  },
	  LU: {
	    currencyCode: 'EUR'
	  },
	  LV: {
	    currencyCode: 'EUR'
	  },
	  MA: {
	    currencyCode: 'MAD'
	  },
	  MD: {
	    currencyCode: 'MDL'
	  },
	  MG: {
	    currencyCode: 'MGA'
	  },
	  MK: {
	    currencyCode: 'MKD'
	  },
	  ML: {
	    currencyCode: 'XOF'
	  },
	  MM: {
	    currencyCode: 'MMK'
	  },
	  MN: {
	    currencyCode: 'MNT'
	  },
	  MO: {
	    currencyCode: 'MOP'
	  },
	  MP: {
	    currencyCode: 'USD'
	  },
	  MR: {
	    currencyCode: 'MRO'
	  },
	  MS: {
	    currencyCode: 'XCD'
	  },
	  MT: {
	    currencyCode: 'EUR'
	  },
	  MU: {
	    currencyCode: 'MUR'
	  },
	  MW: {
	    currencyCode: 'MWK'
	  },
	  MX: {
	    currencyCode: 'MXN'
	  },
	  MY: {
	    currencyCode: 'MYR'
	  },
	  MZ: {
	    currencyCode: 'MZN'
	  },
	  NA: {
	    currencyCode: 'NAD'
	  },
	  NE: {
	    currencyCode: 'XOF'
	  },
	  NG: {
	    currencyCode: 'NGN'
	  },
	  NI: {
	    currencyCode: 'NIO'
	  },
	  NL: {
	    currencyCode: 'EUR'
	  },
	  NO: {
	    currencyCode: 'NOK'
	  },
	  NP: {
	    currencyCode: 'NPR'
	  },
	  NZ: {
	    currencyCode: 'NZD'
	  },
	  OM: {
	    currencyCode: 'OMR'
	  },
	  PA: {
	    currencyCode: 'PAB'
	  },
	  PE: {
	    currencyCode: 'PEN'
	  },
	  PG: {
	    currencyCode: 'PGK'
	  },
	  PH: {
	    currencyCode: 'PHP'
	  },
	  PK: {
	    currencyCode: 'PKR'
	  },
	  PL: {
	    currencyCode: 'PLN'
	  },
	  PR: {
	    currencyCode: 'USD'
	  },
	  PT: {
	    currencyCode: 'EUR'
	  },
	  PW: {
	    currencyCode: 'USD'
	  },
	  PY: {
	    currencyCode: 'PYG'
	  },
	  QA: {
	    currencyCode: 'QAR'
	  },
	  RO: {
	    currencyCode: 'RON'
	  },
	  RS: {
	    currencyCode: 'RSD'
	  },
	  RU: {
	    currencyCode: 'RUB'
	  },
	  RW: {
	    currencyCode: 'RWF'
	  },
	  SA: {
	    currencyCode: 'SAR'
	  },
	  SB: {
	    currencyCode: 'SBD'
	  },
	  SC: {
	    currencyCode: 'SCR'
	  },
	  SE: {
	    currencyCode: 'SEK'
	  },
	  SG: {
	    currencyCode: 'SGD'
	  },
	  SI: {
	    currencyCode: 'EUR'
	  },
	  SK: {
	    currencyCode: 'EUR'
	  },
	  SL: {
	    currencyCode: 'SLL'
	  },
	  SN: {
	    currencyCode: 'XOF'
	  },
	  SR: {
	    currencyCode: 'SRD'
	  },
	  ST: {
	    currencyCode: 'STD'
	  },
	  SV: {
	    currencyCode: 'SVC'
	  },
	  SZ: {
	    currencyCode: 'SZL'
	  },
	  TC: {
	    currencyCode: 'USD'
	  },
	  TD: {
	    currencyCode: 'XAF'
	  },
	  TG: {
	    currencyCode: 'XOF'
	  },
	  TH: {
	    currencyCode: 'THB'
	  },
	  TJ: {
	    currencyCode: 'TJS'
	  },
	  TM: {
	    currencyCode: 'TMT'
	  },
	  TN: {
	    currencyCode: 'TND'
	  },
	  TR: {
	    currencyCode: 'TRY'
	  },
	  TT: {
	    currencyCode: 'TTD'
	  },
	  TW: {
	    currencyCode: 'TWD'
	  },
	  TZ: {
	    currencyCode: 'TZS'
	  },
	  UA: {
	    currencyCode: 'UAH'
	  },
	  UG: {
	    currencyCode: 'UGX'
	  },
	  US: {
	    currencyCode: 'USD'
	  },
	  UY: {
	    currencyCode: 'UYU'
	  },
	  UZ: {
	    currencyCode: 'UZS'
	  },
	  VC: {
	    currencyCode: 'XCD'
	  },
	  VE: {
	    currencyCode: 'VEF'
	  },
	  VG: {
	    currencyCode: 'USD'
	  },
	  VI: {
	    currencyCode: 'USD'
	  },
	  VN: {
	    currencyCode: 'VND'
	  },
	  YE: {
	    currencyCode: 'YER'
	  },
	  ZA: {
	    currencyCode: 'ZAR'
	  },
	  ZM: {
	    currencyCode: 'ZMW'
	  },
	  ZW: {
	    currencyCode: 'USD'
	  }
	};
	
	/**
	 * @namespace CurrencyDefaults
	 */
	var CurrencyDefaults = {
	  'default': {
	    currencySymbol: function currencySymbol(formatter) {
	      return formatter.currencyCode();
	    },
	    internationalCurrencySymbol: function internationalCurrencySymbol(formatter) {
	      return formatter.currencyCode();
	    },
	    minimumFractionDigits: 2,
	    maximumFractionDigits: 2,
	    minimumIntegerDigits: 1,
	    usesGroupingSeparator: true
	  },
	  AED: {
	    currencySymbol: 'د.إ',
	    internationalCurrencySymbol: 'د.إ'
	  },
	  ALL: {
	    currencySymbol: 'L',
	    internationalCurrencySymbol: 'L'
	  },
	  AMD: {
	    currencySymbol: 'դր.',
	    internationalCurrencySymbol: 'դր.'
	  },
	  AOA: {
	    currencySymbol: 'Kz',
	    internationalCurrencySymbol: 'Kz'
	  },
	  ARS: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  AUD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  AWG: {
	    currencySymbol: 'ƒ',
	    internationalCurrencySymbol: 'ƒ'
	  },
	  AZN: {
	    currencySymbol: '₼',
	    internationalCurrencySymbol: '₼'
	  },
	  BAM: {
	    currencySymbol: 'КМ',
	    internationalCurrencySymbol: 'КМ'
	  },
	  BBD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  BDT: {
	    currencySymbol: '৳',
	    internationalCurrencySymbol: '৳'
	  },
	  BGN: {
	    currencySymbol: 'лв',
	    internationalCurrencySymbol: 'лв'
	  },
	  BHD: {
	    currencySymbol: 'ب.د',
	    internationalCurrencySymbol: 'ب.د',
	    minimumFractionDigits: 3,
	    maximumFractionDigits: 3
	  },
	  BMD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  BND: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  BOB: {
	    currencySymbol: 'Bs.',
	    internationalCurrencySymbol: 'Bs.'
	  },
	  BRL: {
	    currencySymbol: 'R$',
	    internationalCurrencySymbol: 'R$'
	  },
	  BSD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  BTN: {
	    currencySymbol: 'Nu.',
	    internationalCurrencySymbol: 'Nu.'
	  },
	  BWP: {
	    currencySymbol: 'P',
	    internationalCurrencySymbol: 'P'
	  },
	  BYR: {
	    currencySymbol: 'Br',
	    internationalCurrencySymbol: 'Br'
	  },
	  BZD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  CAD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  CDF: {
	    currencySymbol: 'Fr',
	    internationalCurrencySymbol: 'Fr'
	  },
	  CHF: {
	    currencySymbol: 'Fr',
	    internationalCurrencySymbol: 'Fr'
	  },
	  CLP: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  CNY: {
	    currencySymbol: '¥',
	    internationalCurrencySymbol: '¥'
	  },
	  COP: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  CRC: {
	    currencySymbol: '₡',
	    internationalCurrencySymbol: '₡'
	  },
	  CVE: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  CZK: {
	    currencySymbol: 'Kč',
	    internationalCurrencySymbol: 'Kč'
	  },
	  DKK: {
	    currencySymbol: 'kr',
	    internationalCurrencySymbol: 'kr'
	  },
	  DOP: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  DZD: {
	    currencySymbol: 'د.ج',
	    internationalCurrencySymbol: 'د.ج'
	  },
	  EGP: {
	    currencySymbol: 'E£',
	    internationalCurrencySymbol: 'E£'
	  },
	  ETB: {
	    currencySymbol: 'ብር',
	    internationalCurrencySymbol: 'ብር'
	  },
	  EUR: {
	    currencySymbol: '€',
	    internationalCurrencySymbol: '€'
	  },
	  FJD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  GBP: {
	    currencySymbol: '£',
	    internationalCurrencySymbol: '£'
	  },
	  GEL: {
	    currencySymbol: 'ლ,',
	    internationalCurrencySymbol: 'ლ,'
	  },
	  GHS: {
	    currencySymbol: '₵',
	    internationalCurrencySymbol: '₵'
	  },
	  GIP: {
	    currencySymbol: '£',
	    internationalCurrencySymbol: '£'
	  },
	  GMD: {
	    currencySymbol: 'D',
	    internationalCurrencySymbol: 'D'
	  },
	  GTQ: {
	    currencySymbol: 'Q',
	    internationalCurrencySymbol: 'Q'
	  },
	  GYD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  HKD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  HNL: {
	    currencySymbol: 'L',
	    internationalCurrencySymbol: 'L'
	  },
	  HRK: {
	    currencySymbol: 'kn',
	    internationalCurrencySymbol: 'kn'
	  },
	  HTG: {
	    currencySymbol: 'G',
	    internationalCurrencySymbol: 'G'
	  },
	  HUF: {
	    currencySymbol: 'Ft',
	    internationalCurrencySymbol: 'Ft'
	  },
	  IDR: {
	    currencySymbol: 'Rp',
	    internationalCurrencySymbol: 'Rp'
	  },
	  ILS: {
	    currencySymbol: '₪',
	    internationalCurrencySymbol: '₪'
	  },
	  INR: {
	    currencySymbol: '₹',
	    internationalCurrencySymbol: '₹'
	  },
	  ISK: {
	    currencySymbol: 'kr',
	    internationalCurrencySymbol: 'kr'
	  },
	  JMD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  JOD: {
	    currencySymbol: 'د.ا',
	    internationalCurrencySymbol: 'د.ا',
	    minimumFractionDigits: 3,
	    maximumFractionDigits: 3
	  },
	  JPY: {
	    currencySymbol: '¥',
	    internationalCurrencySymbol: '¥',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  KES: {
	    currencySymbol: 'KSh',
	    internationalCurrencySymbol: 'KSh'
	  },
	  KGS: {
	    currencySymbol: 'som',
	    internationalCurrencySymbol: 'som'
	  },
	  KHR: {
	    currencySymbol: '៛',
	    internationalCurrencySymbol: '៛'
	  },
	  KRW: {
	    currencySymbol: '₩',
	    internationalCurrencySymbol: '₩',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  KWD: {
	    currencySymbol: 'د.ك',
	    internationalCurrencySymbol: 'د.ك',
	    minimumFractionDigits: 3,
	    maximumFractionDigits: 3
	  },
	  KYD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  KZT: {
	    currencySymbol: '〒',
	    internationalCurrencySymbol: '〒'
	  },
	  LAK: {
	    currencySymbol: '₭',
	    internationalCurrencySymbol: '₭'
	  },
	  LBP: {
	    currencySymbol: 'ل.ل',
	    internationalCurrencySymbol: 'ل.ل'
	  },
	  LKR: {
	    currencySymbol: '₨',
	    internationalCurrencySymbol: '₨'
	  },
	  LRD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  LTL: {
	    currencySymbol: 'Lt',
	    internationalCurrencySymbol: 'Lt'
	  },
	  MAD: {
	    currencySymbol: 'د.م.',
	    internationalCurrencySymbol: 'د.م.'
	  },
	  MDL: {
	    currencySymbol: 'L',
	    internationalCurrencySymbol: 'L'
	  },
	  MGA: {
	    currencySymbol: 'Ar',
	    internationalCurrencySymbol: 'Ar',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  MKD: {
	    currencySymbol: 'ден',
	    internationalCurrencySymbol: 'ден'
	  },
	  MMK: {
	    currencySymbol: 'K',
	    internationalCurrencySymbol: 'K'
	  },
	  MNT: {
	    currencySymbol: '₮',
	    internationalCurrencySymbol: '₮'
	  },
	  MOP: {
	    currencySymbol: 'P',
	    internationalCurrencySymbol: 'P'
	  },
	  MRO: {
	    currencySymbol: 'UM',
	    internationalCurrencySymbol: 'UM',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  MUR: {
	    currencySymbol: '₨',
	    internationalCurrencySymbol: '₨'
	  },
	  MWK: {
	    currencySymbol: 'MK',
	    internationalCurrencySymbol: 'MK'
	  },
	  MXN: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  MYR: {
	    currencySymbol: 'RM',
	    internationalCurrencySymbol: 'RM'
	  },
	  MZN: {
	    currencySymbol: 'MTn',
	    internationalCurrencySymbol: 'MTn'
	  },
	  NAD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  NGN: {
	    currencySymbol: '₦',
	    internationalCurrencySymbol: '₦'
	  },
	  NIO: {
	    currencySymbol: 'C$',
	    internationalCurrencySymbol: 'C$'
	  },
	  NOK: {
	    currencySymbol: 'kr',
	    internationalCurrencySymbol: 'kr'
	  },
	  NPR: {
	    currencySymbol: '₨',
	    internationalCurrencySymbol: '₨'
	  },
	  NZD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  OMR: {
	    currencySymbol: 'ر.ع.',
	    internationalCurrencySymbol: 'ر.ع.',
	    minimumFractionDigits: 3,
	    maximumFractionDigits: 3
	  },
	  PAB: {
	    currencySymbol: 'B/.',
	    internationalCurrencySymbol: 'B/.'
	  },
	  PEN: {
	    currencySymbol: 'S/.',
	    internationalCurrencySymbol: 'S/.'
	  },
	  PGK: {
	    currencySymbol: 'K',
	    internationalCurrencySymbol: 'K'
	  },
	  PHP: {
	    currencySymbol: '₱',
	    internationalCurrencySymbol: '₱'
	  },
	  PKR: {
	    currencySymbol: '₨',
	    internationalCurrencySymbol: '₨'
	  },
	  PLN: {
	    currencySymbol: 'zł',
	    internationalCurrencySymbol: 'zł'
	  },
	  PYG: {
	    currencySymbol: '₲',
	    internationalCurrencySymbol: '₲'
	  },
	  QAR: {
	    currencySymbol: 'ر.ق',
	    internationalCurrencySymbol: 'ر.ق'
	  },
	  RON: {
	    currencySymbol: 'Lei',
	    internationalCurrencySymbol: 'Lei'
	  },
	  RSD: {
	    currencySymbol: 'РСД',
	    internationalCurrencySymbol: 'РСД'
	  },
	  RUB: {
	    currencySymbol: '₽',
	    internationalCurrencySymbol: '₽'
	  },
	  RWF: {
	    currencySymbol: 'FRw',
	    internationalCurrencySymbol: 'FRw'
	  },
	  SAR: {
	    currencySymbol: 'ر.س',
	    internationalCurrencySymbol: 'ر.س'
	  },
	  SBD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  SCR: {
	    currencySymbol: '₨',
	    internationalCurrencySymbol: '₨'
	  },
	  SEK: {
	    currencySymbol: 'kr',
	    internationalCurrencySymbol: 'kr'
	  },
	  SGD: {
	    currencySymbol: 'S$',
	    internationalCurrencySymbol: 'S$'
	  },
	  SLL: {
	    currencySymbol: 'Le',
	    internationalCurrencySymbol: 'Le'
	  },
	  SRD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  STD: {
	    currencySymbol: 'Db',
	    internationalCurrencySymbol: 'Db'
	  },
	  SVC: {
	    currencySymbol: '₡',
	    internationalCurrencySymbol: '₡'
	  },
	  SZL: {
	    currencySymbol: 'E',
	    internationalCurrencySymbol: 'E'
	  },
	  THB: {
	    currencySymbol: '฿',
	    internationalCurrencySymbol: '฿'
	  },
	  TJS: {
	    currencySymbol: 'ЅМ',
	    internationalCurrencySymbol: 'ЅМ'
	  },
	  TMT: {
	    currencySymbol: 'm',
	    internationalCurrencySymbol: 'm'
	  },
	  TND: {
	    currencySymbol: 'د.ت',
	    internationalCurrencySymbol: 'د.ت',
	    minimumFractionDigits: 3,
	    maximumFractionDigits: 3
	  },
	  TRY: {
	    currencySymbol: '₺',
	    internationalCurrencySymbol: '₺'
	  },
	  TTD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  TWD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  TZS: {
	    currencySymbol: 'Sh',
	    internationalCurrencySymbol: 'Sh'
	  },
	  UAH: {
	    currencySymbol: '₴',
	    internationalCurrencySymbol: '₴'
	  },
	  UGX: {
	    currencySymbol: 'USh',
	    internationalCurrencySymbol: 'USh'
	  },
	  USD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: 'US$'
	  },
	  UYU: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  UZS: {
	    currencySymbol: 'лв',
	    internationalCurrencySymbol: 'лв'
	  },
	  VEF: {
	    currencySymbol: 'Bs F',
	    internationalCurrencySymbol: 'Bs F'
	  },
	  VND: {
	    currencySymbol: '₫',
	    internationalCurrencySymbol: '₫',
	    minimumFractionDigits: 0,
	    maximumFractionDigits: 0
	  },
	  XAF: {
	    currencySymbol: 'Fr',
	    internationalCurrencySymbol: 'Fr'
	  },
	  XCD: {
	    currencySymbol: '$',
	    internationalCurrencySymbol: '$'
	  },
	  XOF: {
	    currencySymbol: 'Fr',
	    internationalCurrencySymbol: 'Fr'
	  },
	  YER: {
	    currencySymbol: '﷼',
	    internationalCurrencySymbol: '﷼'
	  },
	  ZAR: {
	    currencySymbol: 'R',
	    internationalCurrencySymbol: 'R'
	  },
	  ZMW: {
	    currencySymbol: 'ZMK',
	    internationalCurrencySymbol: 'ZMK'
	  }
	};
	
	exports.default = NumberFormatter;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _formatter = __webpack_require__(259);
	
	var _formatter2 = _interopRequireDefault(_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var NumberFormatterSettings = function NumberFormatterSettings() {
	  _classCallCheck(this, NumberFormatterSettings);
	
	  /** @type boolean */
	  this.alwaysShowsDecimalSeparator = false;
	
	  /** @type number */
	  this.groupingSize = 0;
	
	  /** @type number */
	  this.maximumFractionDigits = 0;
	
	  /** @type number */
	  this.minimumFractionDigits = 0;
	
	  /** @type number */
	  this.minimumIntegerDigits = 0;
	
	  /** @type string */
	  this.prefix = '';
	
	  /** @type string */
	  this.suffix = '';
	
	  /** @type boolean */
	  this.usesGroupingSeparator = false;
	};
	
	/**
	 * Returns a string composed of the given character repeated `length` times.
	 *
	 * @param {string} character
	 * @param {number} length
	 * @returns {string}
	 * @private
	 */
	
	
	function chars(character, length) {
	  return new Array(length + 1).join(character);
	}
	
	/**
	 * @const
	 * @private
	 */
	var DIGIT = '#';
	
	/**
	 * @const
	 * @private
	 */
	var PADDING = '0';
	
	/**
	 * @const
	 * @private
	 */
	var DECIMAL_SEPARATOR = '.';
	
	/**
	 * @const
	 * @private
	 */
	var GROUPING_SEPARATOR = ',';
	
	var NumberFormatterSettingsFormatter = function (_Formatter) {
	  _inherits(NumberFormatterSettingsFormatter, _Formatter);
	
	  function NumberFormatterSettingsFormatter() {
	    _classCallCheck(this, NumberFormatterSettingsFormatter);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(NumberFormatterSettingsFormatter).apply(this, arguments));
	  }
	
	  _createClass(NumberFormatterSettingsFormatter, [{
	    key: 'format',
	
	    /**
	     * @param {NumberFormatterSettings} settings
	     * @returns {string}
	     */
	    value: function format(settings) {
	      var result = '';
	
	      var minimumIntegerDigits = settings.minimumIntegerDigits;
	      if (minimumIntegerDigits !== 0) {
	        result += chars(PADDING, minimumIntegerDigits);
	      }
	
	      result = DIGIT + result;
	
	      if (settings.usesGroupingSeparator) {
	        while (result.length <= settings.groupingSize) {
	          result = DIGIT + result;
	        }
	
	        result = result.slice(0, -settings.groupingSize) + GROUPING_SEPARATOR + result.slice(-settings.groupingSize);
	      }
	
	      var minimumFractionDigits = settings.minimumFractionDigits;
	      var maximumFractionDigits = settings.maximumFractionDigits;
	      var hasFractionalPart = settings.alwaysShowsDecimalSeparator || minimumFractionDigits > 0 || maximumFractionDigits > 0;
	
	      if (hasFractionalPart) {
	        result += DECIMAL_SEPARATOR;
	        for (var i = 0, length = maximumFractionDigits; i < length; i++) {
	          result += i < minimumFractionDigits ? PADDING : DIGIT;
	        }
	      }
	
	      return settings.prefix + result + settings.suffix;
	    }
	
	    /**
	     * @param {string} string
	     * @returns {?NumberFormatterSettings}
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(string) {
	      var result = new NumberFormatterSettings();
	
	      var hasPassedPrefix = false;
	      var hasStartedSuffix = false;
	      var decimalSeparatorIndex = null;
	      var groupingSeparatorIndex = null;
	      var lastIntegerDigitIndex = null;
	
	      for (var i = 0, length = string.length; i < length; i++) {
	        var c = string[i];
	
	        switch (c) {
	          case DIGIT:
	            if (hasStartedSuffix) {
	              return null;
	            }
	            hasPassedPrefix = true;
	            if (decimalSeparatorIndex !== null) {
	              result.maximumFractionDigits++;
	            }
	            break;
	
	          case PADDING:
	            if (hasStartedSuffix) {
	              return null;
	            }
	            hasPassedPrefix = true;
	            if (decimalSeparatorIndex === null) {
	              result.minimumIntegerDigits++;
	            } else {
	              result.minimumFractionDigits++;
	              result.maximumFractionDigits++;
	            }
	            break;
	
	          case DECIMAL_SEPARATOR:
	            if (hasStartedSuffix) {
	              return null;
	            }
	            hasPassedPrefix = true;
	            decimalSeparatorIndex = i;
	            lastIntegerDigitIndex = i - 1;
	            break;
	
	          case GROUPING_SEPARATOR:
	            if (hasStartedSuffix) {
	              return null;
	            }
	            hasPassedPrefix = true;
	            groupingSeparatorIndex = i;
	            break;
	
	          default:
	            if (hasPassedPrefix) {
	              hasStartedSuffix = true;
	              result.suffix += c;
	            } else {
	              result.prefix += c;
	            }
	        }
	      }
	
	      if (decimalSeparatorIndex === null) {
	        lastIntegerDigitIndex = length - 1;
	      }
	
	      if (decimalSeparatorIndex === length - 1) {
	        result.alwaysShowsDecimalSeparator = true;
	      }
	
	      if (groupingSeparatorIndex !== null) {
	        result.groupingSize = lastIntegerDigitIndex - groupingSeparatorIndex;
	        result.usesGroupingSeparator = true;
	      }
	
	      return result;
	    }
	  }]);
	
	  return NumberFormatterSettingsFormatter;
	}(_formatter2.default);
	
	exports.default = NumberFormatterSettingsFormatter;

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== 'undefined') {
	    factory(exports);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports);
	    global.stround = mod.exports;
	  }
	})(undefined, function (exports) {
	  /* jshint sub:true, esnext:true, undef:true, unused:true */
	
	  /**
	   * Enum for the available rounding modes.
	   *
	   * @enum {number}
	   */
	  'use strict';
	
	  Object.defineProperty(exports, '__esModule', {
	    value: true
	  });
	
	  var _slicedToArray = function () {
	    function sliceIterator(arr, i) {
	      var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
	        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	          _arr.push(_s.value);if (i && _arr.length === i) break;
	        }
	      } catch (err) {
	        _d = true;_e = err;
	      } finally {
	        try {
	          if (!_n && _i['return']) _i['return']();
	        } finally {
	          if (_d) throw _e;
	        }
	      }return _arr;
	    }return function (arr, i) {
	      if (Array.isArray(arr)) {
	        return arr;
	      } else if (Symbol.iterator in Object(arr)) {
	        return sliceIterator(arr, i);
	      } else {
	        throw new TypeError('Invalid attempt to destructure non-iterable instance');
	      }
	    };
	  }();
	
	  exports.parse = parse;
	  exports.format = format;
	  exports.shiftParts = shiftParts;
	  exports.shift = shift;
	  exports.round = round;
	  var modes = {
	    CEILING: 0,
	    FLOOR: 1,
	    DOWN: 2,
	    UP: 3,
	    HALF_EVEN: 4,
	    HALF_DOWN: 5,
	    HALF_UP: 6
	  };
	
	  exports.modes = modes;
	  /**
	   * @const
	   * @private
	   */
	  var NEG = '-';
	
	  /**
	   * @const
	   * @private
	   */
	  var SEP = '.';
	
	  /**
	   * @const
	   * @private
	   */
	  var NEG_PATTERN = '-';
	
	  /**
	   * @const
	   * @private
	   */
	  var SEP_PATTERN = '\\.';
	
	  /**
	   * @const
	   * @private
	   */
	  var NUMBER_PATTERN = new RegExp('^(' + NEG_PATTERN + ')?(\\d*)(?:' + SEP_PATTERN + '(\\d*))?$');
	
	  /**
	   * Increments the given integer represented by a string by one.
	   *
	   * @example
	   *
	   *   increment('1');  // '2'
	   *   increment('99'); // '100'
	   *   increment('');   // '1'
	   *
	   * @param {string} strint
	   * @return {string}
	   * @private
	   */
	  function increment(strint) {
	    var length = strint.length;
	
	    if (length === 0) {
	      return '1';
	    }
	
	    var last = parseInt(strint[length - 1], 10);
	
	    if (last === 9) {
	      return increment(strint.slice(0, length - 1)) + '0';
	    } else {
	      return strint.slice(0, length - 1) + (last + 1);
	    }
	  }
	
	  /**
	   * Parses the given decimal string into its component parts.
	   *
	   * @example
	   *
	   *   stround.parse('3.14');  // [false, '3', '14']
	   *   stround.parse('-3.45'); // [true, '3', '45']
	   *
	   * @param {string} strnum
	   * @return {?Array}
	   */
	
	  function parse(strnum) {
	    switch (strnum) {
	      case 'NaN':case 'Infinity':case '-Infinity':
	        return null;
	    }
	
	    var match = strnum.match(NUMBER_PATTERN);
	
	    if (!match) {
	      throw new Error('cannot round malformed number: ' + strnum);
	    }
	
	    return [match[1] !== undefined, match[2], match[3] || ''];
	  }
	
	  /**
	   * Format the given number configuration as a number string.
	   *
	   * @example
	   *
	   *   stround.format([false, '12', '34']); // '12.34'
	   *   stround.format([true, '8', '']);     // '-8'
	   *   stround.format([true, '', '7']);     // '-0.7'
	   *
	   * @param {Array} parts
	   * @return {string}
	   */
	
	  function format(_ref) {
	    var _ref2 = _slicedToArray(_ref, 3);
	
	    var negative = _ref2[0];
	    var intPart = _ref2[1];
	    var fracPart = _ref2[2];
	
	    if (intPart.length === 0) {
	      intPart = '0';
	    } else {
	      var firstNonZeroIndex = undefined;
	      for (firstNonZeroIndex = 0; firstNonZeroIndex < intPart.length; firstNonZeroIndex++) {
	        if (intPart[firstNonZeroIndex] !== '0') {
	          break;
	        }
	      }
	
	      if (firstNonZeroIndex !== intPart.length) {
	        intPart = intPart.slice(firstNonZeroIndex);
	      }
	    }
	
	    return (negative ? NEG + intPart : intPart) + (fracPart.length ? SEP + fracPart : '');
	  }
	
	  /**
	   * Shift the exponent of the given number (in parts) by the given amount.
	   *
	   * @example
	   *
	   *   stround.shiftParts([false, '12', ''], 2);  // [false, '1200', '']
	   *   stround.shiftParts([false, '12', ''], -2); // [false, '', '12']
	   *
	   * @param {Array} parts
	   * @param {number} exponent
	   * @return {Array}
	   */
	
	  function shiftParts(_ref3, exponent) {
	    var _ref32 = _slicedToArray(_ref3, 3);
	
	    var negative = _ref32[0];
	    var intPart = _ref32[1];
	    var fracPart = _ref32[2];
	
	    var partToMove = undefined;
	
	    if (exponent > 0) {
	      partToMove = fracPart.slice(0, exponent);
	      while (partToMove.length < exponent) {
	        partToMove += '0';
	      }
	      intPart += partToMove;
	      fracPart = fracPart.slice(exponent);
	    } else if (exponent < 0) {
	      while (intPart.length < -exponent) {
	        intPart = '0' + intPart;
	      }
	      partToMove = intPart.slice(intPart.length + exponent);
	      fracPart = partToMove + fracPart;
	      intPart = intPart.slice(0, intPart.length - partToMove.length);
	    }
	
	    return [negative, intPart, fracPart];
	  }
	
	  /**
	   * Shift the exponent of the given number (as a string) by the given amount.
	   *
	   *   shift('12', 2);  // '1200'
	   *   shift('12', -2); // '0.12'
	   *
	   * @param {string|number} strnum
	   * @param {number} exponent
	   * @return {string}
	   */
	
	  function shift(strnum, exponent) {
	    if (typeof strnum === 'number') {
	      strnum = '' + strnum;
	    }
	
	    var parsed = parse(strnum);
	    if (parsed === null) {
	      return strnum;
	    } else {
	      return format(shiftParts(parsed, exponent));
	    }
	  }
	
	  /**
	   * Round the given number represented by a string according to the given
	   * precision and mode.
	   *
	   * @param {string|number} strnum
	   * @param {number|null|undefined=} precision
	   * @param {modes=} mode
	   * @return {string}
	   */
	
	  function round(strnum, precision, mode) {
	    if (typeof strnum === 'number') {
	      strnum = '' + strnum;
	    }
	
	    if (typeof strnum !== 'string') {
	      throw new Error('expected a string or number, got: ' + strnum);
	    }
	
	    if (strnum.length === 0) {
	      return strnum;
	    }
	
	    if (precision === null || precision === undefined) {
	      precision = 0;
	    }
	
	    if (mode === undefined) {
	      mode = modes.HALF_EVEN;
	    }
	
	    var parsed = parse(strnum);
	
	    if (parsed === null) {
	      return strnum;
	    }
	
	    if (precision > 0) {
	      parsed = shiftParts(parsed, precision);
	    }
	
	    var _parsed = parsed;
	
	    var _parsed2 = _slicedToArray(_parsed, 3);
	
	    var negative = _parsed2[0];
	    var intPart = _parsed2[1];
	    var fracPart = _parsed2[2];
	
	    switch (mode) {
	      case modes.CEILING:case modes.FLOOR:case modes.UP:
	        var foundNonZeroDigit = false;
	        for (var i = 0, _length = fracPart.length; i < _length; i++) {
	          if (fracPart[i] !== '0') {
	            foundNonZeroDigit = true;
	            break;
	          }
	        }
	        if (foundNonZeroDigit) {
	          if (mode === modes.UP || negative !== (mode === modes.CEILING)) {
	            intPart = increment(intPart);
	          }
	        }
	        break;
	
	      case modes.HALF_EVEN:case modes.HALF_DOWN:case modes.HALF_UP:
	        var shouldRoundUp = false;
	        var firstFracPartDigit = parseInt(fracPart[0], 10);
	
	        if (firstFracPartDigit > 5) {
	          shouldRoundUp = true;
	        } else if (firstFracPartDigit === 5) {
	          if (mode === modes.HALF_UP) {
	            shouldRoundUp = true;
	          }
	
	          if (!shouldRoundUp) {
	            for (var i = 1, _length2 = fracPart.length; i < _length2; i++) {
	              if (fracPart[i] !== '0') {
	                shouldRoundUp = true;
	                break;
	              }
	            }
	          }
	
	          if (!shouldRoundUp && mode === modes.HALF_EVEN) {
	            var lastIntPartDigit = parseInt(intPart[intPart.length - 1], 10);
	            shouldRoundUp = lastIntPartDigit % 2 !== 0;
	          }
	        }
	
	        if (shouldRoundUp) {
	          intPart = increment(intPart);
	        }
	        break;
	    }
	
	    return format(shiftParts([negative, intPart, ''], -precision));
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * @const
	 * @private
	 */
	var NANPPhoneDelimiters = {
	  name: 'NANPPhoneDelimiters',
	  0: '(',
	  4: ')',
	  5: ' ',
	  9: '-'
	};
	
	/**
	 * @const
	 * @private
	 */
	var NANPPhoneDelimitersWithOne = {
	  name: 'NANPPhoneDelimitersWithOne',
	  1: ' ',
	  2: '(',
	  6: ')',
	  7: ' ',
	  11: '-'
	};
	
	/**
	 * @const
	 * @private
	 */
	var E164PhoneDelimitersWithOneDigit = {
	  name: 'E164PhoneDelimitersWithOneDigit',
	  2: ' ',
	  3: '(',
	  7: ')',
	  8: ' ',
	  12: '-'
	};
	
	/**
	 * @const
	 * @private
	 */
	var E164PhoneDelimitersWithTwoDigit = {
	  name: 'E164PhoneDelimitersWithTwoDigit',
	  3: ' ',
	  4: '(',
	  8: ')',
	  9: ' ',
	  13: '-'
	};
	
	/**
	 * @const
	 * @private
	 */
	var E164PhoneDelimitersWithThreeDigit = {
	  name: 'E164PhoneDelimitersWithThreeDigit',
	  4: ' ',
	  5: '(',
	  9: ')',
	  10: ' ',
	  14: '-'
	};
	
	/**
	 * This should match any characters in the maps above.
	 *
	 * @const
	 * @private
	 */
	var DELIMITER_PATTERN = /[-\(\) ]/g;
	
	/**
	 * @const
	 * @private
	 */
	var DEFAULT_COUNTRY_CODE = {
	  "E164": "1",
	  "country": ["American Samoa", "Anguilla", "Antigua and Barbuda", "Bahamas", "Barbados", "Bermuda", "British Virgin Islands", "Canada", "Cayman Islands", "Dominica", "Dominican Republic", "Grenada", "Guam", "Jamaica", "Montserrat", "Northern Mariana Islands", "Puerto Rico", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Vincent and the Grenadines", "Sint Maarten", "Trinidad and Tobago", "Turks and Caicos Islands", "U.S. Virgin Islands", "United States"]
	};
	
	/**
	 * This is an internal store for the current country
	 *
	 * @private
	 */
	var currentCountryCode = DEFAULT_COUNTRY_CODE;
	
	/**
	 * @extends DelimitedTextFormatter
	 */
	
	var PhoneFormatter = function (_DelimitedTextFormatt) {
	  _inherits(PhoneFormatter, _DelimitedTextFormatt);
	
	  /**
	   * @throws {Error} if anything is passed in
	   * @param {Array} args
	   */
	
	  function PhoneFormatter() {
	    _classCallCheck(this, PhoneFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PhoneFormatter).call(this));
	
	    if (arguments.length !== 0) {
	      throw new Error('were you trying to set a delimiter (' + (arguments.length <= 0 ? undefined : arguments[0]) + ')?');
	    }
	    return _this;
	  }
	
	  /**
	   * @param {string} chr
	   * @returns {boolean}
	   */
	
	
	  _createClass(PhoneFormatter, [{
	    key: 'isDelimiter',
	    value: function isDelimiter(chr) {
	      var map = this.delimiterMap;
	      for (var index in map) {
	        if (map.hasOwnProperty(index)) {
	          if (map[index] === chr) {
	            return true;
	          }
	        }
	      }
	      return false;
	    }
	
	    /**
	     * @param {number} index
	     * @returns {?string}
	     */
	
	  }, {
	    key: 'delimiterAt',
	    value: function delimiterAt(index) {
	      return this.delimiterMap[index];
	    }
	
	    /**
	     * @param {number} index
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'hasDelimiterAtIndex',
	    value: function hasDelimiterAtIndex(index) {
	      var delimiter = this.delimiterAt(index);
	      return delimiter !== undefined && delimiter !== null;
	    }
	
	    /**
	     * Will call parse on the formatter.
	     *
	     * @param {string} text
	     * @param {function(string)} error
	     * @returns {string} returns value with delimiters removed
	     */
	
	  }, {
	    key: 'parse',
	    value: function parse(text, error) {
	      if (!error) {
	        error = function error() {};
	      }
	      var digits = this.digitsWithoutCountryCode(text);
	      // Source: http://en.wikipedia.org/wiki/North_American_Numbering_Plan
	      //
	      // Area Code
	      if (text.length < 10) {
	        error('phone-formatter.number-too-short');
	      }
	      if (digits[0] === '0') {
	        error('phone-formatter.area-code-zero');
	      }
	      if (digits[0] === '1') {
	        error('phone-formatter.area-code-one');
	      }
	      if (digits[1] === '9') {
	        error('phone-formatter.area-code-n9n');
	      }
	      // Central Office Code
	      if (digits[3] === '1') {
	        error('phone-formatter.central-office-one');
	      }
	      if (digits.slice(4, 6) === '11') {
	        error('phone-formatter.central-office-n11');
	      }
	      return _get(Object.getPrototypeOf(PhoneFormatter.prototype), 'parse', this).call(this, text, error);
	    }
	
	    /**
	     * @param {string} value
	     * @returns {string}
	     */
	
	  }, {
	    key: 'format',
	    value: function format(value) {
	      this.guessFormatFromText(value);
	      return _get(Object.getPrototypeOf(PhoneFormatter.prototype), 'format', this).call(this, this.removeDelimiterMapChars(value));
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      this.guessFormatFromText(change.proposed.text);
	
	      if (change.inserted.text.length > 1) {
	        // handle pastes
	        var text = change.current.text;
	        var selectedRange = change.current.selectedRange;
	        var toInsert = change.inserted.text;
	
	        // Replace the selection with the new text, remove non-digits, then format.
	        var formatted = this.format((text.slice(0, selectedRange.start) + toInsert + text.slice(selectedRange.start + selectedRange.length)).replace(/[^\d]/g, ''));
	
	        change.proposed = {
	          text: formatted,
	          selectedRange: {
	            start: formatted.length - (text.length - (selectedRange.start + selectedRange.length)),
	            length: 0
	          }
	        };
	
	        return _get(Object.getPrototypeOf(PhoneFormatter.prototype), 'isChangeValid', this).call(this, change, error);
	      }
	
	      if (/^\d*$/.test(change.inserted.text) || change.proposed.text.indexOf('+') === 0) {
	        var formatName = this.delimiterMap.name;
	
	        // First guess at the localized format
	        if (currentCountryCode.localizedFormat) {
	          this.delimiterMap = currentCountryCode.localizedFormat;
	          this.maximumLength = currentCountryCode.localizedFormat.maximumLength;
	          formatName = 'localized-' + currentCountryCode.E164;
	        }
	
	        // We need to store the change and current format guess so that if the isChangeValid
	        // call to super changes the proposed text such that the format we thought is no longer
	        // valid. If that does happen we actually just rerun it through with the correct format
	        var originalProposed = change.proposed.text;
	        var _isChangeValid = _get(Object.getPrototypeOf(PhoneFormatter.prototype), 'isChangeValid', this).call(this, change, error);
	
	        this.guessFormatFromText(change.proposed.text);
	
	        // Make sure if the localizedFormat changed, respect that
	        if (currentCountryCode.localizedFormat) {
	          this.delimiterMap = currentCountryCode.localizedFormat;
	          this.maximumLength = currentCountryCode.localizedFormat.maximumLength;
	          this.delimiterMap.name = 'localized-' + currentCountryCode.E164;
	        }
	
	        if (formatName === this.delimiterMap.name) {
	          return _isChangeValid;
	        } else {
	          var originalChange = change;
	          originalChange.proposed.text = originalProposed;
	          return _get(Object.getPrototypeOf(PhoneFormatter.prototype), 'isChangeValid', this).call(this, originalChange, error);
	        }
	      } else {
	        return false;
	      }
	    }
	
	    /**
	     * Re-configures this formatter to use the delimiters appropriate
	     * for the given text.
	     *
	     * @param {string} text A potentially formatted string containing a phone number.
	     * @private
	     */
	
	  }, {
	    key: 'guessFormatFromText',
	    value: function guessFormatFromText(text) {
	      currentCountryCode = DEFAULT_COUNTRY_CODE;
	      if (text && text[0] === '+') {
	        if (text.length > 1) {
	          var isValidCountryCode = function isValidCountryCode(countryCode) {
	            var matchingCodes = COUNTRY_CODES.filter(function (country) {
	              return country.E164 === countryCode;
	            });
	
	            return matchingCodes.length > 0;
	          };
	
	          var rawText = this.removeDelimiterMapChars(text);
	          if (currentCountryCode = isValidCountryCode(rawText[1])) {
	            this.delimiterMap = E164PhoneDelimitersWithOneDigit;
	            this.maximumLength = 1 + 1 + 10 + 5;
	          } else if (text.length > 2 && (currentCountryCode = isValidCountryCode(rawText.slice(1, 3)))) {
	            this.delimiterMap = E164PhoneDelimitersWithTwoDigit;
	            this.maximumLength = 1 + 2 + 10 + 5;
	          } else {
	            currentCountryCode = isValidCountryCode(rawText.slice(1, 4)) || DEFAULT_COUNTRY_CODE;
	            this.delimiterMap = E164PhoneDelimitersWithThreeDigit;
	            this.maximumLength = 1 + 3 + 10 + 5;
	          }
	        } else {
	
	          this.delimiterMap = E164PhoneDelimitersWithThreeDigit;
	          this.maximumLength = 1 + 3 + 10 + 5;
	        }
	      } else if (text && text[0] === '1') {
	        this.delimiterMap = NANPPhoneDelimitersWithOne;
	        this.maximumLength = 1 + 10 + 5;
	      } else if (text && text[0] === ' ') {
	        this.delimiterMap = NANPPhoneDelimiters;
	        this.maximumLength = 10 + 5;
	      } else {
	        this.delimiterMap = NANPPhoneDelimiters;
	        this.maximumLength = 10 + 4;
	      }
	    }
	
	    /**
	     * Gives back just the phone number digits as a string without the
	     * country code. Future-proofing internationalization where the country code
	     * isn't just +1.
	     *
	     * @param {string} text
	     * @private
	     */
	
	  }, {
	    key: 'digitsWithoutCountryCode',
	    value: function digitsWithoutCountryCode(text) {
	      var digits = (text || '').replace(/[^\d]/g, '');
	      var extraDigits = digits.length - 10;
	      if (extraDigits > 0) {
	        digits = digits.substr(extraDigits);
	      }
	      return digits;
	    }
	
	    /**
	     * Removes characters from the phone number that will be added
	     * by the formatter.
	     *
	     * @param {string} text
	     * @private
	     */
	
	  }, {
	    key: 'removeDelimiterMapChars',
	    value: function removeDelimiterMapChars(text) {
	      return (text || '').replace(DELIMITER_PATTERN, '');
	    }
	  }]);
	
	  return PhoneFormatter;
	}(_delimited_text_formatter2.default);
	
	var COUNTRY_CODES = [{
	  "E164": "93",
	  "country": "Afghanistan"
	}, {
	  "E164": "355",
	  "country": "Albania"
	}, {
	  "E164": "213",
	  "country": "Algeria"
	}, {
	  "E164": "1",
	  "country": ["American Samoa", "Anguilla", "Antigua and Barbuda", "Bahamas", "Barbados", "Bermuda", "British Virgin Islands", "Canada", "Cayman Islands", "Dominica", "Dominican Republic", "Grenada", "Guam", "Jamaica", "Montserrat", "Northern Mariana Islands", "Puerto Rico", "Saint Kitts and Nevis", "Saint Lucia", "Saint Martin", "Saint Vincent and the Grenadines", "Sint Maarten", "Trinidad and Tobago", "Turks and Caicos Islands", "U.S. Virgin Islands", "United States"]
	}, {
	  "E164": "376",
	  "country": "Andorra"
	}, {
	  "E164": "244",
	  "country": "Angola"
	}, {
	  "E164": "672",
	  "country": "Antarctica"
	}, {
	  "E164": "54",
	  "country": "Argentina"
	}, {
	  "E164": "374",
	  "country": "Armenia"
	}, {
	  "E164": "297",
	  "country": "Aruba"
	}, {
	  "E164": "43",
	  "country": "Austria"
	}, {
	  "E164": "994",
	  "country": "Azerbaijan"
	}, {
	  "E164": "973",
	  "country": "Bahrain"
	}, {
	  "E164": "880",
	  "country": "Bangladesh"
	}, {
	  "E164": "375",
	  "country": "Belarus"
	}, {
	  "E164": "32",
	  "country": "Belgium"
	}, {
	  "E164": "501",
	  "country": "Belize"
	}, {
	  "E164": "229",
	  "country": "Benin"
	}, {
	  "E164": "975",
	  "country": "Bhutan"
	}, {
	  "E164": "591",
	  "country": "Bolivia"
	}, {
	  "E164": "387",
	  "country": "Bosnia and Herzegovina"
	}, {
	  "E164": "267",
	  "country": "Botswana"
	}, {
	  "E164": "55",
	  "country": "Brazil"
	}, {
	  "E164": "246",
	  "country": "British Indian Ocean Territory"
	}, {
	  "E164": "673",
	  "country": "Brunei"
	}, {
	  "E164": "359",
	  "country": "Bulgaria"
	}, {
	  "E164": "226",
	  "country": "Burkina Faso"
	}, {
	  "E164": "257",
	  "country": "Burundi"
	}, {
	  "E164": "855",
	  "country": "Cambodia"
	}, {
	  "E164": "237",
	  "country": "Cameroon"
	}, {
	  "E164": "238",
	  "country": "Cape Verde"
	}, {
	  "E164": "236",
	  "country": "Central African Republic"
	}, {
	  "E164": "235",
	  "country": "Chad"
	}, {
	  "E164": "56",
	  "country": "Chile"
	}, {
	  "E164": "86",
	  "country": "China"
	}, {
	  "E164": "61",
	  "country": ["Australia", "Christmas Island", "Cocos Islands"]
	}, {
	  "E164": "57",
	  "country": "Colombia"
	}, {
	  "E164": "269",
	  "country": "Comoros"
	}, {
	  "E164": "682",
	  "country": "Cook Islands"
	}, {
	  "E164": "506",
	  "country": "Costa Rica"
	}, {
	  "E164": "385",
	  "country": "Croatia"
	}, {
	  "E164": "53",
	  "country": "Cuba"
	}, {
	  "E164": "599",
	  "country": ["Curacao", "Netherlands Antilles"]
	}, {
	  "E164": "357",
	  "country": "Cyprus"
	}, {
	  "E164": "420",
	  "country": "Czech Republic"
	}, {
	  "E164": "243",
	  "country": "Democratic Republic of the Congo"
	}, {
	  "E164": "45",
	  "country": "Denmark"
	}, {
	  "E164": "253",
	  "country": "Djibouti"
	}, {
	  "E164": "670",
	  "country": "East Timor"
	}, {
	  "E164": "593",
	  "country": "Ecuador"
	}, {
	  "E164": "20",
	  "country": "Egypt"
	}, {
	  "E164": "503",
	  "country": "El Salvador"
	}, {
	  "E164": "240",
	  "country": "Equatorial Guinea"
	}, {
	  "E164": "291",
	  "country": "Eritrea"
	}, {
	  "E164": "372",
	  "country": "Estonia"
	}, {
	  "E164": "251",
	  "country": "Ethiopia"
	}, {
	  "E164": "500",
	  "country": "Falkland Islands"
	}, {
	  "E164": "298",
	  "country": "Faroe Islands"
	}, {
	  "E164": "679",
	  "country": "Fiji"
	}, {
	  "E164": "358",
	  "country": "Finland"
	}, {
	  "E164": "33",
	  "country": "France"
	}, {
	  "E164": "689",
	  "country": "French Polynesia"
	}, {
	  "E164": "241",
	  "country": "Gabon"
	}, {
	  "E164": "220",
	  "country": "Gambia"
	}, {
	  "E164": "995",
	  "country": "Georgia"
	}, {
	  "E164": "49",
	  "country": "Germany"
	}, {
	  "E164": "233",
	  "country": "Ghana"
	}, {
	  "E164": "350",
	  "country": "Gibraltar"
	}, {
	  "E164": "30",
	  "country": "Greece"
	}, {
	  "E164": "299",
	  "country": "Greenland"
	}, {
	  "E164": "502",
	  "country": "Guatemala"
	}, {
	  "E164": "44",
	  "country": ["Guernsey", "Isle of Man", "Jersey", "United Kingdom"]
	}, {
	  "E164": "224",
	  "country": "Guinea"
	}, {
	  "E164": "245",
	  "country": "Guinea-Bissau"
	}, {
	  "E164": "592",
	  "country": "Guyana"
	}, {
	  "E164": "509",
	  "country": "Haiti"
	}, {
	  "E164": "504",
	  "country": "Honduras"
	}, {
	  "E164": "852",
	  "country": "Hong Kong"
	}, {
	  "E164": "36",
	  "country": "Hungary"
	}, {
	  "E164": "354",
	  "country": "Iceland"
	}, {
	  "E164": "91",
	  "country": "India"
	}, {
	  "E164": "62",
	  "country": "Indonesia"
	}, {
	  "E164": "98",
	  "country": "Iran"
	}, {
	  "E164": "964",
	  "country": "Iraq"
	}, {
	  "E164": "353",
	  "country": "Ireland"
	}, {
	  "E164": "972",
	  "country": "Israel"
	}, {
	  "E164": "39",
	  "country": ["Italy", "Vatican"]
	}, {
	  "E164": "225",
	  "country": "Ivory Coast"
	}, {
	  "E164": "81",
	  "country": "Japan"
	}, {
	  "E164": "962",
	  "country": "Jordan"
	}, {
	  "E164": "7",
	  "country": ["Kazakhstan", "Russia"],
	  "localizedFormat": {
	    "maximumLength": 1 + 1 + 10 + 6,
	    2: ' ',
	    3: '(',
	    7: ')',
	    8: ' ',
	    12: '-',
	    15: '-'
	  }
	}, {
	  "E164": "254",
	  "country": "Kenya"
	}, {
	  "E164": "686",
	  "country": "Kiribati"
	}, {
	  "E164": "383",
	  "country": "Kosovo"
	}, {
	  "E164": "965",
	  "country": "Kuwait"
	}, {
	  "E164": "996",
	  "country": "Kyrgyzstan"
	}, {
	  "E164": "856",
	  "country": "Laos"
	}, {
	  "E164": "371",
	  "country": "Latvia"
	}, {
	  "E164": "961",
	  "country": "Lebanon"
	}, {
	  "E164": "266",
	  "country": "Lesotho"
	}, {
	  "E164": "231",
	  "country": "Liberia"
	}, {
	  "E164": "218",
	  "country": "Libya"
	}, {
	  "E164": "423",
	  "country": "Liechtenstein"
	}, {
	  "E164": "370",
	  "country": "Lithuania"
	}, {
	  "E164": "352",
	  "country": "Luxembourg"
	}, {
	  "E164": "853",
	  "country": "Macao"
	}, {
	  "E164": "389",
	  "country": "Macedonia"
	}, {
	  "E164": "261",
	  "country": "Madagascar"
	}, {
	  "E164": "265",
	  "country": "Malawi"
	}, {
	  "E164": "60",
	  "country": "Malaysia"
	}, {
	  "E164": "960",
	  "country": "Maldives"
	}, {
	  "E164": "223",
	  "country": "Mali"
	}, {
	  "E164": "356",
	  "country": "Malta"
	}, {
	  "E164": "692",
	  "country": "Marshall Islands"
	}, {
	  "E164": "222",
	  "country": "Mauritania"
	}, {
	  "E164": "230",
	  "country": "Mauritius"
	}, {
	  "E164": "262",
	  "country": ["Mayotte", "Reunion"]
	}, {
	  "E164": "52",
	  "country": "Mexico"
	}, {
	  "E164": "691",
	  "country": "Micronesia"
	}, {
	  "E164": "373",
	  "country": "Moldova"
	}, {
	  "E164": "377",
	  "country": "Monaco"
	}, {
	  "E164": "976",
	  "country": "Mongolia"
	}, {
	  "E164": "382",
	  "country": "Montenegro"
	}, {
	  "E164": "212",
	  "country": ["Morocco", "Western Sahara"]
	}, {
	  "E164": "258",
	  "country": "Mozambique"
	}, {
	  "E164": "95",
	  "country": "Myanmar"
	}, {
	  "E164": "264",
	  "country": "Namibia"
	}, {
	  "E164": "674",
	  "country": "Nauru"
	}, {
	  "E164": "977",
	  "country": "Nepal"
	}, {
	  "E164": "31",
	  "country": "Netherlands"
	}, {
	  "E164": "687",
	  "country": "New Caledonia"
	}, {
	  "E164": "64",
	  "country": "New Zealand"
	}, {
	  "E164": "64",
	  "country": "Pitcairn"
	}, {
	  "E164": "505",
	  "country": "Nicaragua"
	}, {
	  "E164": "227",
	  "country": "Niger"
	}, {
	  "E164": "234",
	  "country": "Nigeria"
	}, {
	  "E164": "683",
	  "country": "Niue"
	}, {
	  "E164": "850",
	  "country": "North Korea"
	}, {
	  "E164": "47",
	  "country": ["Norway", "Svalbard and Jan Mayen"]
	}, {
	  "E164": "968",
	  "country": "Oman"
	}, {
	  "E164": "92",
	  "country": "Pakistan"
	}, {
	  "E164": "680",
	  "country": "Palau"
	}, {
	  "E164": "970",
	  "country": "Palestine"
	}, {
	  "E164": "507",
	  "country": "Panama"
	}, {
	  "E164": "675",
	  "country": "Papua New Guinea"
	}, {
	  "E164": "595",
	  "country": "Paraguay"
	}, {
	  "E164": "51",
	  "country": "Peru"
	}, {
	  "E164": "63",
	  "country": "Philippines"
	}, {
	  "E164": "48",
	  "country": "Poland"
	}, {
	  "E164": "351",
	  "country": "Portugal"
	}, {
	  "E164": "974",
	  "country": "Qatar"
	}, {
	  "E164": "242",
	  "country": "Republic of the Congo"
	}, {
	  "E164": "40",
	  "country": "Romania"
	}, {
	  "E164": "250",
	  "country": "Rwanda"
	}, {
	  "E164": "590",
	  "country": "Saint Barthelemy"
	}, {
	  "E164": "290",
	  "country": "Saint Helena"
	}, {
	  "E164": "508",
	  "country": "Saint Pierre and Miquelon"
	}, {
	  "E164": "685",
	  "country": "Samoa"
	}, {
	  "E164": "378",
	  "country": "San Marino"
	}, {
	  "E164": "239",
	  "country": "Sao Tome and Principe"
	}, {
	  "E164": "966",
	  "country": "Saudi Arabia"
	}, {
	  "E164": "221",
	  "country": "Senegal"
	}, {
	  "E164": "381",
	  "country": "Serbia"
	}, {
	  "E164": "248",
	  "country": "Seychelles"
	}, {
	  "E164": "232",
	  "country": "Sierra Leone"
	}, {
	  "E164": "65",
	  "country": "Singapore"
	}, {
	  "E164": "421",
	  "country": "Slovakia"
	}, {
	  "E164": "386",
	  "country": "Slovenia"
	}, {
	  "E164": "677",
	  "country": "Solomon Islands"
	}, {
	  "E164": "252",
	  "country": "Somalia"
	}, {
	  "E164": "27",
	  "country": "South Africa"
	}, {
	  "E164": "82",
	  "country": "South Korea"
	}, {
	  "E164": "211",
	  "country": "South Sudan"
	}, {
	  "E164": "34",
	  "country": "Spain"
	}, {
	  "E164": "94",
	  "country": "Sri Lanka"
	}, {
	  "E164": "249",
	  "country": "Sudan"
	}, {
	  "E164": "597",
	  "country": "Suriname"
	}, {
	  "E164": "268",
	  "country": "Swaziland"
	}, {
	  "E164": "46",
	  "country": "Sweden"
	}, {
	  "E164": "41",
	  "country": "Switzerland"
	}, {
	  "E164": "963",
	  "country": "Syria"
	}, {
	  "E164": "886",
	  "country": "Taiwan"
	}, {
	  "E164": "992",
	  "country": "Tajikistan"
	}, {
	  "E164": "255",
	  "country": "Tanzania"
	}, {
	  "E164": "66",
	  "country": "Thailand"
	}, {
	  "E164": "228",
	  "country": "Togo"
	}, {
	  "E164": "690",
	  "country": "Tokelau"
	}, {
	  "E164": "676",
	  "country": "Tonga"
	}, {
	  "E164": "216",
	  "country": "Tunisia"
	}, {
	  "E164": "90",
	  "country": "Turkey"
	}, {
	  "E164": "993",
	  "country": "Turkmenistan"
	}, {
	  "E164": "688",
	  "country": "Tuvalu"
	}, {
	  "E164": "256",
	  "country": "Uganda"
	}, {
	  "E164": "380",
	  "country": "Ukraine"
	}, {
	  "E164": "971",
	  "country": "United Arab Emirates"
	}, {
	  "E164": "598",
	  "country": "Uruguay"
	}, {
	  "E164": "998",
	  "country": "Uzbekistan"
	}, {
	  "E164": "678",
	  "country": "Vanuatu"
	}, {
	  "E164": "58",
	  "country": "Venezuela"
	}, {
	  "E164": "84",
	  "country": "Vietnam"
	}, {
	  "E164": "681",
	  "country": "Wallis and Futuna"
	}, {
	  "E164": "967",
	  "country": "Yemen"
	}, {
	  "E164": "260",
	  "country": "Zambia"
	}, {
	  "E164": "263",
	  "country": "Zimbabwe"
	}];
	exports.default = PhoneFormatter;

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _delimited_text_formatter = __webpack_require__(258);
	
	var _delimited_text_formatter2 = _interopRequireDefault(_delimited_text_formatter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/**
	 * @const
	 * @private
	 */
	var DIGITS_PATTERN = /^\d*$/;
	
	/**
	 * @extends DelimitedTextFormatter
	 */
	
	var SocialSecurityNumberFormatter = function (_DelimitedTextFormatt) {
	  _inherits(SocialSecurityNumberFormatter, _DelimitedTextFormatt);
	
	  function SocialSecurityNumberFormatter() {
	    _classCallCheck(this, SocialSecurityNumberFormatter);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SocialSecurityNumberFormatter).call(this, '-'));
	
	    _this.maximumLength = 9 + 2;
	    return _this;
	  }
	
	  /**
	   * @param {number} index
	   * @returns {boolean}
	   */
	
	
	  _createClass(SocialSecurityNumberFormatter, [{
	    key: 'hasDelimiterAtIndex',
	    value: function hasDelimiterAtIndex(index) {
	      return index === 3 || index === 6;
	    }
	
	    /**
	     * Determines whether the given change should be allowed and, if so, whether
	     * it should be altered.
	     *
	     * @param {TextFieldStateChange} change
	     * @param {function(string)} error
	     * @returns {boolean}
	     */
	
	  }, {
	    key: 'isChangeValid',
	    value: function isChangeValid(change, error) {
	      if (DIGITS_PATTERN.test(change.inserted.text)) {
	        return _get(Object.getPrototypeOf(SocialSecurityNumberFormatter.prototype), 'isChangeValid', this).call(this, change, error);
	      } else {
	        return false;
	      }
	    }
	  }]);
	
	  return SocialSecurityNumberFormatter;
	}(_delimited_text_formatter2.default);
	
	exports.default = SocialSecurityNumberFormatter;

/***/ },
/* 275 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var CARD_NUMBER = exports.CARD_NUMBER = 'CreditCardNumber';
	var EXPIRATION_DATE = exports.EXPIRATION_DATE = 'CreditCardExpirationDate';
	var SECURITY_CODE = exports.SECURITY_CODE = 'CreditCardSecurityCode';
	
	// Ghost field classes
	var ABBREVIATED_CARD_NUMBER_GHOST_CLASS = exports.ABBREVIATED_CARD_NUMBER_GHOST_CLASS = 'AbbreviatedCardNumberGhost';
	var CARD_NUMBER_GHOST_CLASS = exports.CARD_NUMBER_GHOST_CLASS = 'CardNumberGhost';
	var FIELDS_CLASS = exports.FIELDS_CLASS = 'fields';

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _CreditCardPaymentInput = __webpack_require__(277);
	
	var _CreditCardPaymentInput2 = _interopRequireDefault(_CreditCardPaymentInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const DELETE_KEY_CODE = 46
	
	function setup(propOverrides) {
		var props = Object.assign({
			icon: 'back',
			placeholder: 'hi',
			payment: {
				cardNumber: {
					status: '',
					value: '1234567891098876',
					cursorPosition: null
				},
				expirationDate: {
					status: '',
					values: {
						month: '12',
						year: '2020'
					},
					cursorPosition: null
				},
				securityCode: {
					status: '',
					value: '1234',
					cursorPosition: null
				},
				formState: {
					currentField: paymentFormStates.CARD_NUMBER
				}
	
			},
			onCreditCardChange: _expect2.default.createSpy(),
			onCreditCardFocus: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_CreditCardPaymentInput2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
		// instance.abbreviatedCardNumberGhost = document.createElement('div')
		// instance.cardNumberGhost = document.createElement('div')
		// instance.creditCardInput = document.createElement('div')
		// instance.originalCreditCardInputWidth = document.createElement('div')
		// instance.fields = document.createElement('div')
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('CreditCardPaymentInput', function () {
		it('should render an input field', function () {
			var _setup = setup();
	
			var output = _setup.output;
			// let [ svg, fieldsContainer ] = output.props.children
			// let fields = fieldsContainer.props.children
			// let [ cardNumberInput, expirationDateInput, securityCodeInput ] = fields.props.children
	
			(0, _expect2.default)(output.type).toBe('div');
			(0, _expect2.default)(output.props.className).toBe('Input CreditCardPaymentInput ' + paymentFormStates.CARD_NUMBER + ' ');
	
			// Can't test types of children because they're wrapped in <Motion> object
			// expect( cardNumberInput.type ).toBe('input')
			// expect( cardNumberInput.props.className ).toBe('CardNumber')
	
			// expect( expirationDateInput.type ).toBe('input')
			// expect( expirationDateInput.props.className ).toBe('ExpirationDate')
	
			// expect( securityCodeInput.type ).toBe('input')
			// expect( securityCodeInput.props.className ).toBe('SecurityCode')
		});
	
		it('should render in error when credit card number is invalid', function () {
			var _setup2 = setup({ payment: {
					cardNumber: { status: inputStates.INVALID },
					expirationDate: { status: inputStates.VALID },
					securityCode: { status: inputStates.VALID },
					formState: { currentField: paymentFormStates.CARD_NUMBER }
				} });
	
			var output = _setup2.output;
	
	
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		it('should render in error when credit card number is invalid', function () {
			var _setup3 = setup({ payment: {
					cardNumber: { status: inputStates.VALID },
					expirationDate: { status: inputStates.INVALID },
					securityCode: { status: inputStates.VALID },
					formState: { currentField: paymentFormStates.CARD_NUMBER }
				} });
	
			var output = _setup3.output;
	
	
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		it('should render in error when credit card number is invalid', function () {
			var _setup4 = setup({ payment: {
					cardNumber: { status: inputStates.VALID },
					expirationDate: { status: inputStates.VALID },
					securityCode: { status: inputStates.INVALID },
					formState: { currentField: paymentFormStates.CARD_NUMBER }
				} });
	
			var output = _setup4.output;
	
	
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		describe('Getting an Abbreviated Card Number', function () {
			it('should get an abbreviated non-amex card number', function () {
				var _setup5 = setup({ payment: {
						cardNumber: {
							value: '424242424242424',
							type: 'visa',
							status: inputStates.VALID
						},
						expirationDate: { status: inputStates.VALID },
						securityCode: { status: inputStates.INVALID },
						formState: { currentField: paymentFormStates.CARD_NUMBER }
					} });
	
				var instance = _setup5.instance;
	
	
				(0, _expect2.default)(instance.getAbbreviatedCardNumber()).toEqual('2424');
			});
	
			it('should get an abbreviated amex card number', function () {
				var _setup6 = setup({ payment: {
						cardNumber: {
							value: '4242424242424242',
							type: 'amex',
							status: inputStates.VALID
						},
						expirationDate: { status: inputStates.VALID },
						securityCode: { status: inputStates.INVALID },
						formState: { currentField: paymentFormStates.CARD_NUMBER }
					} });
	
				var instance = _setup6.instance;
	
	
				(0, _expect2.default)(instance.getAbbreviatedCardNumber()).toEqual('24242');
			});
		});
	
		describe('Transitioning Between Fields', function () {
			describe('Getting Field Styles', function () {
				it('should return default styles if the field variables have not been initialized', function () {
					var _setup7 = setup();
	
					var instance = _setup7.instance;
	
					(0, _expect2.default)(instance.getFieldStyles()).toEqual({
						cardNumberFieldWidth: 200,
						cardNumberFieldLeftPosition: 0,
						otherFieldsWidth: 2
					});
				});
	
				it('should return default styles if the currentField is CreditCardNumber', function () {
					var _setup8 = setup();
	
					var instance = _setup8.instance;
	
					(0, _expect2.default)(instance.getFieldStyles()).toEqual({
						cardNumberFieldWidth: 200,
						cardNumberFieldLeftPosition: 0,
						otherFieldsWidth: 2
					});
				});
	
				it('should return a cardNumberFieldWidth equal to length of the numbers in the field', function () {
					var _setup9 = setup();
	
					var instance = _setup9.instance;
	
					instance.props.payment.formState.currentField = paymentFormStates.EXPIRATION_DATE;
					instance.cardNumberGhost = { scrollWidth: 100 };
					(0, _expect2.default)(instance.getFieldStyles().cardNumberFieldWidth).toBe(100);
				});
	
				it('should return a cardNumberFieldLeftPosition equal to the negative difference between the size of the field and the size of the last 4 digits', function () {
					var _setup10 = setup();
	
					var instance = _setup10.instance;
	
					instance.props.payment.formState.currentField = paymentFormStates.EXPIRATION_DATE;
					instance.cardNumberGhost = { scrollWidth: 100 };
					instance.abbreviatedCardNumberGhost = { scrollWidth: 50 };
					(0, _expect2.default)(instance.getFieldStyles().cardNumberFieldLeftPosition).toBe(-50 + 16);
				});
	
				it('should return a otherFieldsWidth equal to half the remaining space in the field', function () {
					var _setup11 = setup();
	
					var instance = _setup11.instance;
	
					instance.props.payment.formState.currentField = paymentFormStates.EXPIRATION_DATE;
					instance.fields = { scrollWidth: 200 };
					instance.abbreviatedCardNumberGhost = { scrollWidth: 50 };
					(0, _expect2.default)(instance.getFieldStyles().otherFieldsWidth).toBe(75 - 16);
				});
			});
		});
	});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _svgInlineReact = __webpack_require__(278);
	
	var _svgInlineReact2 = _interopRequireDefault(_svgInlineReact);
	
	var _DonationCreditCardNumberInput = __webpack_require__(279);
	
	var _DonationCreditCardNumberInput2 = _interopRequireDefault(_DonationCreditCardNumberInput);
	
	var _DonationCreditCardExpirationDateInput = __webpack_require__(302);
	
	var _DonationCreditCardExpirationDateInput2 = _interopRequireDefault(_DonationCreditCardExpirationDateInput);
	
	var _DonationCreditCardSecurityCodeInput = __webpack_require__(303);
	
	var _DonationCreditCardSecurityCodeInput2 = _interopRequireDefault(_DonationCreditCardSecurityCodeInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	__webpack_require__(246);
	
	__webpack_require__(250);
	
	var _reactMotion = __webpack_require__(305);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ERROR_ICON = 'warning';
	
	var CreditCardPaymentInput = _react2.default.createClass({
		displayName: 'CreditCardPaymentInput',
	
	
		componentDidMount: function componentDidMount() {
	
			// Focus on the correct field
			// switch ( this.props.payment.formStatescurrentField ) {
			// 	case paymentFormStates.CARD_NUMBER:
			// 		ReactDOM.findDOMNode( this.cardNumberInput ).focus()
			// 		break
			// 	case paymentFormStates.EXPIRATION_DATE:
			// 		ReactDOM.findDOMNode( this.expirationDateInput ).focus()
			// 		break
			// 	case paymentFormStates.SECURITY_CODE:
			// 		ReactDOM.findDOMNode( this.securityCodeInput ).focus()
			// 		break
			// 	default:
			// 		ReactDOM.findDOMNode( this.cardNumberInput ).focus()
			// }
		},
	
		getFieldStyles: function getFieldStyles() {
			var currentField = this.props.payment.formState.currentField;
	
			// Set default styles
			var styles = {
				cardNumberFieldWidth: 200,
				cardNumberFieldLeftPosition: 0,
				otherFieldsWidth: 2
			};
	
			// It's possible that the card number ghosts are currently in the DOM,
			// but haven't been rendered yet in the context of this component.
			// As a result, we need to check whether they actually exist outside of REACT,
			// and potentially use their sizes directly until the REACT ref is available.
			var cardNumberGhostWidth = this.cardNumberGhost ? this.cardNumberGhost.scrollWidth : this.props.payment.formState.cardNumberGhostWidth;
			var abbreviatedCardNumberGhostWidth = this.abbreviatedCardNumberGhost ? this.abbreviatedCardNumberGhost.scrollWidth : this.props.payment.formState.abbreviatedCardNumberGhostWidth;
			var fieldsWidth = this.fields ? this.fields.scrollWidth : this.props.payment.formState.fieldsWidth;
	
			// Only set styles different from default
			// if we're not in credit card number mode
			if (currentField !== paymentFormStates.CARD_NUMBER) {
				if (cardNumberGhostWidth) {
					styles.cardNumberFieldWidth = cardNumberGhostWidth;
				}
				if (fieldsWidth && abbreviatedCardNumberGhostWidth) {
					styles.otherFieldsWidth = (fieldsWidth - abbreviatedCardNumberGhostWidth) / 2 - 16;
				}
	
				if (cardNumberGhostWidth && abbreviatedCardNumberGhostWidth) {
					styles.cardNumberFieldLeftPosition = -(cardNumberGhostWidth - abbreviatedCardNumberGhostWidth) + 16; // Always add 8 because this trails the last character added by the user
				}
			}
	
			return styles;
		},
	
		getCardNumber: function getCardNumber() {
			var number = '';
	
			if (this.cardNumberInput && this.cardNumberInput.getWrappedInstance().field) {
				number = this.cardNumberInput.getWrappedInstance().field.value();
			}
	
			return number;
		},
	
		getAbbreviatedCardNumber: function getAbbreviatedCardNumber() {
			// let number = ''
	
			// if ( this.cardNumberInput && this.cardNumberInput.getWrappedInstance().field ) {
			// 	let field = this.cardNumberInput.getWrappedInstance().field
			// 	number = field.cardType() === 'amex' ? field.value().slice( -5 ) : field.value().slice( -4 )
			// }
	
			// return number
	
			return this.props.payment.cardNumber.type === 'amex' ? this.props.payment.cardNumber.value.slice(-5) : this.props.payment.cardNumber.value.slice(-4);
		},
	
		render: function render() {
			var _this = this;
	
			// let creditCardNumberInputWidthWhenCurrentField = this.originalCreditCardInputWidth ? this.originalCreditCardInputWidth : 180
	
			var _getFieldStyles = this.getFieldStyles();
	
			var cardNumberFieldWidth = _getFieldStyles.cardNumberFieldWidth;
			var cardNumberFieldLeftPosition = _getFieldStyles.cardNumberFieldLeftPosition;
			var otherFieldsWidth = _getFieldStyles.otherFieldsWidth;
	
			var style = {
				cardNumberFieldWidth: (0, _reactMotion.spring)(cardNumberFieldWidth),
				otherFieldsWidth: (0, _reactMotion.spring)(otherFieldsWidth),
				cardNumberFieldLeftPosition: (0, _reactMotion.spring)(cardNumberFieldLeftPosition)
			};
	
			// Check whether we should render in an error state
			var icon = this.props.icon,
			    errorClass = '';
			if (this.props.payment.cardNumber.status === inputStates.INVALID || this.props.payment.cardNumber.status === inputStates.EXPIRED || this.props.payment.cardNumber.status === inputStates.INCORRECT || this.props.payment.cardNumber.status === inputStates.DECLINED || this.props.payment.expirationDate.status === inputStates.INVALID || this.props.payment.securityCode.status === inputStates.INVALID || this.props.payment.securityCode.status === inputStates.INCORRECT) {
	
				icon = ERROR_ICON;
				errorClass = 'Error';
			}
	
			return _react2.default.createElement(
				'div',
				{ className: 'Input CreditCardPaymentInput ' + this.props.payment.formState.currentField + ' ' + errorClass },
				_react2.default.createElement(_svgInlineReact2.default, { src: __webpack_require__(319)("./" + icon + '.svg') }),
				_react2.default.createElement(
					'div',
					{ className: 'fields-container' },
					_react2.default.createElement(
						_reactMotion.Motion,
						{ style: style },
						function (interpolatedStyle) {
							return _react2.default.createElement(
								'div',
								{ className: paymentFormStates.FIELDS_CLASS,
									key: 'fields',
									ref: function ref(_ref6) {
										return _this.fields = _ref6;
									}
								},
								_react2.default.createElement(
									'div',
									{ className: paymentFormStates.ABBREVIATED_CARD_NUMBER_GHOST_CLASS,
										ref: function ref(_ref) {
											return _this.abbreviatedCardNumberGhost = _ref;
										} },
									_this.getAbbreviatedCardNumber()
								),
								_react2.default.createElement(
									'div',
									{ className: paymentFormStates.CARD_NUMBER_GHOST_CLASS,
										ref: function ref(_ref2) {
											return _this.cardNumberGhost = _ref2;
										} },
									 /*this.getCardNumber()*/_this.props.payment.cardNumber.value
								),
								_react2.default.createElement(_DonationCreditCardNumberInput2.default, {
									style: {
										width: interpolatedStyle.cardNumberFieldWidth + 'px',
										marginLeft: interpolatedStyle.cardNumberFieldLeftPosition + 'px'
									},
									cardNumber: _this.props.payment.cardNumber,
									ref: function ref(_ref3) {
										return _this.cardNumberInput = _ref3;
									},
									onShouldMoveToExpirationDateField: function onShouldMoveToExpirationDateField() {
										return _reactDom2.default.findDOMNode(_this.expirationDateInput).focus();
									}
								}),
								_react2.default.createElement(_DonationCreditCardExpirationDateInput2.default, {
									expirationDate: _this.props.payment.expirationDate,
									style: {
										width: interpolatedStyle.otherFieldsWidth + 'px'
									},
									ref: function ref(_ref4) {
										return _this.expirationDateInput = _ref4;
									},
									onShouldMoveToSecurityCodeField: function onShouldMoveToSecurityCodeField() {
										return _reactDom2.default.findDOMNode(_this.securityCodeInput).focus();
									}
								}),
								_react2.default.createElement(_DonationCreditCardSecurityCodeInput2.default, {
									securityCode: _this.props.payment.securityCode,
									style: {
										width: interpolatedStyle.otherFieldsWidth + 'px'
									},
									ref: function ref(_ref5) {
										return _this.securityCodeInput = _ref5;
									}
								})
							);
						}
					)
				)
			);
		}
	});
	
	exports.default = CreditCardPaymentInput;

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	Object.defineProperty(exports, '__esModule', {
	    value: true
	});
	
	var _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	        var source = arguments[i];for (var key in source) {
	            if (Object.prototype.hasOwnProperty.call(source, key)) {
	                target[key] = source[key];
	            }
	        }
	    }return target;
	};
	
	var _createClass = function () {
	    function defineProperties(target, props) {
	        for (var i = 0; i < props.length; i++) {
	            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	        }
	    }return function (Constructor, protoProps, staticProps) {
	        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	    };
	}();
	
	var _get = function get(_x, _x2, _x3) {
	    var _again = true;_function: while (_again) {
	        var object = _x,
	            property = _x2,
	            receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
	            var parent = Object.getPrototypeOf(object);if (parent === null) {
	                return undefined;
	            } else {
	                _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
	            }
	        } else if ('value' in desc) {
	            return desc.value;
	        } else {
	            var getter = desc.get;if (getter === undefined) {
	                return undefined;
	            }return getter.call(receiver);
	        }
	    }
	};
	
	function _interopRequireDefault(obj) {
	    return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	        throw new TypeError('Cannot call a class as a function');
	    }
	}
	
	function _inherits(subClass, superClass) {
	    if (typeof superClass !== 'function' && superClass !== null) {
	        throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var DOMParser = typeof window !== 'undefined' && window.DOMParser;
	
	function isParserAvailable(src) {
	    // kinda naive but meh, ain't gonna use full-blown parser for this
	    return typeof DOMParser === 'function' && typeof src === 'string' && src.trim().substr(0, 4) === '<svg';
	}
	
	// parse SVG string using `DOMParser`
	function parseFromSVGString(src) {
	    var parser = new DOMParser();
	    return parser.parseFromString(src, "image/svg+xml");
	}
	
	// Transform DOM prop/attr names applicable to `<svg>` element but react-limited
	function switchSVGAttrToReactProp(propName) {
	    switch (propName) {
	        case 'class':
	            return 'className';
	        default:
	            return propName;
	    }
	}
	
	var InlineSVG = function (_React$Component) {
	    _inherits(InlineSVG, _React$Component);
	
	    function InlineSVG() {
	        _classCallCheck(this, InlineSVG);
	
	        _get(Object.getPrototypeOf(InlineSVG.prototype), 'constructor', this).call(this);
	        this._extractSVGProps = this._extractSVGProps.bind(this);
	    }
	
	    // Serialize `Attr` objects in `NamedNodeMap`
	
	    _createClass(InlineSVG, [{
	        key: '_serializeAttrs',
	        value: function _serializeAttrs(map) {
	            var ret = {};
	            var prop;
	            for (var i = 0; i < map.length; i++) {
	                prop = switchSVGAttrToReactProp(map[i].name);
	                ret[prop] = map[i].value;
	            }
	            return ret;
	        }
	
	        // get <svg /> element props
	    }, {
	        key: '_extractSVGProps',
	        value: function _extractSVGProps(src) {
	            var map = parseFromSVGString(src).documentElement.attributes;
	            return map.length > 0 ? this._serializeAttrs(map) : null;
	        }
	
	        // get content inside <svg> element.
	    }, {
	        key: '_stripSVG',
	        value: function _stripSVG(src) {
	            return parseFromSVGString(src).documentElement.innerHTML;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var svgProps = {};
	            var src = this.props.src;
	            var __html = src;
	            var Element = this.props.element;
	
	            if (this.props.children != null) {
	                console.info('<InlineSVG />: `children` will be always ignored.');
	            }
	
	            if (this.props.raw === true) {
	                if (isParserAvailable(src)) {
	                    Element = 'svg';
	                    svgProps = this._extractSVGProps(src);
	                    __html = this._stripSVG(src);
	                } else {
	                    console && console.info('<InlineSVG />: `raw` prop works only when `window.DOMParser` exists.');
	                }
	            }
	
	            return _react2['default'].createElement(Element, _extends({}, svgProps, this.props, { src: null, children: null,
	                dangerouslySetInnerHTML: { __html: __html } }));
	        }
	    }]);
	
	    return InlineSVG;
	}(_react2['default'].Component);
	
	exports['default'] = InlineSVG;
	
	InlineSVG.defaultProps = { element: 'i' };
	InlineSVG.propTypes = {
	    src: _react2['default'].PropTypes.string.isRequired,
	    element: _react2['default'].PropTypes.string,
	    raw: _react2['default'].PropTypes.bool
	};
	module.exports = exports['default'];

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _CreditCardNumberInput = __webpack_require__(253);
	
	var _CreditCardNumberInput2 = _interopRequireDefault(_CreditCardNumberInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onChange: function onChange(value, type, formattedValue, state, cursorPosition, formState) {
				dispatch(actions.setCreditCardNumber(value, type, formattedValue, state, cursorPosition, formState));
			},
			onFocus: function onFocus() {
				dispatch(actions.didStartEditingCreditCardNumber());
			},
			onDidFinishEditing: function onDidFinishEditing() {
				dispatch(actions.didFinishEditingCreditCardNumber());
			}
		};
	};
	
	var DonationCreditCardNumberInput = (0, _reactRedux.connect)(null, mapDispatchToProps, null, { withRef: true })(_CreditCardNumberInput2.default);
	
	exports.default = DonationCreditCardNumberInput;

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(281);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connect = __webpack_require__(284);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.__esModule = true;
	exports["default"] = undefined;
	
	var _react = __webpack_require__(77);
	
	var _storeShape = __webpack_require__(282);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	var _warning = __webpack_require__(283);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2["default"])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	var Provider = function (_Component) {
	  _inherits(Provider, _Component);
	
	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };
	
	  function Provider(props, context) {
	    _classCallCheck(this, Provider);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	    _this.store = props.store;
	    return _this;
	  }
	
	  Provider.prototype.render = function render() {
	    var children = this.props.children;
	
	    return _react.Children.only(children);
	  };
	
	  return Provider;
	}(_react.Component);
	
	exports["default"] = Provider;
	
	if (process.env.NODE_ENV !== 'production') {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;
	
	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}
	
	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(77);
	
	exports["default"] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 283 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that you can use this stack
	    // to find the callsite that caused this warning to fire.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	exports.__esModule = true;
	exports["default"] = connect;
	
	var _react = __webpack_require__(77);
	
	var _storeShape = __webpack_require__(282);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	var _shallowEqual = __webpack_require__(285);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _wrapActionCreators = __webpack_require__(286);
	
	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);
	
	var _warning = __webpack_require__(283);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _isPlainObject = __webpack_require__(289);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _hoistNonReactStatics = __webpack_require__(300);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(301);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	var errorObject = { value: null };
	function tryCatch(fn, ctx) {
	  try {
	    return fn.apply(ctx);
	  } catch (e) {
	    errorObject.value = e;
	    return errorObject;
	  }
	}
	
	// Helps track hot reloading.
	var nextVersion = 0;
	
	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];
	
	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;
	
	  var mapDispatch = undefined;
	  if (typeof mapDispatchToProps === 'function') {
	    mapDispatch = mapDispatchToProps;
	  } else if (!mapDispatchToProps) {
	    mapDispatch = defaultMapDispatchToProps;
	  } else {
	    mapDispatch = (0, _wrapActionCreators2["default"])(mapDispatchToProps);
	  }
	
	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;
	
	  var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;
	
	  // Helps track hot reloading.
	  var version = nextVersion++;
	
	  return function wrapWithConnect(WrappedComponent) {
	    var connectDisplayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	
	    function checkStateShape(props, methodName) {
	      if (!(0, _isPlainObject2["default"])(props)) {
	        (0, _warning2["default"])(methodName + '() in ' + connectDisplayName + ' must return a plain object. ' + ('Instead received ' + props + '.'));
	      }
	    }
	
	    function computeMergedProps(stateProps, dispatchProps, parentProps) {
	      var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	      if (process.env.NODE_ENV !== 'production') {
	        checkStateShape(mergedProps, 'mergeProps');
	      }
	      return mergedProps;
	    }
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.store = props.store || context.store;
	
	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
	
	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }
	
	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }
	
	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);
	
	        if (process.env.NODE_ENV !== 'production') {
	          checkStateShape(stateProps, 'mapStateToProps');
	        }
	        return stateProps;
	      };
	
	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';
	
	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;
	
	        if (isFactory) {
	          return this.computeStateProps(store, props);
	        }
	
	        if (process.env.NODE_ENV !== 'production') {
	          checkStateShape(mappedState, 'mapStateToProps');
	        }
	        return mappedState;
	      };
	
	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }
	
	        var dispatch = store.dispatch;
	
	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);
	
	        if (process.env.NODE_ENV !== 'production') {
	          checkStateShape(dispatchProps, 'mapDispatchToProps');
	        }
	        return dispatchProps;
	      };
	
	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';
	
	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;
	
	        if (isFactory) {
	          return this.computeDispatchProps(store, props);
	        }
	
	        if (process.env.NODE_ENV !== 'production') {
	          checkStateShape(mappedDispatch, 'mapDispatchToProps');
	        }
	        return mappedDispatch;
	      };
	
	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }
	
	        this.stateProps = nextStateProps;
	        return true;
	      };
	
	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }
	
	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };
	
	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }
	
	        this.mergedProps = nextMergedProps;
	        return true;
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };
	
	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };
	
	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };
	
	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };
	
	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }
	
	        var storeState = this.store.getState();
	        var prevStoreState = this.state.storeState;
	        if (pure && prevStoreState === storeState) {
	          return;
	        }
	
	        if (pure && !this.doStatePropsDependOnOwnProps) {
	          var haveStatePropsChanged = tryCatch(this.updateStatePropsIfNeeded, this);
	          if (!haveStatePropsChanged) {
	            return;
	          }
	          if (haveStatePropsChanged === errorObject) {
	            this.statePropsPrecalculationError = errorObject.value;
	          }
	          this.haveStatePropsBeenPrecalculated = true;
	        }
	
	        this.hasStoreStateChanged = true;
	        this.setState({ storeState: storeState });
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');
	
	        return this.refs.wrappedInstance;
	      };
	
	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged;
	        var hasStoreStateChanged = this.hasStoreStateChanged;
	        var haveStatePropsBeenPrecalculated = this.haveStatePropsBeenPrecalculated;
	        var statePropsPrecalculationError = this.statePropsPrecalculationError;
	        var renderedElement = this.renderedElement;
	
	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;
	
	        if (statePropsPrecalculationError) {
	          throw statePropsPrecalculationError;
	        }
	
	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }
	
	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (haveStatePropsBeenPrecalculated) {
	          haveStatePropsChanged = true;
	        } else if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }
	
	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }
	
	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }
	
	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }
	
	        return this.renderedElement;
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.displayName = connectDisplayName;
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }
	
	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }
	
	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 285 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = wrapActionCreators;
	
	var _redux = __webpack_require__(287);
	
	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(288);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(295);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(297);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(298);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(299);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(296);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2["default"];
	exports.combineReducers = _combineReducers2["default"];
	exports.bindActionCreators = _bindActionCreators2["default"];
	exports.applyMiddleware = _applyMiddleware2["default"];
	exports.compose = _compose2["default"];

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports["default"] = createStore;
	
	var _isPlainObject = __webpack_require__(289);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(293);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [initialState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, initialState, enhancer) {
	  var _ref2;
	
	  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = initialState;
	    initialState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, initialState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = initialState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2["default"])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	
	      subscribe: function subscribe(observer) {
	        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2["default"]] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2["default"]] = observable, _ref2;
	}

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getPrototype = __webpack_require__(290),
	    isHostObject = __webpack_require__(291),
	    isObjectLike = __webpack_require__(292);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object,
	 *  else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;

/***/ },
/* 290 */
/***/ function(module, exports) {

	"use strict";
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetPrototype = Object.getPrototypeOf;
	
	/**
	 * Gets the `[[Prototype]]` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {null|Object} Returns the `[[Prototype]]`.
	 */
	function getPrototype(value) {
	  return nativeGetPrototype(Object(value));
	}
	
	module.exports = getPrototype;

/***/ },
/* 291 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}
	
	module.exports = isHostObject;

/***/ },
/* 292 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';
	}
	
	module.exports = isObjectLike;

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	/* global window */
	'use strict';
	
	module.exports = __webpack_require__(294)(global || window || undefined);

/***/ },
/* 294 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = combineReducers;
	
	var _createStore = __webpack_require__(288);
	
	var _isPlainObject = __webpack_require__(289);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(296);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2["default"])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key);
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
	      if (warningMessage) {
	        (0, _warning2["default"])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ },
/* 296 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 297 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.__esModule = true;
	exports["default"] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	exports["default"] = applyMiddleware;
	
	var _compose = __webpack_require__(299);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, initialState, enhancer) {
	      var store = createStore(reducer, initialState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 299 */
/***/ function(module, exports) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  } else {
	    var _ret = function () {
	      var last = funcs[funcs.length - 1];
	      var rest = funcs.slice(0, -1);
	      return {
	        v: function v() {
	          return rest.reduceRight(function (composed, f) {
	            return f(composed);
	          }, last.apply(undefined, arguments));
	        }
	      };
	    }();
	
	    if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
	  }
	}

/***/ },
/* 300 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {
	    if (typeof sourceComponent !== 'string') {
	        // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {}
	            }
	        }
	    }
	
	    return targetComponent;
	};

/***/ },
/* 301 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var NODE_ENV = process.env.NODE_ENV;
	
	var invariant = function invariant(condition, format, a, b, c, d, e, f) {
	  if (NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _CreditCardExpirationDateInput = __webpack_require__(245);
	
	var _CreditCardExpirationDateInput2 = _interopRequireDefault(_CreditCardExpirationDateInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onChange: function onChange(value, state, cursorPosition) {
				dispatch(actions.setCreditCardExpirationDate(value, state, cursorPosition));
			},
			onFocus: function onFocus() {
				dispatch(actions.didStartEditingCreditCardExpirationDate());
			},
			onDidFinishEditing: function onDidFinishEditing() {
				dispatch(actions.didFinishEditingCreditCardExpirationDate());
			}
		};
	};
	
	var DonationCreditCardExpirationDateInput = (0, _reactRedux.connect)(null, mapDispatchToProps, null, { withRef: true })(_CreditCardExpirationDateInput2.default);
	
	exports.default = DonationCreditCardExpirationDateInput;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _CreditCardSecurityCodeInput = __webpack_require__(304);
	
	var _CreditCardSecurityCodeInput2 = _interopRequireDefault(_CreditCardSecurityCodeInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onChange: function onChange(value, cursorPosition) {
				dispatch(actions.setCreditCardSecurityCode(value, inputStates.VALID, cursorPosition));
			},
			onFocus: function onFocus() {
				dispatch(actions.didStartEditingCreditCardSecurityCode());
			}
		};
	};
	
	// onDidFinishEditing: () => {
	// 	dispatch( actions.didFinishEditingCreditCardSecurityCode() )
	// }
	var DonationCreditCardSecurityCodeInput = (0, _reactRedux.connect)(null, mapDispatchToProps, null, { withRef: true })(_CreditCardSecurityCodeInput2.default);
	
	exports.default = DonationCreditCardSecurityCodeInput;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	__webpack_require__(246);
	
	__webpack_require__(250);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CreditCardSecurityCodeInput = _react2.default.createClass({
		displayName: 'CreditCardSecurityCodeInput',
	
	
		format: function format() {
			var code = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			return code;
		},
	
		unformat: function unformat() {
			var code = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			var newString = code;
	
			// Remove any non-numercal characters
			newString = newString.replace(/\D/g, '');
	
			// Return a maximum of 4 characters
			if (newString.length > 4) {
				newString = newString.slice(0, 4);
			}
	
			return newString;
		},
	
		isDoneEditing: function isDoneEditing() {
			var done = false;
	
			// if ( this.field) {
			// 	done =  this.field.cardType() === 'amex' ?
			// 			this.field.value().length === 15 :
			// 			this.field.value().length === 16
			// }
	
			return done;
		},
	
		getState: function getState() {
			var value = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
	
			// Check whether the number is blank
			if (value === '') return inputStates.BLANK;
	
			// Check that we have enough characters
			if (value.length < 3) return inputStates.INCOMPLETE;
	
			// Check whether the date is valid
			if (Stripe.card.validateCVC(value)) return inputStates.VALID;
	
			// Otherwise return invalid
			return inputStates.INVALID;
		},
	
		getField: function getField() {
			return this.field;
		},
	
		isInError: function isInError() {
			return this.props.securityCode.status === inputStates.INVALID || this.props.securityCode.status === inputStates.INCORRECT;
		},
	
		render: function render() {
			var _this = this;
	
			var errorClass = this.isInError() ? 'Error' : '';
			return _react2.default.createElement('input', {
				inputMode: 'numeric',
				pattern: '[0-9]*',
				value: this.format(this.props.securityCode.value),
				style: this.props.style,
				placeholder: 'CVV',
				className: 'SecurityCode ' + errorClass,
				onChange: function onChange(e) {
					e.preventDefault();
					_this.props.onChange(_this.unformat(e.target.value.trim(), e.target.selectionStart), e.target.selectionStart);
	
					if (_this.isDoneEditing()) {
						// TODO check whether card is valid
						// this.props.onDidFinishEditing()
					}
				},
				onFocus: function onFocus(e) {
					_this.props.onFocus();
				}
			});
		}
	
	});
	
	exports.default = CreditCardSecurityCodeInput;

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequire(obj) {
	  return obj && obj.__esModule ? obj['default'] : obj;
	}
	
	var _Motion = __webpack_require__(306);
	
	exports.Motion = _interopRequire(_Motion);
	
	var _StaggeredMotion = __webpack_require__(313);
	
	exports.StaggeredMotion = _interopRequire(_StaggeredMotion);
	
	var _TransitionMotion = __webpack_require__(314);
	
	exports.TransitionMotion = _interopRequire(_TransitionMotion);
	
	var _spring = __webpack_require__(316);
	
	exports.spring = _interopRequire(_spring);
	
	var _presets = __webpack_require__(317);
	
	exports.presets = _interopRequire(_presets);
	
	// deprecated, dummy warning function
	
	var _reorderKeys = __webpack_require__(318);
	
	exports.reorderKeys = _interopRequire(_reorderKeys);

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _mapToZero = __webpack_require__(307);
	
	var _mapToZero2 = _interopRequireDefault(_mapToZero);
	
	var _stripStyle = __webpack_require__(308);
	
	var _stripStyle2 = _interopRequireDefault(_stripStyle);
	
	var _stepper3 = __webpack_require__(309);
	
	var _stepper4 = _interopRequireDefault(_stepper3);
	
	var _performanceNow = __webpack_require__(310);
	
	var _performanceNow2 = _interopRequireDefault(_performanceNow);
	
	var _raf = __webpack_require__(311);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _shouldStopAnimation = __webpack_require__(312);
	
	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var msPerFrame = 1000 / 60;
	
	var Motion = _react2['default'].createClass({
	  displayName: 'Motion',
	
	  propTypes: {
	    // TOOD: warn against putting a config in here
	    defaultStyle: _react.PropTypes.objectOf(_react.PropTypes.number),
	    style: _react.PropTypes.objectOf(_react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object])).isRequired,
	    children: _react.PropTypes.func.isRequired,
	    onRest: _react.PropTypes.func
	  },
	
	  getInitialState: function getInitialState() {
	    var _props = this.props;
	    var defaultStyle = _props.defaultStyle;
	    var style = _props.style;
	
	    var currentStyle = defaultStyle || _stripStyle2['default'](style);
	    var currentVelocity = _mapToZero2['default'](currentStyle);
	    return {
	      currentStyle: currentStyle,
	      currentVelocity: currentVelocity,
	      lastIdealStyle: currentStyle,
	      lastIdealVelocity: currentVelocity
	    };
	  },
	
	  wasAnimating: false,
	  animationID: null,
	  prevTime: 0,
	  accumulatedTime: 0,
	  // it's possible that currentStyle's value is stale: if props is immediately
	  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
	  // at 0 (didn't have time to tick and interpolate even once). If we naively
	  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	  // In reality currentStyle should be 400
	  unreadPropStyle: null,
	  // after checking for unreadPropStyle != null, we manually go set the
	  // non-interpolating values (those that are a number, without a spring
	  // config)
	  clearUnreadPropStyle: function clearUnreadPropStyle(destStyle) {
	    var dirty = false;
	    var _state = this.state;
	    var currentStyle = _state.currentStyle;
	    var currentVelocity = _state.currentVelocity;
	    var lastIdealStyle = _state.lastIdealStyle;
	    var lastIdealVelocity = _state.lastIdealVelocity;
	
	    for (var key in destStyle) {
	      if (!destStyle.hasOwnProperty(key)) {
	        continue;
	      }
	
	      var styleValue = destStyle[key];
	      if (typeof styleValue === 'number') {
	        if (!dirty) {
	          dirty = true;
	          currentStyle = _extends({}, currentStyle);
	          currentVelocity = _extends({}, currentVelocity);
	          lastIdealStyle = _extends({}, lastIdealStyle);
	          lastIdealVelocity = _extends({}, lastIdealVelocity);
	        }
	
	        currentStyle[key] = styleValue;
	        currentVelocity[key] = 0;
	        lastIdealStyle[key] = styleValue;
	        lastIdealVelocity[key] = 0;
	      }
	    }
	
	    if (dirty) {
	      this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });
	    }
	  },
	
	  startAnimationIfNecessary: function startAnimationIfNecessary() {
	    var _this = this;
	
	    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	    // call cb? No, otherwise accidental parent rerender causes cb trigger
	    this.animationID = _raf2['default'](function () {
	      // check if we need to animate in the first place
	      var propsStyle = _this.props.style;
	      if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
	        if (_this.wasAnimating && _this.props.onRest) {
	          _this.props.onRest();
	        }
	
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.wasAnimating = false;
	        _this.accumulatedTime = 0;
	        return;
	      }
	
	      _this.wasAnimating = true;
	
	      var currentTime = _performanceNow2['default']();
	      var timeDelta = currentTime - _this.prevTime;
	      _this.prevTime = currentTime;
	      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	      // more than 10 frames? prolly switched browser tab. Restart
	      if (_this.accumulatedTime > msPerFrame * 10) {
	        _this.accumulatedTime = 0;
	      }
	
	      if (_this.accumulatedTime === 0) {
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.startAnimationIfNecessary();
	        return;
	      }
	
	      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
	
	      var newLastIdealStyle = {};
	      var newLastIdealVelocity = {};
	      var newCurrentStyle = {};
	      var newCurrentVelocity = {};
	
	      for (var key in propsStyle) {
	        if (!propsStyle.hasOwnProperty(key)) {
	          continue;
	        }
	
	        var styleValue = propsStyle[key];
	        if (typeof styleValue === 'number') {
	          newCurrentStyle[key] = styleValue;
	          newCurrentVelocity[key] = 0;
	          newLastIdealStyle[key] = styleValue;
	          newLastIdealVelocity[key] = 0;
	        } else {
	          var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
	          var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
	          for (var i = 0; i < framesToCatchUp; i++) {
	            var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	            newLastIdealStyleValue = _stepper[0];
	            newLastIdealVelocityValue = _stepper[1];
	          }
	
	          var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	          var nextIdealX = _stepper2[0];
	          var nextIdealV = _stepper2[1];
	
	          newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	          newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	          newLastIdealStyle[key] = newLastIdealStyleValue;
	          newLastIdealVelocity[key] = newLastIdealVelocityValue;
	        }
	      }
	
	      _this.animationID = null;
	      // the amount we're looped over above
	      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
	
	      _this.setState({
	        currentStyle: newCurrentStyle,
	        currentVelocity: newCurrentVelocity,
	        lastIdealStyle: newLastIdealStyle,
	        lastIdealVelocity: newLastIdealVelocity
	      });
	
	      _this.unreadPropStyle = null;
	
	      _this.startAnimationIfNecessary();
	    });
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(props) {
	    if (this.unreadPropStyle != null) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyle);
	    }
	
	    this.unreadPropStyle = props.style;
	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  },
	
	  render: function render() {
	    var renderedChildren = this.props.children(this.state.currentStyle);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  }
	});
	
	exports['default'] = Motion;
	module.exports = exports['default'];

/***/ },
/* 307 */
/***/ function(module, exports) {

	
	
	// currently used to initiate the velocity style object to 0
	'use strict';
	
	exports.__esModule = true;
	exports['default'] = mapToZero;
	
	function mapToZero(obj) {
	  var ret = {};
	  for (var key in obj) {
	    if (obj.hasOwnProperty(key)) {
	      ret[key] = 0;
	    }
	  }
	  return ret;
	}
	
	module.exports = exports['default'];

/***/ },
/* 308 */
/***/ function(module, exports) {

	
	// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by
	// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}
	
	'use strict';
	
	exports.__esModule = true;
	exports['default'] = stripStyle;
	
	function stripStyle(style) {
	  var ret = {};
	  for (var key in style) {
	    if (!style.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;
	  }
	  return ret;
	}
	
	module.exports = exports['default'];

/***/ },
/* 309 */
/***/ function(module, exports) {

	
	
	// stepper is used a lot. Saves allocation to return the same array wrapper.
	// This is fine and danger-free against mutations because the callsite
	// immediately destructures it and gets the numbers inside without passing the
	"use strict";
	
	exports.__esModule = true;
	exports["default"] = stepper;
	
	var reusedTuple = [];
	
	function stepper(secondPerFrame, x, v, destX, k, b, precision) {
	  // Spring stiffness, in kg / s^2
	
	  // for animations, destX is really spring length (spring at rest). initial
	  // position is considered as the stretched/compressed position of a spring
	  var Fspring = -k * (x - destX);
	
	  // Damping, in kg / s
	  var Fdamper = -b * v;
	
	  // usually we put mass here, but for animation purposes, specifying mass is a
	  // bit redundant. you could simply adjust k and b accordingly
	  // let a = (Fspring + Fdamper) / mass;
	  var a = Fspring + Fdamper;
	
	  var newV = v + a * secondPerFrame;
	  var newX = x + newV * secondPerFrame;
	
	  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
	    reusedTuple[0] = destX;
	    reusedTuple[1] = 0;
	    return reusedTuple;
	  }
	
	  reusedTuple[0] = newX;
	  reusedTuple[1] = newV;
	  return reusedTuple;
	}
	
	module.exports = exports["default"];
	// array reference around.

/***/ },
/* 310 */
/***/ function(module, exports) {

	"use strict";
	
	// Generated by CoffeeScript 1.7.1
	(function () {
	  var getNanoSeconds, hrtime, loadTime;
	
	  if (typeof performance !== "undefined" && performance !== null && performance.now) {
	    module.exports = function () {
	      return performance.now();
	    };
	  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
	    module.exports = function () {
	      return (getNanoSeconds() - loadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function getNanoSeconds() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    loadTime = getNanoSeconds();
	  } else if (Date.now) {
	    module.exports = function () {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function () {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }
	}).call(undefined);

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var now = __webpack_require__(310),
	    root = typeof window === 'undefined' ? global : window,
	    vendors = ['moz', 'webkit'],
	    suffix = 'AnimationFrame',
	    raf = root['request' + suffix],
	    caf = root['cancel' + suffix] || root['cancelRequest' + suffix];
	
	for (var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix];
	  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];
	}
	
	// Some versions of FF have rAF but not cAF
	if (!raf || !caf) {
	  var last = 0,
	      id = 0,
	      queue = [],
	      frameDuration = 1000 / 60;
	
	  raf = function raf(callback) {
	    if (queue.length === 0) {
	      var _now = now(),
	          next = Math.max(0, frameDuration - (_now - last));
	      last = next + _now;
	      setTimeout(function () {
	        var cp = queue.slice(0);
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0;
	        for (var i = 0; i < cp.length; i++) {
	          if (!cp[i].cancelled) {
	            try {
	              cp[i].callback(last);
	            } catch (e) {
	              setTimeout(function () {
	                throw e;
	              }, 0);
	            }
	          }
	        }
	      }, Math.round(next));
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    });
	    return id;
	  };
	
	  caf = function caf(handle) {
	    for (var i = 0; i < queue.length; i++) {
	      if (queue[i].handle === handle) {
	        queue[i].cancelled = true;
	      }
	    }
	  };
	}
	
	module.exports = function (fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn);
	};
	module.exports.cancel = function () {
	  caf.apply(root, arguments);
	};
	module.exports.polyfill = function () {
	  root.requestAnimationFrame = raf;
	  root.cancelAnimationFrame = caf;
	};

/***/ },
/* 312 */
/***/ function(module, exports) {

	
	
	// usage assumption: currentStyle values have already been rendered but it says
	// nothing of whether currentStyle is stale (see unreadPropStyle)
	'use strict';
	
	exports.__esModule = true;
	exports['default'] = shouldStopAnimation;
	
	function shouldStopAnimation(currentStyle, style, currentVelocity) {
	  for (var key in style) {
	    if (!style.hasOwnProperty(key)) {
	      continue;
	    }
	
	    if (currentVelocity[key] !== 0) {
	      return false;
	    }
	
	    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;
	    // stepper will have already taken care of rounding precision errors, so
	    // won't have such thing as 0.9999 !=== 1
	    if (currentStyle[key] !== styleValue) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = exports['default'];

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _mapToZero = __webpack_require__(307);
	
	var _mapToZero2 = _interopRequireDefault(_mapToZero);
	
	var _stripStyle = __webpack_require__(308);
	
	var _stripStyle2 = _interopRequireDefault(_stripStyle);
	
	var _stepper3 = __webpack_require__(309);
	
	var _stepper4 = _interopRequireDefault(_stepper3);
	
	var _performanceNow = __webpack_require__(310);
	
	var _performanceNow2 = _interopRequireDefault(_performanceNow);
	
	var _raf = __webpack_require__(311);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _shouldStopAnimation = __webpack_require__(312);
	
	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var msPerFrame = 1000 / 60;
	
	function shouldStopAnimationAll(currentStyles, styles, currentVelocities) {
	  for (var i = 0; i < currentStyles.length; i++) {
	    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {
	      return false;
	    }
	  }
	  return true;
	}
	
	var StaggeredMotion = _react2['default'].createClass({
	  displayName: 'StaggeredMotion',
	
	  propTypes: {
	    // TOOD: warn against putting a config in here
	    defaultStyles: _react.PropTypes.arrayOf(_react.PropTypes.objectOf(_react.PropTypes.number)),
	    styles: _react.PropTypes.func.isRequired,
	    children: _react.PropTypes.func.isRequired
	  },
	
	  getInitialState: function getInitialState() {
	    var _props = this.props;
	    var defaultStyles = _props.defaultStyles;
	    var styles = _props.styles;
	
	    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);
	    var currentVelocities = currentStyles.map(function (currentStyle) {
	      return _mapToZero2['default'](currentStyle);
	    });
	    return {
	      currentStyles: currentStyles,
	      currentVelocities: currentVelocities,
	      lastIdealStyles: currentStyles,
	      lastIdealVelocities: currentVelocities
	    };
	  },
	
	  animationID: null,
	  prevTime: 0,
	  accumulatedTime: 0,
	  // it's possible that currentStyle's value is stale: if props is immediately
	  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
	  // at 0 (didn't have time to tick and interpolate even once). If we naively
	  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	  // In reality currentStyle should be 400
	  unreadPropStyles: null,
	  // after checking for unreadPropStyles != null, we manually go set the
	  // non-interpolating values (those that are a number, without a spring
	  // config)
	  clearUnreadPropStyle: function clearUnreadPropStyle(unreadPropStyles) {
	    var _state = this.state;
	    var currentStyles = _state.currentStyles;
	    var currentVelocities = _state.currentVelocities;
	    var lastIdealStyles = _state.lastIdealStyles;
	    var lastIdealVelocities = _state.lastIdealVelocities;
	
	    var someDirty = false;
	    for (var i = 0; i < unreadPropStyles.length; i++) {
	      var unreadPropStyle = unreadPropStyles[i];
	      var dirty = false;
	
	      for (var key in unreadPropStyle) {
	        if (!unreadPropStyle.hasOwnProperty(key)) {
	          continue;
	        }
	
	        var styleValue = unreadPropStyle[key];
	        if (typeof styleValue === 'number') {
	          if (!dirty) {
	            dirty = true;
	            someDirty = true;
	            currentStyles[i] = _extends({}, currentStyles[i]);
	            currentVelocities[i] = _extends({}, currentVelocities[i]);
	            lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
	            lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
	          }
	          currentStyles[i][key] = styleValue;
	          currentVelocities[i][key] = 0;
	          lastIdealStyles[i][key] = styleValue;
	          lastIdealVelocities[i][key] = 0;
	        }
	      }
	    }
	
	    if (someDirty) {
	      this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });
	    }
	  },
	
	  startAnimationIfNecessary: function startAnimationIfNecessary() {
	    var _this = this;
	
	    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	    // call cb? No, otherwise accidental parent rerender causes cb trigger
	    this.animationID = _raf2['default'](function () {
	      var destStyles = _this.props.styles(_this.state.lastIdealStyles);
	
	      // check if we need to animate in the first place
	      if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.accumulatedTime = 0;
	        return;
	      }
	
	      var currentTime = _performanceNow2['default']();
	      var timeDelta = currentTime - _this.prevTime;
	      _this.prevTime = currentTime;
	      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	      // more than 10 frames? prolly switched browser tab. Restart
	      if (_this.accumulatedTime > msPerFrame * 10) {
	        _this.accumulatedTime = 0;
	      }
	
	      if (_this.accumulatedTime === 0) {
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.startAnimationIfNecessary();
	        return;
	      }
	
	      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
	
	      var newLastIdealStyles = [];
	      var newLastIdealVelocities = [];
	      var newCurrentStyles = [];
	      var newCurrentVelocities = [];
	
	      for (var i = 0; i < destStyles.length; i++) {
	        var destStyle = destStyles[i];
	        var newCurrentStyle = {};
	        var newCurrentVelocity = {};
	        var newLastIdealStyle = {};
	        var newLastIdealVelocity = {};
	
	        for (var key in destStyle) {
	          if (!destStyle.hasOwnProperty(key)) {
	            continue;
	          }
	
	          var styleValue = destStyle[key];
	          if (typeof styleValue === 'number') {
	            newCurrentStyle[key] = styleValue;
	            newCurrentVelocity[key] = 0;
	            newLastIdealStyle[key] = styleValue;
	            newLastIdealVelocity[key] = 0;
	          } else {
	            var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
	            var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
	            for (var j = 0; j < framesToCatchUp; j++) {
	              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	              newLastIdealStyleValue = _stepper[0];
	              newLastIdealVelocityValue = _stepper[1];
	            }
	
	            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	            var nextIdealX = _stepper2[0];
	            var nextIdealV = _stepper2[1];
	
	            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	            newLastIdealStyle[key] = newLastIdealStyleValue;
	            newLastIdealVelocity[key] = newLastIdealVelocityValue;
	          }
	        }
	
	        newCurrentStyles[i] = newCurrentStyle;
	        newCurrentVelocities[i] = newCurrentVelocity;
	        newLastIdealStyles[i] = newLastIdealStyle;
	        newLastIdealVelocities[i] = newLastIdealVelocity;
	      }
	
	      _this.animationID = null;
	      // the amount we're looped over above
	      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
	
	      _this.setState({
	        currentStyles: newCurrentStyles,
	        currentVelocities: newCurrentVelocities,
	        lastIdealStyles: newLastIdealStyles,
	        lastIdealVelocities: newLastIdealVelocities
	      });
	
	      _this.unreadPropStyles = null;
	
	      _this.startAnimationIfNecessary();
	    });
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(props) {
	    if (this.unreadPropStyles != null) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyles);
	    }
	
	    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  },
	
	  render: function render() {
	    var renderedChildren = this.props.children(this.state.currentStyles);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  }
	});
	
	exports['default'] = StaggeredMotion;
	module.exports = exports['default'];

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _mapToZero = __webpack_require__(307);
	
	var _mapToZero2 = _interopRequireDefault(_mapToZero);
	
	var _stripStyle = __webpack_require__(308);
	
	var _stripStyle2 = _interopRequireDefault(_stripStyle);
	
	var _stepper3 = __webpack_require__(309);
	
	var _stepper4 = _interopRequireDefault(_stepper3);
	
	var _mergeDiff = __webpack_require__(315);
	
	var _mergeDiff2 = _interopRequireDefault(_mergeDiff);
	
	var _performanceNow = __webpack_require__(310);
	
	var _performanceNow2 = _interopRequireDefault(_performanceNow);
	
	var _raf = __webpack_require__(311);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _shouldStopAnimation = __webpack_require__(312);
	
	var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var msPerFrame = 1000 / 60;
	
	// the children function & (potential) styles function asks as param an
	// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format
	// {key: string, data?: any, style: PlainStyle}. However, the way we keep
	// internal states doesn't contain such a data structure (check the state and
	// TransitionMotionState). So when children function and others ask for such
	// data we need to generate them on the fly by combining mergedPropsStyles and
	// currentStyles/lastIdealStyles
	function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
	  if (unreadPropStyles == null) {
	    // $FlowFixMe
	    return mergedPropsStyles.map(function (mergedPropsStyle, i) {
	      return {
	        key: mergedPropsStyle.key,
	        data: mergedPropsStyle.data,
	        style: plainStyles[i]
	      };
	    });
	  }
	  return mergedPropsStyles.map(function (mergedPropsStyle, i) {
	    // $FlowFixMe
	    for (var j = 0; j < unreadPropStyles.length; j++) {
	      // $FlowFixMe
	      if (unreadPropStyles[j].key === mergedPropsStyle.key) {
	        return {
	          // $FlowFixMe
	          key: unreadPropStyles[j].key,
	          data: unreadPropStyles[j].data,
	          style: plainStyles[i]
	        };
	      }
	    }
	    // $FlowFixMe
	    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
	  });
	}
	
	function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
	  if (mergedPropsStyles.length !== destStyles.length) {
	    return false;
	  }
	
	  for (var i = 0; i < mergedPropsStyles.length; i++) {
	    if (mergedPropsStyles[i].key !== destStyles[i].key) {
	      return false;
	    }
	  }
	
	  // we have the invariant that mergedPropsStyles and
	  // currentStyles/currentVelocities/last* are synced in terms of cells, see
	  // mergeAndSync comment for more info
	  for (var i = 0; i < mergedPropsStyles.length; i++) {
	    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	// core key merging logic
	
	// things to do: say previously merged style is {a, b}, dest style (prop) is {b,
	// c}, previous current (interpolating) style is {a, b}
	// **invariant**: current[i] corresponds to merged[i] in terms of key
	
	// steps:
	// turn merged style into {a?, b, c}
	//    add c, value of c is destStyles.c
	//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}
	// turn current (interpolating) style from {a, b} into {a?, b, c}
	//    maybe remove a
	//    certainly add c, value of c is willEnter(c)
	// loop over merged and construct new current
	// dest doesn't change, that's owner's
	function mergeAndSync(willEnter, willLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
	  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {
	    var leavingStyle = willLeave(oldMergedPropsStyle);
	    if (leavingStyle == null) {
	      return null;
	    }
	    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
	      return null;
	    }
	    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
	  });
	
	  var newCurrentStyles = [];
	  var newCurrentVelocities = [];
	  var newLastIdealStyles = [];
	  var newLastIdealVelocities = [];
	  for (var i = 0; i < newMergedPropsStyles.length; i++) {
	    var newMergedPropsStyleCell = newMergedPropsStyles[i];
	    var foundOldIndex = null;
	    for (var j = 0; j < oldMergedPropsStyles.length; j++) {
	      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
	        foundOldIndex = j;
	        break;
	      }
	    }
	    // TODO: key search code
	    if (foundOldIndex == null) {
	      var plainStyle = willEnter(newMergedPropsStyleCell);
	      newCurrentStyles[i] = plainStyle;
	      newLastIdealStyles[i] = plainStyle;
	
	      // $FlowFixMe
	      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);
	      newCurrentVelocities[i] = velocity;
	      newLastIdealVelocities[i] = velocity;
	    } else {
	      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
	      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
	      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
	      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
	    }
	  }
	
	  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
	}
	
	var TransitionMotion = _react2['default'].createClass({
	  displayName: 'TransitionMotion',
	
	  propTypes: {
	    defaultStyles: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	      key: _react.PropTypes.string.isRequired,
	      data: _react.PropTypes.any,
	      style: _react.PropTypes.objectOf(_react.PropTypes.number).isRequired
	    })),
	    styles: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.arrayOf(_react.PropTypes.shape({
	      key: _react.PropTypes.string.isRequired,
	      data: _react.PropTypes.any,
	      style: _react.PropTypes.objectOf(_react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object])).isRequired
	    }))]).isRequired,
	    children: _react.PropTypes.func.isRequired,
	    willLeave: _react.PropTypes.func,
	    willEnter: _react.PropTypes.func
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      willEnter: function willEnter(styleThatEntered) {
	        return _stripStyle2['default'](styleThatEntered.style);
	      },
	      // recall: returning null makes the current unmounting TransitionStyle
	      // disappear immediately
	      willLeave: function willLeave() {
	        return null;
	      }
	    };
	  },
	
	  getInitialState: function getInitialState() {
	    var _props = this.props;
	    var defaultStyles = _props.defaultStyles;
	    var styles = _props.styles;
	    var willEnter = _props.willEnter;
	    var willLeave = _props.willLeave;
	
	    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;
	
	    // this is special. for the first time around, we don't have a comparison
	    // between last (no last) and current merged props. we'll compute last so:
	    // say default is {a, b} and styles (dest style) is {b, c}, we'll
	    // fabricate last as {a, b}
	    var oldMergedPropsStyles = undefined;
	    if (defaultStyles == null) {
	      oldMergedPropsStyles = destStyles;
	    } else {
	      // $FlowFixMe
	      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {
	        // TODO: key search code
	        for (var i = 0; i < destStyles.length; i++) {
	          if (destStyles[i].key === defaultStyleCell.key) {
	            return destStyles[i];
	          }
	        }
	        return defaultStyleCell;
	      });
	    }
	    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {
	      return _stripStyle2['default'](s.style);
	    }) : defaultStyles.map(function (s) {
	      return _stripStyle2['default'](s.style);
	    });
	    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {
	      return _mapToZero2['default'](s.style);
	    }) : defaultStyles.map(function (s) {
	      return _mapToZero2['default'](s.style);
	    });
	
	    var _mergeAndSync = mergeAndSync(
	    // $FlowFixMe
	    willEnter,
	    // $FlowFixMe
	    willLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really
	    oldCurrentVelocities);
	
	    var mergedPropsStyles = _mergeAndSync[0];
	    var currentStyles = _mergeAndSync[1];
	    var currentVelocities = _mergeAndSync[2];
	    var lastIdealStyles = _mergeAndSync[3];
	    var lastIdealVelocities = _mergeAndSync[4];
	    // oldLastIdealVelocities really
	
	    return {
	      currentStyles: currentStyles,
	      currentVelocities: currentVelocities,
	      lastIdealStyles: lastIdealStyles,
	      lastIdealVelocities: lastIdealVelocities,
	      mergedPropsStyles: mergedPropsStyles
	    };
	  },
	
	  animationID: null,
	  prevTime: 0,
	  accumulatedTime: 0,
	  // it's possible that currentStyle's value is stale: if props is immediately
	  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
	  // at 0 (didn't have time to tick and interpolate even once). If we naively
	  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
	  // In reality currentStyle should be 400
	  unreadPropStyles: null,
	  // after checking for unreadPropStyles != null, we manually go set the
	  // non-interpolating values (those that are a number, without a spring
	  // config)
	  clearUnreadPropStyle: function clearUnreadPropStyle(unreadPropStyles) {
	    var _mergeAndSync2 = mergeAndSync(
	    // $FlowFixMe
	    this.props.willEnter,
	    // $FlowFixMe
	    this.props.willLeave, this.state.mergedPropsStyles, unreadPropStyles, this.state.currentStyles, this.state.currentVelocities, this.state.lastIdealStyles, this.state.lastIdealVelocities);
	
	    var mergedPropsStyles = _mergeAndSync2[0];
	    var currentStyles = _mergeAndSync2[1];
	    var currentVelocities = _mergeAndSync2[2];
	    var lastIdealStyles = _mergeAndSync2[3];
	    var lastIdealVelocities = _mergeAndSync2[4];
	
	    for (var i = 0; i < unreadPropStyles.length; i++) {
	      var unreadPropStyle = unreadPropStyles[i].style;
	      var dirty = false;
	
	      for (var key in unreadPropStyle) {
	        if (!unreadPropStyle.hasOwnProperty(key)) {
	          continue;
	        }
	
	        var styleValue = unreadPropStyle[key];
	        if (typeof styleValue === 'number') {
	          if (!dirty) {
	            dirty = true;
	            currentStyles[i] = _extends({}, currentStyles[i]);
	            currentVelocities[i] = _extends({}, currentVelocities[i]);
	            lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
	            lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
	            mergedPropsStyles[i] = {
	              key: mergedPropsStyles[i].key,
	              data: mergedPropsStyles[i].data,
	              style: _extends({}, mergedPropsStyles[i].style)
	            };
	          }
	          currentStyles[i][key] = styleValue;
	          currentVelocities[i][key] = 0;
	          lastIdealStyles[i][key] = styleValue;
	          lastIdealVelocities[i][key] = 0;
	          mergedPropsStyles[i].style[key] = styleValue;
	        }
	      }
	    }
	
	    // unlike the other 2 components, we can't detect staleness and optionally
	    // opt out of setState here. each style object's data might contain new
	    // stuff we're not/cannot compare
	    this.setState({
	      currentStyles: currentStyles,
	      currentVelocities: currentVelocities,
	      mergedPropsStyles: mergedPropsStyles,
	      lastIdealStyles: lastIdealStyles,
	      lastIdealVelocities: lastIdealVelocities
	    });
	  },
	
	  startAnimationIfNecessary: function startAnimationIfNecessary() {
	    var _this = this;
	
	    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
	    // call cb? No, otherwise accidental parent rerender causes cb trigger
	    this.animationID = _raf2['default'](function () {
	      var propStyles = _this.props.styles;
	      var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;
	
	      // check if we need to animate in the first place
	      if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.accumulatedTime = 0;
	        return;
	      }
	
	      var currentTime = _performanceNow2['default']();
	      var timeDelta = currentTime - _this.prevTime;
	      _this.prevTime = currentTime;
	      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
	      // more than 10 frames? prolly switched browser tab. Restart
	      if (_this.accumulatedTime > msPerFrame * 10) {
	        _this.accumulatedTime = 0;
	      }
	
	      if (_this.accumulatedTime === 0) {
	        // no need to cancel animationID here; shouldn't have any in flight
	        _this.animationID = null;
	        _this.startAnimationIfNecessary();
	        return;
	      }
	
	      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
	      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
	
	      var _mergeAndSync3 = mergeAndSync(
	      // $FlowFixMe
	      _this.props.willEnter,
	      // $FlowFixMe
	      _this.props.willLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
	
	      var newMergedPropsStyles = _mergeAndSync3[0];
	      var newCurrentStyles = _mergeAndSync3[1];
	      var newCurrentVelocities = _mergeAndSync3[2];
	      var newLastIdealStyles = _mergeAndSync3[3];
	      var newLastIdealVelocities = _mergeAndSync3[4];
	
	      for (var i = 0; i < newMergedPropsStyles.length; i++) {
	        var newMergedPropsStyle = newMergedPropsStyles[i].style;
	        var newCurrentStyle = {};
	        var newCurrentVelocity = {};
	        var newLastIdealStyle = {};
	        var newLastIdealVelocity = {};
	
	        for (var key in newMergedPropsStyle) {
	          if (!newMergedPropsStyle.hasOwnProperty(key)) {
	            continue;
	          }
	
	          var styleValue = newMergedPropsStyle[key];
	          if (typeof styleValue === 'number') {
	            newCurrentStyle[key] = styleValue;
	            newCurrentVelocity[key] = 0;
	            newLastIdealStyle[key] = styleValue;
	            newLastIdealVelocity[key] = 0;
	          } else {
	            var newLastIdealStyleValue = newLastIdealStyles[i][key];
	            var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
	            for (var j = 0; j < framesToCatchUp; j++) {
	              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	              newLastIdealStyleValue = _stepper[0];
	              newLastIdealVelocityValue = _stepper[1];
	            }
	
	            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
	
	            var nextIdealX = _stepper2[0];
	            var nextIdealV = _stepper2[1];
	
	            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
	            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
	            newLastIdealStyle[key] = newLastIdealStyleValue;
	            newLastIdealVelocity[key] = newLastIdealVelocityValue;
	          }
	        }
	
	        newLastIdealStyles[i] = newLastIdealStyle;
	        newLastIdealVelocities[i] = newLastIdealVelocity;
	        newCurrentStyles[i] = newCurrentStyle;
	        newCurrentVelocities[i] = newCurrentVelocity;
	      }
	
	      _this.animationID = null;
	      // the amount we're looped over above
	      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
	
	      _this.setState({
	        currentStyles: newCurrentStyles,
	        currentVelocities: newCurrentVelocities,
	        lastIdealStyles: newLastIdealStyles,
	        lastIdealVelocities: newLastIdealVelocities,
	        mergedPropsStyles: newMergedPropsStyles
	      });
	
	      _this.unreadPropStyles = null;
	
	      _this.startAnimationIfNecessary();
	    });
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.prevTime = _performanceNow2['default']();
	    this.startAnimationIfNecessary();
	  },
	
	  componentWillReceiveProps: function componentWillReceiveProps(props) {
	    if (this.unreadPropStyles) {
	      // previous props haven't had the chance to be set yet; set them here
	      this.clearUnreadPropStyle(this.unreadPropStyles);
	    }
	
	    if (typeof props.styles === 'function') {
	      // $FlowFixMe
	      this.unreadPropStyles = props.styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
	    } else {
	      this.unreadPropStyles = props.styles;
	    }
	
	    if (this.animationID == null) {
	      this.prevTime = _performanceNow2['default']();
	      this.startAnimationIfNecessary();
	    }
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    if (this.animationID != null) {
	      _raf2['default'].cancel(this.animationID);
	      this.animationID = null;
	    }
	  },
	
	  render: function render() {
	    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
	    var renderedChildren = this.props.children(hydratedStyles);
	    return renderedChildren && _react2['default'].Children.only(renderedChildren);
	  }
	});
	
	exports['default'] = TransitionMotion;
	module.exports = exports['default'];
	
	// list of styles, each containing interpolating values. Part of what's passed
	// to children function. Notice that this is
	// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,
	// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles
	// contains the key & data info (so that we only have a single source of truth
	// for these, and to save space). Check the comment for `rehydrateStyles` to
	// see how we regenerate the entirety of what's passed to children function

	// the array that keeps track of currently rendered stuff! Including stuff
	// that you've unmounted but that's still animating. This is where it lives

/***/ },
/* 315 */
/***/ function(module, exports) {

	
	
	// core keys merging algorithm. If previous render's keys are [a, b], and the
	// next render's [c, b, d], what's the final merged keys and ordering?
	
	// - c and a must both be before b
	// - b before d
	// - ordering between a and c ambiguous
	
	// this reduces to merging two partially ordered lists (e.g. lists where not
	// every item has a definite ordering, like comparing a and c above). For the
	// ambiguous ordering we deterministically choose to place the next render's
	// item after the previous'; so c after a
	
	// this is called a topological sorting. Except the existing algorithms don't
	// work well with js bc of the amount of allocation, and isn't optimized for our
	// current use-case bc the runtime is linear in terms of edges (see wiki for
	// meaning), which is huge when two lists have many common elements
	'use strict';
	
	exports.__esModule = true;
	exports['default'] = mergeDiff;
	
	function mergeDiff(prev, next, onRemove) {
	  // bookkeeping for easier access of a key's index below. This is 2 allocations +
	  // potentially triggering chrome hash map mode for objs (so it might be faster
	
	  var prevKeyIndex = {};
	  for (var i = 0; i < prev.length; i++) {
	    prevKeyIndex[prev[i].key] = i;
	  }
	  var nextKeyIndex = {};
	  for (var i = 0; i < next.length; i++) {
	    nextKeyIndex[next[i].key] = i;
	  }
	
	  // first, an overly elaborate way of merging prev and next, eliminating
	  // duplicates (in terms of keys). If there's dupe, keep the item in next).
	  // This way of writing it saves allocations
	  var ret = [];
	  for (var i = 0; i < next.length; i++) {
	    ret[i] = next[i];
	  }
	  for (var i = 0; i < prev.length; i++) {
	    if (!nextKeyIndex.hasOwnProperty(prev[i].key)) {
	      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't
	      // merge in keys that the user desires to kill
	      var fill = onRemove(i, prev[i]);
	      if (fill != null) {
	        ret.push(fill);
	      }
	    }
	  }
	
	  // now all the items all present. Core sorting logic to have the right order
	  return ret.sort(function (a, b) {
	    var nextOrderA = nextKeyIndex[a.key];
	    var nextOrderB = nextKeyIndex[b.key];
	    var prevOrderA = prevKeyIndex[a.key];
	    var prevOrderB = prevKeyIndex[b.key];
	
	    if (nextOrderA != null && nextOrderB != null) {
	      // both keys in next
	      return nextKeyIndex[a.key] - nextKeyIndex[b.key];
	    } else if (prevOrderA != null && prevOrderB != null) {
	      // both keys in prev
	      return prevKeyIndex[a.key] - prevKeyIndex[b.key];
	    } else if (nextOrderA != null) {
	      // key a in next, key b in prev
	
	      // how to determine the order between a and b? We find a "pivot" (term
	      // abuse), a key present in both prev and next, that is sandwiched between
	      // a and b. In the context of our above example, if we're comparing a and
	      // d, b's (the only) pivot
	      for (var i = 0; i < next.length; i++) {
	        var pivot = next[i].key;
	        if (!prevKeyIndex.hasOwnProperty(pivot)) {
	          continue;
	        }
	
	        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
	          return -1;
	        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
	          return 1;
	        }
	      }
	      // pluggable. default to: next bigger than prev
	      return 1;
	    }
	    // prevOrderA, nextOrderB
	    for (var i = 0; i < next.length; i++) {
	      var pivot = next[i].key;
	      if (!prevKeyIndex.hasOwnProperty(pivot)) {
	        continue;
	      }
	      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
	        return 1;
	      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
	        return -1;
	      }
	    }
	    // pluggable. default to: next bigger than prev
	    return -1;
	  });
	}
	
	module.exports = exports['default'];
	// to loop through and find a key's index each time), but I no longer care

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	exports['default'] = spring;
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _presets = __webpack_require__(317);
	
	var _presets2 = _interopRequireDefault(_presets);
	
	var defaultConfig = _extends({}, _presets2['default'].noWobble, {
	  precision: 0.01
	});
	
	function spring(val, config) {
	  return _extends({}, defaultConfig, config, { val: val });
	}
	
	module.exports = exports['default'];

/***/ },
/* 317 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = {
	  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided
	  gentle: { stiffness: 120, damping: 14 },
	  wobbly: { stiffness: 180, damping: 12 },
	  stiff: { stiffness: 210, damping: 20 }
	};
	module.exports = exports["default"];

/***/ },
/* 318 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = reorderKeys;
	
	var hasWarned = false;
	
	function reorderKeys() {
	  if (process.env.NODE_ENV === 'development') {
	    if (!hasWarned) {
	      hasWarned = true;
	      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\'s new styles array API.');
	    }
	  }
	}
	
	module.exports = exports['default'];

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./back.svg": 320,
		"./broken.svg": 321,
		"./check-circle-large.svg": 322,
		"./circle-check.svg": 323,
		"./circle-thin.svg": 324,
		"./credit-card.svg": 325,
		"./donate-amount-circle.svg": 326,
		"./email.svg": 327,
		"./envelope.svg": 328,
		"./facebook.svg": 329,
		"./forward.svg": 330,
		"./heart-hands-circle.svg": 331,
		"./heart-hands.svg": 332,
		"./heartstrings.svg": 333,
		"./info.svg": 334,
		"./twitter.svg": 335,
		"./warning.svg": 336,
		"./world-map.svg": 337
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 319;


/***/ },
/* 320 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>back</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"back\" sketch:type=\"MSArtboardGroup\" stroke-linecap=\"round\" stroke=\"#3E97BD\" stroke-width=\"2\"><g id=\"Left-Arrow-:-Glyph\" sketch:type=\"MSLayerGroup\" transform=\"translate(5.000000, 8.000000)\"><path d=\"M0,4 L14,4\" id=\"Path-1\" sketch:type=\"MSShapeGroup\"></path><path d=\"M2.84217094e-14,4 L4,0\" id=\"Path-2\" sketch:type=\"MSShapeGroup\"></path><path d=\"M2.84217094e-14,4 L4,8\" id=\"Path-3\" sketch:type=\"MSShapeGroup\"></path></g></g></g></svg>"

/***/ },
/* 321 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Broken</title><desc>Created with Sketch.</desc><defs><path d=\"M41.9999998,30 C42.4999999,30 42.9999997,30.4999998 42.9999998,30.9999999 C42.9999999,31.5000001 42.9999998,37.4999993 42.9999999,37.9999997 C43,38.5 42.4999998,38.9999993 41.9999999,38.9999997 C41.5,39 38.5000001,38.9999993 38,38.9999997 C37.5,39 37,38.5 37,37.9999997 C37,37.5 37,31.5 37,31 C37,30.5 37.5000001,30 38,30 C38.4999999,30 41.4999997,30 41.9999998,30 Z\" id=\"path-1\"></path><mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"5.99999992\" height=\"8.99999976\" fill=\"white\"><use xlink:href=\"#path-1\"></use></mask></defs><g id=\"48x48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"Broken\"><g id=\"Broken-:-Glyph\" transform=\"translate(2.000000, 9.000000)\" stroke=\"#FFFFFF\"><path d=\"M22,4.82963287 C15.6666667,-4.55892448 3,0.937427148 3,11.1648354 C3,18.0853556 9.327,23.02143 14.0833333,26.7399184 C19.03125,30.6070838 20.4166667,31.4349796 22,33 C23.5833333,31.4349796 24.907,30.5241377 29.9166667,26.7399184 C34.74425,23.0965509 41,18.0086696 41,11.0897145 C41,0.937427148 28.3333333,-4.55892448 22,4.82963287\" id=\"Imported-Layers\" stroke-width=\"1.881\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M30.5,26.5 C30.5,26.5 40.5,26.0962605 34,30.5962605 C27.5,35.0962605 38,33.9999999 38,33.9999999\" id=\"Path-73\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><use id=\"Path-74\" mask=\"url(#mask-2)\" stroke-width=\"4\" xlink:href=\"#path-1\"></use><path d=\"M42,33 L45,33\" id=\"Path-75\" stroke-width=\"2\" stroke-linecap=\"round\"></path><path d=\"M42,36 L45,36\" id=\"Path-75\" stroke-width=\"2\" stroke-linecap=\"round\"></path></g><circle id=\"Oval-4\" fill=\"#FFFFFF\" cx=\"16\" cy=\"20\" r=\"2\"></circle><circle id=\"Oval-4\" fill=\"#FFFFFF\" cx=\"32\" cy=\"20\" r=\"2\"></circle><path d=\"M18,31 C18,31 21,28.5 24,28.5 C27,28.5 30,31 30,31\" id=\"Path-79\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></g></svg>"

/***/ },
/* 322 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 60 60\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>Group 2</title><desc>Created with Sketch.</desc><defs></defs><g id=\"Explorations\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"Desktop\" sketch:type=\"MSArtboardGroup\" transform=\"translate(-484.000000, -291.000000)\" stroke=\"#FFFFFF\" stroke-width=\"2\"><g id=\"Group\" sketch:type=\"MSLayerGroup\" transform=\"translate(162.000000, 265.000000)\"><g id=\"Header\" transform=\"translate(222.000000, 26.000000)\" sketch:type=\"MSShapeGroup\"><g id=\"Group-2\" transform=\"translate(100.000000, 0.000000)\"><circle id=\"Oval-1\" cx=\"30\" cy=\"30\" r=\"29\"></circle><path d=\"M18,32 L26.5,39 L42,22\" id=\"Check-:-Glyph\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></g></g></g></g></svg>"

/***/ },
/* 323 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>circle-check</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"circle-check\" sketch:type=\"MSArtboardGroup\" fill=\"#FFFFFF\"><path d=\"M22.0055144,5.37271088 C23.2658363,7.27166391 24,9.5500954 24,12 C24,18.627417 18.627417,24 12,24 C5.372583,24 0,18.627417 0,12 C0,5.372583 5.372583,0 12,0 C15.4481289,0 18.556582,1.45432521 20.7454267,3.78304311 L11.845703,13.6780395 L7.62469505,10.2191312 C7.19343311,9.87412164 6.56414074,9.94404302 6.21913119,10.375305 C5.87412164,10.8065669 5.94404302,11.4358593 6.37530495,11.7808688 L11.375305,15.7808688 C11.7889619,16.1117944 12.3889172,16.0627169 12.7432941,15.6689647 L22.0055144,5.37271088 Z\" id=\"Background\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 324 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>circle-thin</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"circle-thin\" sketch:type=\"MSArtboardGroup\" stroke=\"#FFFFFF\"><circle id=\"Background\" sketch:type=\"MSShapeGroup\" cx=\"12\" cy=\"12\" r=\"11\"></circle></g></g></svg>"

/***/ },
/* 325 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>credit-card</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"credit-card\" sketch:type=\"MSArtboardGroup\" stroke=\"#3E97BD\" stroke-width=\"2\"><g id=\"Credit-Card-:-Glyph\" sketch:type=\"MSLayerGroup\" transform=\"translate(5.000000, 7.000000)\"><path d=\"M12.9370688,10 C12.3741377,10 1.41041379,10 1,10 C0.5,10 4.72107065e-09,9.5 2.71210432e-09,9 C7.03137965e-10,8.5 3.52928353e-10,1.5 0,1 C-3.52928298e-10,0.500000002 0.50000011,4.17682067e-09 1,-2.93098879e-14 C1.49999989,-4.17687926e-09 12.3741379,-2.84217094e-14 12.9370689,-2.93098879e-14 C13.5,-2.84217094e-14 14,0.499999998 14,1 C14,1.5 14,6.33452938 14,9 C14,9.5 13.5,10 12.9370688,10 Z\" id=\"Path-34\" stroke-linejoin=\"round\" sketch:type=\"MSShapeGroup\"></path><path d=\"M2,4 L12,4\" id=\"Path-35\" stroke-linecap=\"square\" sketch:type=\"MSShapeGroup\"></path></g></g></g></svg>"

/***/ },
/* 326 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 56 60\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>Background</title><desc>Created with Sketch.</desc><defs></defs><g id=\"Mocks\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"Heartstrings-Medium-03\" sketch:type=\"MSArtboardGroup\" transform=\"translate(-188.000000, -210.000000)\" stroke=\"#00AB6B\" stroke-opacity=\"0\" stroke-width=\"2\" fill=\"#FFFFFF\"><g id=\"Widget\" sketch:type=\"MSLayerGroup\" transform=\"translate(11.000000, 186.000000)\"><g id=\"Donate-Icons\" transform=\"translate(120.000000, 24.000000)\" sketch:type=\"MSShapeGroup\"><g id=\"Donation-Amount-:-Circle\" transform=\"translate(57.000000, 0.000000)\"><path d=\"M0.5,14.1887305 C5.79263031,5.67099567 15.2340492,0 26,0 C42.5685425,0 56,13.4314575 56,30 C56,46.5685425 42.5685425,60 26,60 C15.2340492,60 5.79263031,54.3290043 0.5,45.8112695 C3.35260195,41.2204129 5,35.8025916 5,30 C5,24.1974084 3.35260195,18.7795871 0.5,14.1887305 Z\" id=\"Background\"></path></g></g></g></g></g></svg>"

/***/ },
/* 327 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>email</title><desc>Created with Sketch.</desc><defs></defs><g id=\"48x48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"email\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><path d=\"M9.03666678,38.5154197 L11.7395467,26.8105837 C11.8462393,26.3125056 12.2730098,25.9211585 12.806473,25.8500045 L27.921262,24.2846161 C28.3480325,24.2490391 28.3480325,23.6086529 27.921262,23.5374989 L12.806473,22.0788415 C12.2730098,22.0432645 11.8462393,21.6519174 11.7395467,21.1538393 L9.03666678,9.48458033 C8.78771732,8.48842408 9.8546436,7.67015287 10.779313,8.13265399 L40.3331711,22.9326897 C41.2222763,23.3951908 41.2222763,24.6759632 40.3331711,25.1384643 L10.779313,39.867346 C9.8546436,40.3298471 8.78771732,39.5115759 9.03666678,38.5154197 L9.03666678,38.5154197 Z\" id=\"Shape\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 328 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>envelope</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"envelope\" sketch:type=\"MSArtboardGroup\" stroke=\"#3E97BD\" stroke-width=\"2\" stroke-linejoin=\"round\"><g id=\"Envelope-:-Glyph\" sketch:type=\"MSLayerGroup\" transform=\"translate(5.000000, 7.000000)\"><path d=\"M12.9370688,10 C12.3741377,10 1.41041379,10 1,10 C0.5,10 4.72107065e-09,9.5 2.71210432e-09,9 C7.03137965e-10,8.5 3.52928353e-10,1.5 0,1 C-3.52928298e-10,0.500000002 0.50000011,4.17682067e-09 1,-2.93098879e-14 C1.49999989,-4.17687926e-09 12.3741379,-2.84217094e-14 12.9370689,-2.93098879e-14 C13.5,-2.84217094e-14 14,0.499999998 14,1 C14,1.5 14,6.33452938 14,9 C14,9.5 13.5,10 12.9370688,10 Z\" id=\"Path-34\" sketch:type=\"MSShapeGroup\"></path><path d=\"M1,1 L7,6 L13,1\" id=\"Path-38\" sketch:type=\"MSShapeGroup\"></path></g></g></g></svg>"

/***/ },
/* 329 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>facebook</title><desc>Created with Sketch.</desc><defs></defs><g id=\"48x48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"facebook\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><path d=\"M19.3205007,40 L19.3205007,25.4033824 L14,25.4033824 L14,19.7147195 L19.3205007,19.7147195 L19.3205007,15.5195424 C19.3205007,10.6509904 22.5411621,8 27.2454937,8 C29.4987635,8 31.4353823,8.15492709 32,8.2241288 L32,13.3120079 L28.7371185,13.3134202 C26.1788236,13.3134202 25.683502,14.4357589 25.683502,16.0827596 L25.683502,19.7147195 L31.7849221,19.7147195 L30.9903883,25.4033824 L25.683502,25.4033824 L25.683502,40\" id=\"Facebook-:-Icon\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 330 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>forward</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"forward\" sketch:type=\"MSArtboardGroup\" stroke-linecap=\"round\" stroke=\"#3E97BD\" stroke-width=\"2\"><g id=\"Left-Arrow-:-Glyph\" sketch:type=\"MSLayerGroup\" transform=\"translate(12.000000, 12.000000) rotate(-180.000000) translate(-12.000000, -12.000000) translate(5.000000, 8.000000)\"><path d=\"M0,4 L14,4\" id=\"Path-1\" sketch:type=\"MSShapeGroup\"></path><path d=\"M2.84217094e-14,4 L4,0\" id=\"Path-2\" sketch:type=\"MSShapeGroup\"></path><path d=\"M2.84217094e-14,4 L4,8\" id=\"Path-3\" sketch:type=\"MSShapeGroup\"></path></g></g></g></svg>"

/***/ },
/* 331 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 60 60\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>Oval 1</title><desc>Created with Sketch.</desc><defs><radialGradient cx=\"50%\" cy=\"50%\" fx=\"50%\" fy=\"50%\" r=\"50%\" id=\"radialGradient-1\"><stop stop-color=\"#000000\" stop-opacity=\"0\" offset=\"0%\"></stop><stop stop-color=\"#000000\" stop-opacity=\"0.3\" offset=\"100%\"></stop></radialGradient></defs><g id=\"Mocks\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"Heartstrings-Medium-02\" sketch:type=\"MSArtboardGroup\" transform=\"translate(-158.000000, -210.000000)\" fill=\"#FFFFFF\"><g id=\"Group\" sketch:type=\"MSLayerGroup\" transform=\"translate(11.000000, 186.000000)\"><g id=\"Header\" transform=\"translate(24.000000, 24.000000)\" sketch:type=\"MSShapeGroup\"><path d=\"M153,60 C169.568542,60 183,46.5685425 183,30 C183,13.4314575 169.568542,0 153,0 C136.431458,0 123,13.4314575 123,30 C123,46.5685425 136.431458,60 153,60 Z M173,25.2954545 C173.0036,28.4446591 171.6788,31.5 169.2664,33.9026705 C167.8308,35.3261364 166.1772,36.9703409 164.4868,38.6511364 L154.7312,48.2697727 C154.3088,48.6897727 153.7424,48.9184659 153.1352,48.9184659 C152.4868,48.9184659 151.8716,48.6615341 151.408,48.1961932 C150.9528,47.7431818 150.6984,47.1481818 150.686,46.5197727 C150.6736,45.9040909 150.9032,45.3246023 151.3344,44.891875 L160.8188,35.4569886 L159.9336,34.575625 L150.4484,44.0117045 C150.0256,44.4277273 149.4556,44.6596023 148.8524,44.6596023 C148.2084,44.6596023 147.5932,44.4026705 147.1248,43.9385227 C146.6576,43.4731818 146.3992,42.8654545 146.3992,42.2211364 C146.3992,41.6169886 146.6288,41.0538068 147.0512,40.6338068 L156.536,31.198125 L155.5276,30.1950568 L146.0376,39.6259659 C145.6152,40.0463636 145.0488,40.2746591 144.442,40.2746591 C143.794,40.2746591 143.178,40.0177273 142.7144,39.5535795 C142.2592,39.1001705 142.0048,38.5047727 141.9924,37.8767614 C141.9756,37.2610795 142.2096,36.6811932 142.6404,36.2484659 L151.67,27.2705682 L151.9448,27.5438068 C152.6752,28.2660795 153.6596,28.6618182 154.714,28.6618182 C155.8672,28.6618182 157.0204,28.1761932 157.8776,27.3322159 C159.568,25.6430682 159.666,22.9957955 158.0908,21.4295455 L153.6932,17.0557386 C155.826,15.0818182 158.5908,14.0003977 161.5168,14.0003977 C164.5728,14.0003977 167.4532,15.1836364 169.6272,17.329375 C171.798,19.4743182 172.9964,22.3053409 173,25.2954545 Z M150.7844,26.3884091 L141.7552,35.3671023 C141.3328,35.783125 140.762,36.0157955 140.1596,36.0157955 C139.5152,36.0157955 138.9,35.7588636 138.4324,35.2939205 C137.9648,34.829375 137.7068,34.2216477 137.7068,33.5765341 C137.7068,32.9731818 137.9356,32.41 138.3588,31.99 L147.388,23.0113068 L150.7844,26.3884091 Z M157.1476,26.6047727 C156.4908,27.2574432 155.6056,27.6328977 154.7148,27.6328977 C153.9312,27.6328977 153.2052,27.3429545 152.6716,26.8171591 L144.6064,18.7930114 L143.876,19.5188636 L146.662,22.2886364 L137.632,31.2673295 C137.3656,31.5326136 137.152,31.8388636 136.992,32.1769318 C136.742,32.703125 136.6392,33.2826136 136.6884,33.858125 C134.3044,31.4634091 132.996,28.4239773 133,25.2954545 C133.004,22.3053409 134.202,19.4743182 136.3728,17.3285795 C138.5424,15.1832386 141.4224,14 144.4832,14 C146.2924,14 148.0156,14.4040909 149.6076,15.1951705 C150.2556,15.5133523 150.8872,15.9051136 151.4824,16.3656818 L151.7656,16.5860227 L157.3652,22.1502273 C158.5344,23.3211364 158.44,25.3193182 157.1476,26.6047727 Z\" id=\"Oval-1\"></path></g></g></g></g></svg>"

/***/ },
/* 332 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>heart-hands</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"heart-hands\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><path d=\"M13.6590397,10.0536819 C13.3963198,10.3153596 13.0422399,10.4658921 12.6859201,10.4658921 C12.3724802,10.4658921 12.0820803,10.3496441 11.8686404,10.1388348 L8.64256175,6.92168119 L8.35040187,7.21270004 L9.46480141,8.32319608 L5.8528029,11.9230594 C5.74624294,12.0294208 5.66080297,12.1522068 5.596803,12.2877499 C5.49680304,12.4987186 5.45568306,12.7310553 5.47536305,12.9617974 C4.52176344,12.0016744 3.99840366,10.7830628 4.00000366,9.5287317 C4.00160366,8.3298935 4.48080346,7.19484025 5.3491231,6.33454069 C6.21696275,5.47440059 7.36896227,5 8.59328177,5 C9.31696147,5 10.0062412,5.16201378 10.6430409,5.47918446 C10.9022408,5.60675437 11.1548807,5.76382482 11.3929606,5.94848226 L11.5062406,6.03682442 L13.7460796,8.26770317 C14.2137595,8.73716043 14.1759995,9.53829945 13.6590397,10.0536819 Z M11.1137607,9.96693434 L7.50208222,13.5667977 C7.33312229,13.7335953 7.10480238,13.8268808 6.86384248,13.8268808 C6.60608259,13.8268808 6.36000269,13.7238681 6.17296276,13.5374566 C5.98592284,13.3512045 5.88272288,13.107546 5.88272288,12.848898 C5.88272288,12.6069936 5.97424285,12.3811948 6.14352278,12.2128026 L9.75520129,8.61293923 L11.1137607,9.96693434 Z M19.9999971,9.5287317 C20.0014371,10.7913549 19.4715173,12.0163449 18.5065577,12.9796572 C17.9323179,13.550373 17.2708782,14.2095905 16.5947185,14.8834786 L12.6924801,18.7399169 C12.5235201,18.9083091 12.2969602,19 12.0540803,19 C11.7947204,19 11.5486406,18.8969873 11.3632006,18.7104163 C11.1811207,18.5287887 11.0793607,18.2902329 11.0744007,18.0382824 C11.0694407,17.7914346 11.1612807,17.5590979 11.3337606,17.3856028 L15.1275191,13.6028362 L14.7734392,13.2494675 L10.9793608,17.0327126 C10.8102409,17.1995102 10.5822409,17.2924768 10.340961,17.2924768 C10.0833612,17.2924768 9.83728126,17.1894641 9.64992133,17.0033715 C9.46304141,16.8168005 9.35968145,16.573142 9.35968145,16.3148129 C9.35968145,16.0725896 9.45152141,15.8467908 9.62048134,15.6783985 L13.4143998,11.8953129 L13.0110399,11.4931488 L9.21504151,15.2743209 C9.04608158,15.4428726 8.81952167,15.534404 8.57680177,15.534404 C8.31760188,15.534404 8.07120198,15.4313913 7.88576206,15.2452987 C7.70368213,15.0635116 7.60192218,14.8247964 7.59696218,14.5730053 C7.59024218,14.3261575 7.68384214,14.0936614 7.85616207,13.9201663 L11.4680006,10.3206219 L11.5779205,10.4301726 C11.8700804,10.7197563 12.2638403,10.8784213 12.6856001,10.8784213 C13.1468799,10.8784213 13.6081597,10.6837178 13.9510396,10.3453386 C14.6271993,9.66810183 14.6663993,8.6067202 14.0363195,7.97875733 L12.2772803,6.2251495 C13.1303999,5.43373768 14.2363194,5.00015946 15.406719,5.00015946 C16.6291185,5.00015946 17.781278,5.47456005 18.6508776,6.33485962 C19.5191973,7.19484025 19.9985571,8.3298935 19.9999971,9.5287317 Z\" id=\"Shape\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 333 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>heartstrings</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"heartstrings\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><path d=\"M16.6060606,5.10879954 C15.8681663,4.93869631 15.0883554,4.96229963 14.3434343,5.22038751 L14.3434343,17.0353348 C14.6577308,16.8023573 15.0213717,16.5329652 15.4478114,16.2152964 C15.8204019,15.9379935 16.2129947,15.6407392 16.6060606,15.3225646 L16.6060606,5.10879954 Z M17.7373737,5.53904365 C19.1267504,6.29384838 20.1616162,7.78499304 20.1616162,9.65126453 C20.1616162,11.5139343 19.0654663,13.0601973 17.7373737,14.3329281 L17.7373737,5.53904365 Z M13.2121212,5.82518598 C12.802986,6.13179954 12.4204802,6.52908707 12.0808081,7.0256518 C11.6967774,6.4642395 11.2579949,6.0297272 10.7878788,5.7097731 L10.7878788,17.7807794 C11.3686314,18.2147948 11.7121024,18.48151 12.0808081,18.8409091 C12.4161988,18.5139841 12.7241945,18.2551206 13.2121212,17.8815267 L13.2121212,5.82518598 Z M9.65656566,5.16871882 C8.90608523,4.944374 8.12617907,4.95250562 7.39393939,5.15248456 L7.39393939,15.1720071 C7.84264214,15.5438349 8.29269759,15.8906308 8.71380471,16.2152964 C9.06856458,16.4887315 9.38026407,16.7259389 9.65656566,16.934507 L9.65656566,5.16871882 Z M6.26262626,5.63723411 C4.95537089,6.42181554 4,7.87634451 4,9.68277189 C4,11.4634338 5.01270537,12.9308579 6.26262626,14.1593024 L6.26262626,5.63723411 Z\" id=\"Imported-Layers\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 334 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>info</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"0\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"info\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><g id=\"Info-:-Glyph\" sketch:type=\"MSLayerGroup\" transform=\"translate(4.000000, 4.000000)\"><path d=\"M8,16 C12.418278,16 16,12.418278 16,8 C16,3.581722 12.418278,0 8,0 C3.581722,0 0,3.581722 0,8 C0,12.418278 3.581722,16 8,16 Z M8.86489391,3 C9.14751015,3 9.38567914,3.09800255 9.57940802,3.29401059 C9.7731369,3.49001863 9.86999989,3.72704806 9.86999989,4.00510598 C9.86999989,4.2831639 9.77199733,4.52019332 9.57598929,4.71620136 C9.37998125,4.9122094 9.14295183,5.01021195 8.86489391,5.01021195 C8.59139432,5.01021195 8.35664402,4.9122094 8.16063598,4.71620136 C7.96462794,4.52019332 7.86662539,4.2831639 7.86662539,4.00510598 C7.86662539,3.72704806 7.96348837,3.49001863 8.15721725,3.29401059 C8.35094613,3.09800255 8.58683599,3 8.86489391,3 Z M9.28881616,6.14522959 L7.88713775,11.0066605 C7.8096462,11.2847185 7.77090101,11.4670488 7.77090101,11.553657 C7.77090101,11.6037986 7.79141317,11.6505207 7.83243811,11.6938248 C7.87346305,11.7371289 7.9167665,11.7587807 7.96234977,11.7587807 C8.03984132,11.7587807 8.11733171,11.7245937 8.19482326,11.6562188 C8.39994795,11.4875607 8.64609389,11.1821574 8.93326846,10.7399998 L9.16574196,10.8767489 C8.47743465,12.0755888 7.74583421,12.6749997 6.9709187,12.6749997 C6.67462747,12.6749997 6.43873761,12.5918115 6.26324204,12.4254326 C6.08774647,12.2590537 6,12.0482342 6,11.7929679 C6,11.6243099 6.03874519,11.4100717 6.11623675,11.1502471 L7.06664308,7.88194332 C7.15780961,7.56741879 7.20339219,7.33038936 7.20339219,7.17084793 C7.20339219,7.07056475 7.16008874,6.98167871 7.07348053,6.90418716 C6.98687233,6.82669561 6.86835762,6.78795042 6.71793284,6.78795042 C6.64955794,6.78795042 6.5675093,6.79022955 6.47178444,6.79478787 L6.56067136,6.52128965 L8.87856882,6.14522959 L9.28881616,6.14522959 Z\" id=\"Oval-5\" sketch:type=\"MSShapeGroup\"></path></g></g></g></svg>"

/***/ },
/* 335 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>twitter</title><desc>Created with Sketch.</desc><defs></defs><g id=\"48x48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"twitter\" sketch:type=\"MSArtboardGroup\" fill=\"#3E97BD\"><path d=\"M40,14.0778295 C38.8226051,14.5998704 37.5573064,14.9526956 36.2292695,15.1113792 C37.5848129,14.2990035 38.6257288,13.0126835 39.1159296,11.4800295 C37.8474706,12.2321382 36.4424156,12.7784029 34.9469988,13.0728335 C33.7493544,11.7971626 32.0431325,11 30.1548996,11 C26.5290757,11 23.5895095,13.9388058 23.5895095,17.5636022 C23.5895095,18.0780365 23.6476828,18.5790132 23.7595816,19.0593938 C18.3032298,18.7856763 13.4657156,16.1725463 10.2276748,12.2014781 C9.66256264,13.170899 9.33880537,14.2984184 9.33880537,15.5013008 C9.33880537,17.7784569 10.4979407,19.7875127 12.2595267,20.9645329 C11.183262,20.9304792 10.1710231,20.6352294 9.28578222,20.1436146 C9.28531402,20.170998 9.28531402,20.1984985 9.28531402,20.226116 C9.28531402,23.4063409 11.5483375,26.0592588 14.5516954,26.6621628 C14.0007462,26.8121866 13.4207689,26.8923476 12.8219467,26.8923476 C12.3989319,26.8923476 11.9876221,26.8512724 11.5868466,26.7746221 C12.4222247,29.3823691 14.8467757,31.2800187 17.719624,31.3330303 C15.4727532,33.0934116 12.6419255,34.1427594 9.56611434,34.1427594 C9.03623395,34.1427594 8.51361059,34.1117482 8,34.0511302 C10.9053879,35.9134388 14.3563408,37 18.0638648,37 C30.1395662,37 36.7429972,26.9983707 36.7429972,18.3247216 C36.7429972,18.040121 36.7366765,17.7570417 36.7240353,17.4756006 C38.0066572,16.5501805 39.1197922,15.3941074 40,14.0778295\" id=\"Twitter-:-Logo\" sketch:type=\"MSShapeGroup\"></path></g></g></svg>"

/***/ },
/* 336 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>ID</title><desc>Created with Sketch.</desc><defs></defs><g id=\"24x24\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"ID\" fill=\"#3E97BD\"><path d=\"M12.937688,4.77118882 C12.4198171,3.79298831 11.5779826,3.7971439 11.0623118,4.77118881 L3.93768809,18.2288117 C3.41981725,19.2070122 3.89262276,20.0000004 4.99508923,20.0000004 L19.0049103,20.0000005 C20.1067677,20.0000005 20.5779823,19.2028567 20.0623115,18.2288118 L12.937688,4.77118882 Z M12,18 C12.5522847,18 13,17.5522847 13,17 C13,16.4477153 12.5522847,16 12,16 C11.4477153,16 11,16.4477153 11,17 C11,17.5522847 11.4477153,18 12,18 Z M11,10.0368173 C11,9.485791 11.4438648,9.03909595 12,9.03909595 C12.5522847,9.03909595 13,9.48713258 13,10.0368173 L13,14.0022787 C13,14.553305 12.5561352,15 12,15 C11.4477153,15 11,14.5519634 11,14.0022787 L11,10.0368173 Z\" id=\"Warning-:-Glyph\"></path></g></g></svg>"

/***/ },
/* 337 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 351 226\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"><title>Group</title><desc>Created with Sketch.</desc><defs></defs><g id=\"Explorations\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"><g id=\"Heartstrings-Donation-Flow---CNN---01\" sketch:type=\"MSArtboardGroup\" transform=\"translate(-12.000000, -256.000000)\"><g id=\"Group\" sketch:type=\"MSLayerGroup\" transform=\"translate(12.000000, 256.000000)\"><g id=\"Oval\" sketch:type=\"MSShapeGroup\"><g><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"224.990652\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"222.159522\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"222.159522\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"219.32074\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"216.493436\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"216.493436\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1249269\" cy=\"213.67761\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"213.67761\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"213.67761\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"213.67761\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"210.850306\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"210.850306\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"208.011525\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"208.011525\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"208.011525\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"205.184221\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"205.184221\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"205.184221\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.448999\" cy=\"205.184221\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.118697\" cy=\"202.353091\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.118697\" cy=\"199.529613\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.118697\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.938222\" cy=\"196.687005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.118697\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.938222\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.796056\" cy=\"193.859701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.583503\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.441337\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.260863\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"191.059178\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.583503\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.441337\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.260863\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"188.2357\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.583503\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.441337\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.260863\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"185.393093\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.583503\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.441337\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.260863\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.435107\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.250801\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.108636\" cy=\"182.569615\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.587334\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.445168\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.264693\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.435107\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.254632\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.112466\" cy=\"179.738485\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1172651\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.587334\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.445168\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.264693\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.435107\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.254632\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.112466\" cy=\"176.911181\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1172651\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.587334\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.445168\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.264693\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.435107\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.254632\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.112466\" cy=\"174.072399\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.259431\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1172651\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9367905\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7678085\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.587334\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.445168\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.264693\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.107204\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.926729\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.784564\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.604089\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.435107\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.254632\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.112466\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.931992\" cy=\"171.245095\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2670927\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1249269\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"106.272355\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.114866\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.934391\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.792225\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.611751\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.442769\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.262294\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.120128\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.935823\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.770672\" cy=\"168.429269\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4475674\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2670927\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1249269\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.114866\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.934391\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.792225\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.611751\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.442769\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.262294\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.120128\" cy=\"165.601965\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4475674\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2670927\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1249269\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.114866\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.934391\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.792225\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.611751\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.442769\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.258927\" cy=\"162.759358\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2670927\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1249269\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7754702\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.594996\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.114866\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.934391\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.792225\" cy=\"159.93588\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1287577\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7793011\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.598826\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.118697\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.938222\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.796056\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.934855\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.443232\" cy=\"157.100924\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4475674\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2709236\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1287577\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7793011\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.598826\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.115329\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.934855\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.765873\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.585398\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.443232\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.262758\" cy=\"154.277446\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6203802\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1287577\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7793011\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.598826\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.45283\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.595459\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.115329\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.934855\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.765873\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.585398\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.443232\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.262758\" cy=\"151.438664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8008549\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6203802\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9444522\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.272355\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.775934\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.595459\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.115329\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.934855\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.765873\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.585398\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.443232\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.262758\" cy=\"148.61136\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.2924773\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1234953\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9430207\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8008549\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.779765\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.59929\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.11916\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.447063\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"174.266589\" cy=\"145.79936\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7955924\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6151178\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.472952\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.2924773\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1234953\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9430207\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9482831\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7793011\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.598826\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.59929\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.11916\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.447063\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"142.972056\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7955924\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6151178\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.472952\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9430207\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4513982\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2709236\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.779765\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.59929\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.11916\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.447063\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"140.133274\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1335564\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9530818\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7955924\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6151178\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.59929\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.441801\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.257495\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.11916\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.447063\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"137.309796\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2795532\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1373873\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9569127\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7994233\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6189487\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4767828\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4513982\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"154.445632\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.265157\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.122991\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.450894\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"134.47484\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4600278\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2795532\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1373873\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9569127\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7994233\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6189487\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4767828\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.2963082\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9468516\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6242111\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.265157\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.122991\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.450894\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"131.651362\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4600278\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2795532\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1373873\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9569127\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7994233\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6189487\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4767828\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.2963082\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1273262\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9468516\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8046857\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6242111\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.265157\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.122991\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.450894\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"128.812581\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4600278\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2795532\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1373873\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9569127\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.7994233\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6189487\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4767828\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.2963082\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1273262\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9468516\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8046857\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6242111\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4513982\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.122991\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.938686\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.769704\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.589229\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.450894\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.266589\" cy=\"125.985277\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8133153\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6328407\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4638587\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.283384\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1412182\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9607436\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1311571\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9506825\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.628042\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.45906\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2785854\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"123.165625\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8133153\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6328407\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4638587\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.283384\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1412182\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9607436\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1311571\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9506825\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.628042\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.45906\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2785854\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.268988\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.126822\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.946347\" cy=\"120.338321\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.959312\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8133153\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6328407\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4638587\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.283384\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1412182\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9607436\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1311571\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9506825\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.628042\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.45906\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2785854\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1364195\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.268988\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.126822\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.946347\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.777365\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"117.499539\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.959312\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8133153\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6328407\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4638587\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.283384\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1412182\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9607436\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1311571\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9506825\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.628042\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.45906\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2785854\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1364195\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9559449\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.268988\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.126822\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.946347\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.777365\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.59306\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"114.676061\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.959312\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8171462\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6366715\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4676896\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2872149\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1450491\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9645744\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.134988\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9545133\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6318729\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4628909\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2824162\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1402504\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9597757\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7907937\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.610319\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.468153\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.781196\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.600722\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"111.844931\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.959312\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8171462\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6366715\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4676896\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2872149\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1450491\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9645744\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.134988\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9545133\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6318729\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4628909\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2824162\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1402504\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9597757\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7907937\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.610319\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.949715\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.950178\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.781196\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.600722\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"109.017627\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8171462\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6366715\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4676896\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2872149\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1450491\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9645744\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.134988\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9545133\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6318729\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4628909\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2824162\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1402504\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9597757\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7907937\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.130189\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.949715\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.781196\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.600722\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"106.178846\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1397867\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.959312\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8171462\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6366715\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4676896\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2872149\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1450491\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9645744\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8070851\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6266104\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4844446\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.30397\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.134988\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9545133\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8123475\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6318729\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4628909\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2824162\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1402504\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9597757\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.7907937\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.610319\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.468153\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.287679\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.272819\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.950178\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"168.600722\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.458556\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.27425\" cy=\"103.351542\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8286388\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4791822\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2987076\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"58.1565417\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1464806\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.966006\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.827671\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6433655\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2939089\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.151743\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9712684\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8022864\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.621812\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.479646\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.299171\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.145513\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.284311\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.142146\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.961671\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"165.792689\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.470049\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"100.82648\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"4.32505998\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3202613\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8286388\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4791822\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2987076\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1565417\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1464806\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.966006\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.827671\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6433655\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2939089\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.151743\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9712684\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8022864\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.621812\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.479646\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.299171\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.145513\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"157.284311\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.142146\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.961671\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"98.0030019\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.15990886\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.97560336\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3202613\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8286388\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4791822\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2987076\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1565417\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1464806\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.966006\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.151743\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9712684\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8022864\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.621812\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.479646\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.299171\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.142146\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.961671\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"95.1603945\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8372684\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6529629\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6429018\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5045668\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3202613\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8286388\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4791822\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.2987076\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1565417\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.151743\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9712684\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8022864\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.621812\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.479646\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"160.142146\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"162.961671\" cy=\"92.3369164\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.15990886\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8372684\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6467326\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5045668\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3240922\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8324697\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4830131\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3025384\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1603726\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2977397\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1555739\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9750993\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.483477\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.473879\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"89.5057866\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"4.32889086\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.15990886\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.97943424\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8372684\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6529629\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.4993044\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1766639\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"26.9961893\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.8272073\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6467326\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5045668\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3240922\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8324697\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4830131\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3025384\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1603726\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1555739\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9750993\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.473416\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.292941\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.473879\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"86.6784826\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"4.32889086\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.15990886\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.97943424\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8372684\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6529629\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.4993044\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3188298\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1766639\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"26.9961893\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.8272073\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6467326\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5045668\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3240922\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8324697\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4830131\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3025384\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1603726\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.2977397\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1555739\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.625643\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.638567\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.473416\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.292941\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"171.473879\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"83.8397011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.15990886\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.97943424\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8372684\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6529629\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.4993044\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3188298\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1766639\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"26.9961893\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.8272073\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6467326\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5045668\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3240922\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1551102\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9746355\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8324697\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6481642\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4830131\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3025384\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1603726\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9760671\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8224086\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.641934\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.4997681\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3154626\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1503115\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4782144\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8061173\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.625643\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.638567\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.473416\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.292941\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"174.289574\" cy=\"81.0123971\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98709599\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"15.6606246\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.5069661\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1843257\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"27.003851\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.834869\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6543944\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5122285\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.327923\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1627719\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9784664\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6558259\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9837288\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8300703\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6495957\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3231243\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9736677\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6510272\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8099481\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.633304\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.646229\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.296772\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.952578\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.810412\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.629937\" cy=\"78.1927449\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"1.51702724\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"4.33272174\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.16757062\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98709599\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6606246\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.5069661\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1843257\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"27.003851\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.834869\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6543944\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5122285\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.327923\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1627719\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9784664\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6558259\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9837288\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8300703\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6495957\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3231243\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9736677\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8099481\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.491139\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.646229\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.296772\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.974131\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.952578\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.810412\" cy=\"75.3692667\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.16757062\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98326511\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6606246\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.5069661\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1804948\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"27.003851\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.834869\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6543944\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5122285\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.327923\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1627719\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9784664\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6558259\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9837288\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8300703\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6495957\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3231243\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9736677\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6510272\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8099481\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.633304\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.491139\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.646229\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.296772\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.974131\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"72.5266594\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"4.33272174\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.16757062\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98326511\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6606246\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.5069661\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1804948\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"27.003851\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.834869\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"32.6543944\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"35.5122285\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.327923\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1627719\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9784664\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6558259\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9837288\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8300703\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3231243\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9736677\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6510272\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8099481\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.633304\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.646229\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.296772\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.974131\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.624675\" cy=\"69.6993554\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.16757062\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98709599\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6644555\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.510797\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1843257\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"27.003851\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"29.8386999\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"38.3317539\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"41.1666028\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9822973\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8339012\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9774986\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.813779\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.302034\" cy=\"66.8720514\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"7.16757062\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"9.98709599\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6644555\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"18.510797\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"21.3264915\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"24.1843257\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9875597\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8339012\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6495957\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1579732\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4858761\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.813779\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.302034\" cy=\"64.0447475\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"12.8449301\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"15.6644555\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6596568\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9875597\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4858761\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9789301\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"61.205966\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9822973\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8401314\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6596568\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4906748\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1680343\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9875597\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5074299\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9774986\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8353327\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4858761\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1632356\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.830534\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.481077\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.302034\" cy=\"58.378662\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9822973\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8439623\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4945057\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1718652\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9875597\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6534266\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5112607\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1618041\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9774986\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.489707\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"55.5666614\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9822973\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8439623\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6596568\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5112607\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3269552\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1618041\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8391636\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"52.7393575\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"43.9822973\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8439623\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.960239\" cy=\"49.9005759\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4945057\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3102002\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1718652\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9875597\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5112607\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1618041\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9774986\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8391636\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6548581\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.489707\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.157005\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.9727\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.628506\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"47.0770978\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"52.4945057\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3140311\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1718652\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"60.9913906\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6534266\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5112607\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1618041\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.637135\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.157005\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.976531\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.65389\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.166099\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.981793\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.812811\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.490171\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.140714\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.960239\" cy=\"44.2421422\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"46.8439623\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6634877\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1718652\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3307861\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1618041\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8391636\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.658689\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.489707\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3092324\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8176099\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.637135\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.494969\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.314495\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.157005\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.976531\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.65389\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.166099\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.981793\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.812811\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.490171\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.140714\" cy=\"41.418664\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"49.6634877\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8391636\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.658689\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.637135\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.494969\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.314495\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.157005\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.976531\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.65389\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"120.484908\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.166099\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.981793\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.812811\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.490171\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.140714\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.960239\" cy=\"38.5760567\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"55.3140311\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"58.1718652\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6534266\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8391636\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.658689\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.489707\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3092324\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9865919\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8176099\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.637135\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.494969\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.314495\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.157005\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.976531\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.834365\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.65389\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.166099\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.981793\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.812811\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.490171\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.140714\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.960239\" cy=\"35.7487527\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8453938\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"66.6610883\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"69.5189225\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1694659\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8468254\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6625199\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9904228\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8252716\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.640966\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.318326\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.164667\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.842027\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.494002\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.313527\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.144545\" cy=\"32.9329263\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"63.8453938\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1694659\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1747283\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8252716\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.640966\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.318326\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.164667\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.842027\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.494002\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.313527\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.144545\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.967901\" cy=\"30.1094482\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1694659\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6625199\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1747283\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.318326\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.164667\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.842027\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.494002\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.313527\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.144545\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.967901\" cy=\"27.2668408\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3384479\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1694659\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6625199\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1747283\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9904228\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.640966\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.318326\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.164667\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.842027\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.494002\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.313527\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.144545\" cy=\"24.4395368\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"72.3384479\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1732967\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1785591\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9942536\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.644797\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.322157\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.168498\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.845858\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.497832\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.317358\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.148376\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.967901\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.825735\" cy=\"21.6122329\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"75.1732967\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6663507\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1785591\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9942536\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8252716\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.502631\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.322157\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.168498\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.845858\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.497832\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.317358\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.967901\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.825735\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.64143\" cy=\"18.7849289\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8468254\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6663507\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1785591\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9942536\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8252716\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.644797\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.322157\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.168498\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.845858\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.496401\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.639998\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.497832\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.317358\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"145.967901\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"148.825735\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"151.64143\" cy=\"15.9423215\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"77.9889912\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"80.8468254\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"83.6663507\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.4973688\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3168941\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1785591\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.9942536\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8252716\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"106.322157\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"109.168498\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.984193\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"114.845858\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.661552\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.312095\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.16993\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.985624\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.820473\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.148376\" cy=\"13.1188434\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1670665\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.982761\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8176099\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.633304\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.494969\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"111.976531\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"117.650059\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"10.3183204\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"86.489707\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"89.3054015\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1670665\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.982761\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"97.8176099\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"100.633304\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"103.494969\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"126.158437\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"143.136883\" cy=\"7.49101646\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"92.1670665\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"94.982761\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"120.484908\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"123.304434\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"140.305865\" cy=\"4.65223494\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"128.977962\" cy=\"1.82493098\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"131.80898\" cy=\"1.82493098\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"134.632337\" cy=\"1.82493098\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"137.48634\" cy=\"1.82493098\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.765711\" cy=\"210.869435\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.581406\" cy=\"210.869435\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.929431\" cy=\"208.026828\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.581406\" cy=\"208.026828\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.109906\" cy=\"205.199524\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.929431\" cy=\"205.199524\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.247273\" cy=\"205.199524\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"202.37222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.247273\" cy=\"202.37222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"199.544916\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.113737\" cy=\"199.544916\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.929431\" cy=\"199.544916\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.76428\" cy=\"199.544916\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.431578\" cy=\"199.544916\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.942396\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.769079\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.584773\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.262133\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.605359\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.436377\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.113737\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.929431\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.76428\" cy=\"196.706134\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.119039\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.942396\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.584773\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.442607\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.262133\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.108474\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.785834\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.605359\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.436377\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.113737\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.929431\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.76428\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.579974\" cy=\"193.878831\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28036\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.111378\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.930903\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.788737\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.757586\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.573281\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.25064\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.916507\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.774341\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.428715\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.917938\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.752787\" cy=\"191.078308\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.460834\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28036\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.111378\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.930903\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.788737\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.926568\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.757586\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.573281\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.25064\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.916507\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.774341\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.428715\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.917938\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.752787\" cy=\"188.254829\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.460834\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28036\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.111378\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.930903\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.788737\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.778676\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.757586\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.573281\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.25064\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.916507\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.774341\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.428715\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.917938\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.752787\" cy=\"185.412222\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.603\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.460834\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28036\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.111378\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.930903\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.788737\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.778676\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.757586\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.573281\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.25064\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.916507\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.774341\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.428715\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.917938\" cy=\"182.584918\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.606831\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.464665\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28419\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.115208\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.934734\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.792568\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.782507\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.602032\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.254471\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.920338\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.778172\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.428715\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"179.753788\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.783475\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.606831\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.464665\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28419\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.115208\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.934734\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.792568\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.274129\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.131964\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.602032\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.254471\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.100812\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.920338\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.778172\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.102244\" cy=\"176.93031\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.603\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.464665\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"185.28419\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.115208\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.934734\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.792568\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.274129\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.131964\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.602032\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.920338\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.778172\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.593866\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.24441\" cy=\"174.087703\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.603\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.464665\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.28419\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.115208\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.934734\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.792568\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.608263\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.450773\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.274129\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.131964\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.434946\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.254471\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.917938\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.756618\" cy=\"171.264225\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.288021\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.119039\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.938565\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.796399\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.615924\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.458435\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.25687\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.114704\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.93423\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.436377\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.113737\" cy=\"168.444572\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.288021\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.119039\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.938565\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.796399\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.615924\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.458435\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.442607\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.782003\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.597697\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.436377\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.252072\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.113737\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.76428\" cy=\"165.621094\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.288021\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.119039\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.938565\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.796399\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.615924\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.458435\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.135794\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.114704\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.93423\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.769079\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.442607\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.782003\" cy=\"162.778487\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.288021\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.119039\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.938565\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.796399\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.615924\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.458435\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.135794\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.95532\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.114704\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.93423\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.769079\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.442607\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.258302\" cy=\"159.951183\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.139625\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.932798\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.769079\" cy=\"157.120053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"182.472327\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.139625\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.781539\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.446438\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.262133\" cy=\"154.292749\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.139625\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.260701\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.588604\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.262133\" cy=\"151.453968\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.794967\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.614493\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.472327\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.281791\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.139625\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.260701\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.446438\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.262133\" cy=\"148.63049\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.467528\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.932798\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.260701\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.446438\" cy=\"145.818489\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.467528\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.283223\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.932798\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.118535\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.446438\" cy=\"142.995011\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.467528\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.283223\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.118072\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.932798\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.118535\" cy=\"140.152403\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.291852\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.80023\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.619755\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.462266\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.959151\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.790169\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.609694\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.467528\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.283223\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.2655\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.939028\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.282255\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.932798\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.790632\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.606327\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.441176\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.260701\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.118535\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.938061\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.769079\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.446438\" cy=\"137.3251\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.295683\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.804061\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.623586\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.962982\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.794\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.613525\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.121902\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.941428\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.799262\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.614956\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.2655\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.94669\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.286086\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.936629\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.794463\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.613989\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.445007\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.264532\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.122366\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.938061\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77291\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.588604\" cy=\"134.49397\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.476158\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.295683\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.946226\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.804061\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.623586\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.466097\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.962982\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.794\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.47519\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.290884\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.121902\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.941428\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.799262\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.614956\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.2655\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.94669\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.286086\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.936629\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.794463\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.613989\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.445007\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.264532\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.122366\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.938061\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77291\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.588604\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.450269\" cy=\"131.666666\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.798798\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.618324\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.295683\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.12287\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.466097\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.962982\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.794\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.613525\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.47519\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.290884\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.121902\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.941428\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.799262\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.614956\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.2655\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.94669\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.286086\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.936629\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.794463\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.613989\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.445007\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.264532\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.122366\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.938061\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77291\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.588604\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.450269\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.93183\" cy=\"128.827884\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.285622\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.143456\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.962982\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.794\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.613525\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.47519\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.290884\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.121902\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.941428\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.799262\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.614956\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.445974\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.2655\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.123334\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.94669\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.789201\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.608726\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.46656\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.286086\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.113273\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.936629\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.794463\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.613989\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.445007\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.264532\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.122366\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.938061\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77291\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.588604\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.785834\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.605359\" cy=\"126.004406\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.625985\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.627417\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.297115\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.621187\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.125733\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.945259\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.806924\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.622618\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.453636\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.273162\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.130996\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.950521\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.289917\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.944291\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.617819\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.448838\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.268363\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.945722\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77674\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.596266\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.116136\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.613021\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.44787\" cy=\"123.184754\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.627417\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.469928\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.297115\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.125733\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.945259\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.806924\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.622618\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.453636\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.273162\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.130996\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.950521\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.289917\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.944291\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.617819\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.448838\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.268363\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.945722\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77674\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.596266\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.116136\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.267395\" cy=\"120.35745\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.625985\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.627417\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.469928\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.621187\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.125733\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.945259\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.806924\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.622618\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.453636\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.273162\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.130996\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.950521\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.289917\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.944291\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.617819\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.448838\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.268363\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.945722\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77674\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.596266\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.116136\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.267395\" cy=\"117.518668\" rx=\"0.927072201\" ry=\"0.925855967\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.80646\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.483819\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.479021\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.125733\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.945259\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.806924\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.622618\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.453636\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.273162\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.130996\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.950521\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.289917\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.944291\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.617819\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.448838\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.268363\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.945722\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.77674\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.596266\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.116136\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.939492\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.797326\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.267395\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.125229\" cy=\"114.691364\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.810291\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.629816\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.48765\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.473758\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.482852\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.129564\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.95292\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.810755\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.626449\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.457467\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.276992\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.134827\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.954352\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.293747\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.948122\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.62165\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.452668\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.272194\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.949553\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.780571\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.600097\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.119967\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.939492\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.797326\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.613021\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.267395\" cy=\"111.860235\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.810291\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.629816\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.48765\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.631248\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.473758\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.297115\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.621187\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.129564\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.95292\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.810755\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.626449\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.457467\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.276992\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.134827\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.954352\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.293747\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.948122\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.62165\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.452668\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.272194\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.949553\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.780571\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.600097\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.119967\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.939492\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.797326\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.613021\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.267395\" cy=\"109.036756\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.810291\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.629816\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.48765\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.631248\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.473758\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.297115\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.621187\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.482852\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.129564\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.95292\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.810755\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.626449\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.457467\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.276992\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.134827\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.954352\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.293747\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.948122\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.62165\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.452668\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.272194\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"275.949553\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.780571\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.600097\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.119967\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.939492\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.797326\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.613021\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.44787\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.125229\" cy=\"106.194149\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.810291\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.629816\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.48765\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.303345\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.134363\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.953888\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.811722\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.631248\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.473758\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.297115\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.151118\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.970643\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.801661\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.621187\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.482852\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.298546\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.129564\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.95292\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.810755\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.626449\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.457467\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.276992\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.134827\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.954352\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.796863\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.616388\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.474222\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.293747\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.124765\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.948122\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.802125\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.62165\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.452668\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.272194\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.130028\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.949553\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.780571\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.600097\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.457931\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.273625\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.119967\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.939492\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.797326\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.613021\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.44787\" cy=\"103.366845\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.637478\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.495312\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.318668\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.145856\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.64274\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.485251\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.63651\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.310039\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.141057\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.960582\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.822247\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.637942\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.46896\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.30524\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.633143\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.283686\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.141521\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.961046\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.788233\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.282719\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.464625\" cy=\"100.845609\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.495312\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.318668\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.145856\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.64274\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.485251\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.63651\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.310039\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.141057\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.960582\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.822247\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.637942\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"233.46896\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.30524\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.633143\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.283686\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.141521\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.961046\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.788233\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.464625\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.28415\" cy=\"98.0183053\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.637478\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.145856\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.64274\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.485251\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.63651\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.310039\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.141057\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.960582\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.822247\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.637942\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.46896\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.30524\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.633143\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.283686\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.141521\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.961046\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.788233\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.464625\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.28415\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.111337\" cy=\"95.1756979\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.637478\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.64274\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.485251\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.63651\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.310039\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.141057\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.960582\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.822247\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.637942\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.46896\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.30524\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.633143\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.283686\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.141521\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.961046\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.788233\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.28415\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.111337\" cy=\"92.3522198\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.64514\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.502974\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.149686\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.646571\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.489082\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.640341\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.31387\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.144888\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.968244\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.826078\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.641773\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.472791\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.309071\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.636974\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.291348\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.145351\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.964877\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.795895\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.282719\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.960078\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.610621\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.118999\" cy=\"89.52109\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.64514\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.502974\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.149686\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.646571\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.489082\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.640341\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.31387\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.144888\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.968244\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.826078\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.641773\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.472791\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.309071\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.636974\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.291348\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.145351\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.964877\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.795895\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.282719\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.140553\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.960078\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.787265\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.610621\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.118999\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.938524\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.796358\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.612053\" cy=\"86.693786\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.64514\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.502974\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.149686\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.646571\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.489082\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.640341\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.31387\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.144888\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.968244\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.826078\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.641773\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.472791\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.309071\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.636974\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.291348\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.145351\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.964877\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.795895\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.282719\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.140553\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.960078\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.787265\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.610621\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.468456\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.28415\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.118999\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.938524\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.796358\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.612053\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.454564\" cy=\"83.8550045\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.821783\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.64514\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.502974\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.149686\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.969212\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.827046\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.646571\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.489082\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.312438\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.166441\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.985967\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.816985\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.640341\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.494344\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.31387\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.144888\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.968244\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.826078\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.641773\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.472791\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.292316\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.15015\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.965845\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.812186\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.631711\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.489546\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.309071\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.140089\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.959614\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.817449\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.636974\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.464161\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.291348\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.145351\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.964877\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.795895\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.61542\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.473254\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.288949\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.131459\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.954816\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.81265\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.628344\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.463193\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.282719\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.140553\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.960078\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.787265\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.610621\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.468456\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.28415\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.118999\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.938524\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.796358\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.612053\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.454564\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.27792\" cy=\"81.0277005\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.829445\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.648971\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.32633\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.976874\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.834708\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.654233\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.496744\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.316269\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.174103\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.993629\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.824647\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.648003\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.502006\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.321531\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.972075\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.829909\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.649434\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.476621\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.296147\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.157812\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.639373\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.497207\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.14392\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.295179\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.968708\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.799726\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.619251\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.477085\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.296611\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.139121\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.962477\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.820312\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.636006\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.467024\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.291812\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.12283\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.942355\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.800189\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.462225\" cy=\"78.2118741\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.648971\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.32633\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.976874\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.834708\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.654233\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"207.993629\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.824647\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.648003\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.502006\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.321531\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.972075\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.829909\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.649434\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.476621\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.296147\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.157812\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.639373\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.497207\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.14392\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.295179\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.968708\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.799726\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.619251\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.477085\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.296611\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.139121\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.962477\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.820312\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.636006\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.467024\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.291812\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.12283\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.942355\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.800189\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.462225\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.285582\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"341.139585\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"343.95911\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"346.790128\" cy=\"75.3845701\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.648971\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.506805\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.32633\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.153517\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.976874\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.834708\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.650402\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.496744\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.316269\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"205.174103\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"213.648003\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.502006\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.321531\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.972075\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.829909\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.649434\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.476621\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.296147\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.157812\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.639373\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.497207\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.14392\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.295179\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.968708\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.799726\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.619251\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.477085\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.296611\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.139121\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.962477\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.820312\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.636006\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.467024\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.291812\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.12283\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.942355\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.800189\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.462225\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.285582\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"341.139585\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"343.95911\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"346.790128\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"349.613485\" cy=\"72.5457886\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.506805\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.32633\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.153517\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.976874\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.834708\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.650402\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.496744\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.316269\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"210.824647\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"216.502006\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.321531\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.972075\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.829909\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.649434\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.476621\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.296147\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.157812\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.639373\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.497207\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.14392\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.295179\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.968708\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.799726\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.619251\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.477085\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.296611\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.139121\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.962477\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.820312\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.636006\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.467024\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.291812\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.12283\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.942355\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.800189\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.462225\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.285582\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"341.139585\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"343.95911\" cy=\"69.7184847\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.330161\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.161179\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.980704\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.838539\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"196.654233\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"199.500575\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"202.316269\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.975906\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.83374\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.480452\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.303809\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.161643\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.643204\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.147751\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.626913\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.480916\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.142952\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.966308\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.824142\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.639837\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.470855\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"309.963909\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.295643\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"324.126661\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"326.946186\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"329.80402\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"335.462225\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"338.285582\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"341.143416\" cy=\"66.8873548\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.161179\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.980704\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"193.838539\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.480452\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.303809\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.161643\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.643204\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.147751\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill=\"#FFFFFF\" cx=\"270.29901\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.626913\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.480916\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.142952\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.966308\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.824142\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.639837\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.470855\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"315.618283\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"321.295643\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"332.619715\" cy=\"64.0600509\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.980704\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.325362\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.649434\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.480452\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.303809\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.161643\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.819848\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.643204\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.147751\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.626913\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.480916\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.142952\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"292.966308\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"295.824142\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"298.639837\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"301.470855\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"312.798758\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"318.476117\" cy=\"61.2212694\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.325362\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.480452\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.303809\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"239.161643\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"241.977337\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.643204\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.316733\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.147751\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.82511\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.644636\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.153013\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.626913\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.480916\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.142952\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.29038\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"307.148214\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"309.963909\" cy=\"58.3939654\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.325362\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.484283\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"236.303809\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"244.823679\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"247.643204\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.320564\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.151582\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.828941\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"281.626913\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"284.480916\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"290.146783\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"304.294211\" cy=\"55.5857907\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"219.325362\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.320564\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.151582\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.828941\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"278.803557\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"287.300441\" cy=\"52.7584867\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"250.501038\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.320564\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.151582\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.828941\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"49.9197052\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"222.152549\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.975906\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"253.320564\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"256.151582\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.967276\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.828941\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.475654\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.972539\" cy=\"47.0924012\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"224.975906\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"227.837571\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.653265\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.974938\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.832772\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.479485\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"275.976369\" cy=\"44.2612714\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"230.653265\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"233.484283\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"258.974938\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"261.832772\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"264.648467\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.479485\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"270.29901\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"273.156844\" cy=\"41.4339675\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"38.5951859\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"267.479485\" cy=\"38.5951859\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.652801\" cy=\"35.767882\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.510636\" cy=\"35.767882\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.660463\" cy=\"32.9520556\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.522128\" cy=\"32.9520556\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.660463\" cy=\"30.1247516\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.522128\" cy=\"30.1247516\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.337823\" cy=\"30.1247516\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.168841\" cy=\"30.1247516\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"176.844769\" cy=\"27.2821442\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"179.660463\" cy=\"27.2821442\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"182.522128\" cy=\"27.2821442\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.168841\" cy=\"27.2821442\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.988366\" cy=\"27.2821442\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.337823\" cy=\"24.4586661\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.168841\" cy=\"24.4586661\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"190.988366\" cy=\"24.4586661\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"185.341654\" cy=\"21.6275363\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse><ellipse fill-opacity=\"0.2\" fill=\"#000000\" cx=\"188.168841\" cy=\"21.6275363\" rx=\"0.930903078\" ry=\"0.929681818\"></ellipse></g></g></g></g></g></svg>"

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _CreditCardSecurityCodeInput = __webpack_require__(304);
	
	var _CreditCardSecurityCodeInput2 = _interopRequireDefault(_CreditCardSecurityCodeInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const DELETE_KEY_CODE = 46
	
	function setup(propOverrides) {
		var props = Object.assign({
			style: '',
			placeholder: 'hi',
			className: 'there',
			securityCode: {
				status: inputStates.VALID,
				values: '',
				cursorPosition: 2
			},
			onChange: _expect2.default.createSpy(),
			onFocus: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_CreditCardSecurityCodeInput2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('CreditCardSecurityCodeInput', function () {
		it('should render an input field', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className).toBe('SecurityCode ');
		});
	
		it('should render an input field with an error when the date is invalid', function () {
			var _setup2 = setup({
				securityCode: {
					status: inputStates.INVALID,
					value: '',
					cursorPosition: 2
				}
			});
	
			var output = _setup2.output;
	
			(0, _expect2.default)(output.type).toBe('input');
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		describe('Formatting a Security Code', function () {
			it('should return a blank string when given an undefined input', function () {
				var _setup3 = setup();
	
				var instance = _setup3.instance;
	
				(0, _expect2.default)(instance.format(undefined)).toBe('');
			});
		});
	
		describe('Unformatting a Security Code', function () {
			it('should only accept numbers', function () {
				var _setup4 = setup();
	
				var instance = _setup4.instance;
	
				(0, _expect2.default)(instance.unformat('abcde')).toBe('');
			});
	
			it('should accept a maximum of 4 digits', function () {
				var _setup5 = setup();
	
				var instance = _setup5.instance;
	
				(0, _expect2.default)(instance.unformat('12345').length).toBe(4);
			});
		});
	
		describe('Getting State', function () {
	
			// afterEach(function() {
			// 	delete Stripe
			// })
	
			it('should return BLANK when field is undefined', function () {
				var _setup6 = setup();
	
				var instance = _setup6.instance;
	
				(0, _expect2.default)(instance.getState()).toEqual(inputStates.BLANK);
			});
	
			it('should return BLANK when the number is blank', function () {
				var _setup7 = setup();
	
				var instance = _setup7.instance;
	
				(0, _expect2.default)(instance.getState('')).toEqual(inputStates.BLANK);
			});
	
			it('should return INCOMPLETE when less than 3 digits', function () {
				var _setup8 = setup();
	
				var instance = _setup8.instance;
	
				(0, _expect2.default)(instance.getState('12')).toEqual(inputStates.INCOMPLETE);
			});
	
			it('should return INVALID when Stripe does not approve', function () {
				var _setup9 = setup();
	
				var instance = _setup9.instance;
	
				global.Stripe = {
					card: {
						validateCVC: function validateCVC() {
							return false;
						}
					}
				};
				(0, _expect2.default)(instance.getState('invalid')).toEqual(inputStates.INVALID);
			});
	
			it('should return VALID when Stripe approves', function () {
				var _setup10 = setup();
	
				var instance = _setup10.instance;
	
				global.Stripe = {
					card: {
						validateCVC: function validateCVC() {
							return true;
						}
					}
				};
				(0, _expect2.default)(instance.getState('123')).toEqual(inputStates.VALID);
				(0, _expect2.default)(instance.getState('1234')).toEqual(inputStates.VALID);
			});
		});
	});

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _EmailInput = __webpack_require__(340);
	
	var _EmailInput2 = _interopRequireDefault(_EmailInput);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function setup(propOverrides) {
		var props = Object.assign({
			icon: 'email',
			placeholder: 'hi',
			className: 'there',
			email: {
				status: inputStates.VALID,
				value: 'jeremy@lubin.com',
				hasAttemptedValidation: false
			},
			onChange: _expect2.default.createSpy(),
			onFocus: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_EmailInput2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('Input', function () {
		it('should render an input field', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
			var _output$props$childre = _slicedToArray(output.props.children, 2);
	
			var svg = _output$props$childre[0];
			var input = _output$props$childre[1];
	
	
			(0, _expect2.default)(output.type).toBe('div');
			(0, _expect2.default)(output.props.className).toBe('Input EmailInput ');
	
			// expect( svg.type ).toBe('svg')
			(0, _expect2.default)(input.type).toBe('input');
		});
	
		it('should render an input field with an error when the value is invalid', function () {
			var _setup2 = setup({
				email: { status: inputStates.INVALID, hasAttemptedValidation: true }
			});
	
			var output = _setup2.output;
	
			(0, _expect2.default)(output.props.className.includes('Error')).toBe(true);
		});
	
		describe('Validating an Email Address', function () {
			it('should not reject invald emails when no validation attempt has been made', function () {
				var _setup3 = setup();
	
				var instance = _setup3.instance;
	
				(0, _expect2.default)(instance.getState('')).toBe(inputStates.BLANK);
				(0, _expect2.default)(instance.getState('je')).toBe(inputStates.INCOMPLETE);
				(0, _expect2.default)(instance.getState('jeremy@')).toBe(inputStates.INCOMPLETE);
				(0, _expect2.default)(instance.getState('jeremy@lubin')).toBe(inputStates.INCOMPLETE);
			});
	
			it('should reject invald emails when a validation attempt has been made', function () {
				var _setup4 = setup({
					email: { hasAttemptedValidation: true }
				});
	
				var instance = _setup4.instance;
	
				(0, _expect2.default)(instance.getState('')).toBe(inputStates.INVALID);
				(0, _expect2.default)(instance.getState('je')).toBe(inputStates.INVALID);
				(0, _expect2.default)(instance.getState('jeremy@')).toBe(inputStates.INVALID);
				(0, _expect2.default)(instance.getState('jeremy@lubin')).toBe(inputStates.INVALID);
			});
	
			it('should accept valid emails', function () {
				var _setup5 = setup();
	
				var instance = _setup5.instance;
	
				(0, _expect2.default)(instance.getState('jeremy@lubin.com')).toBe(inputStates.VALID);
				(0, _expect2.default)(instance.getState('jeremy+test@lubin.com')).toBe(inputStates.VALID);
			});
		});
	});

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _svgInlineReact = __webpack_require__(278);
	
	var _svgInlineReact2 = _interopRequireDefault(_svgInlineReact);
	
	var _Icons = __webpack_require__(341);
	
	var Icons = _interopRequireWildcard(_Icons);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	__webpack_require__(246);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// const Input = (props) => (
	var Input = _react2.default.createClass({
		displayName: 'Input',
	
	
		getState: function getState() {
			var value = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
	
			var valid = /\S+@\S+\.\S+/.test(value);
	
			// If we've already attempted a validation
			// be aggressive about error states
			if (this.props.email.hasAttemptedValidation) {
				if (!valid) return inputStates.INVALID;
			} else {
				if (value === '') return inputStates.BLANK;
				if (!valid) return inputStates.INCOMPLETE;
			}
	
			return inputStates.VALID;
		},
	
		render: function render() {
			var _this = this;
	
			// Check whether we should render in an error state
			var icon = this.props.icon,
			    errorClass = '';
			if (this.getState(this.props.email.value) === inputStates.INVALID) {
				icon = Icons.ERROR_ICON;
				errorClass = 'Error';
			}
	
			return _react2.default.createElement(
				'div',
				{ className: 'Input EmailInput ' + errorClass },
				_react2.default.createElement(_svgInlineReact2.default, { src: __webpack_require__(319)("./" + icon + '.svg') }),
				_react2.default.createElement('input', { placeholder: this.props.placeholder,
					type: 'email',
					className: '' + errorClass,
					value: this.props.email.value,
					onChange: function onChange(e) {
						e.preventDefault();
						var email = e.target.value.trim();
						_this.props.onChange(email, _this.getState(email));
					}
				})
			);
		}
	});
	
	exports.default = Input;

/***/ },
/* 341 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ERROR_ICON = exports.ERROR_ICON = 'warning';

/***/ },
/* 342 */
/***/ function(module, exports) {

	"use strict";

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _Link = __webpack_require__(344);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function setup(propOverrides) {
		var props = Object.assign({
			href: '',
			text: '',
			className: '',
			onClick: _expect2.default.createSpy()
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_Link2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('Link', function () {
		it('should render a link', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
	
			(0, _expect2.default)(output.type).toBe('a');
			(0, _expect2.default)(output.props.className).toBe('Link ');
			(0, _expect2.default)(output.props.href).toBe('#');
			(0, _expect2.default)(output.props.target).toBe('_blank');
		});
	
		it('should support a custom href', function () {
			var href = 'http://lakers.com';
	
			var _setup2 = setup({
				href: href
			});
	
			var output = _setup2.output;
	
	
			(0, _expect2.default)(output.props.href).toBe(href);
		});
	
		it('should support a custom target', function () {
			var target = '_top';
	
			var _setup3 = setup({
				target: target
			});
	
			var output = _setup3.output;
	
	
			(0, _expect2.default)(output.props.target).toBe(target);
		});
	});

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Link = function Link(props) {
		return _react2.default.createElement(
			'a',
			{ className: 'Link ' + props.className,
				href: props.href ? props.href : '#',
				target: props.target ? props.target : '_blank',
				onClick: function onClick(e) {
					// e.preventDefault()
				}
			},
			props.text
		);
	};
	
	exports.default = Link;

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsTestUtils = __webpack_require__(113);
	
	var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);
	
	var _reactDom = __webpack_require__(244);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _PaymentPage = __webpack_require__(346);
	
	var _PaymentPage2 = _interopRequireDefault(_PaymentPage);
	
	var _CreditCardPaymentInput = __webpack_require__(277);
	
	var _CreditCardPaymentInput2 = _interopRequireDefault(_CreditCardPaymentInput);
	
	var _Checkbox = __webpack_require__(353);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	var _Button = __webpack_require__(347);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function setup(propOverrides) {
		var props = Object.assign({
			charityName: '',
			amount: 'hi',
			payment: {
				cardNumber: {
					status: '',
					value: '1234567891098876',
					cursorPosition: null
				},
				expirationDate: {
					status: '',
					values: {
						month: '12',
						year: '2020'
					},
					cursorPosition: null
				},
				securityCode: {
					status: '',
					value: '1234',
					cursorPosition: null
				},
				formStates: {
					currentField: paymentFormStates.CARD_NUMBER
				}
			},
			key: ''
		}, propOverrides);
	
		var renderer = _reactAddonsTestUtils2.default.createRenderer();
		renderer.render(_react2.default.createElement(_PaymentPage2.default, props));
		var output = renderer.getRenderOutput();
		var instance = renderer.getMountedInstance();
	
		return {
			props: props,
			output: output,
			renderer: renderer,
			instance: instance
		};
	}
	
	describe('PaymentPage', function () {
		it('should render the correct components', function () {
			var _setup = setup();
	
			var output = _setup.output;
	
			var _output$props$childre = _slicedToArray(output.props.children, 3);
	
			var input = _output$props$childre[0];
			var checkbox = _output$props$childre[1];
			var button = _output$props$childre[2];
	
	
			(0, _expect2.default)(output.type).toBe('div');
			(0, _expect2.default)(output.props.className).toBe('Page payment-page');
	
			(0, _expect2.default)(input.type.WrappedComponent).toBe(_CreditCardPaymentInput2.default);
			(0, _expect2.default)(checkbox.type).toBe(_Checkbox2.default);
			(0, _expect2.default)(button.type.WrappedComponent).toBe(_Button2.default);
		});
	
		describe('Checking for Valid Payment', function () {
			it('should return false if the credit card number is not VALID', function () {
				var _setup2 = setup({ payment: {
						cardNumber: {
							status: inputStates.INVALID
						},
						expirationDate: {
							status: inputStates.VALID
						},
						securityCode: {
							status: inputStates.VALID
						}
					} });
	
				var instance = _setup2.instance;
	
	
				(0, _expect2.default)(instance.isPageValid()).toBe(false);
			});
	
			it('should return false if the expiration date is not VALID', function () {
				var _setup3 = setup({ payment: {
						cardNumber: {
							status: inputStates.VALID
						},
						expirationDate: {
							status: inputStates.BLANK
						},
						securityCode: {
							status: inputStates.VALID
						}
					} });
	
				var instance = _setup3.instance;
	
	
				(0, _expect2.default)(instance.isPageValid()).toBe(false);
			});
	
			it('should return false if the security code is not VALID', function () {
				var _setup4 = setup({ payment: {
						cardNumber: {
							status: inputStates.VALID
						},
						expirationDate: {
							status: inputStates.VALID
						},
						securityCode: {
							status: inputStates.INCOMPLETE
						}
					} });
	
				var instance = _setup4.instance;
	
	
				(0, _expect2.default)(instance.isPageValid()).toBe(false);
			});
	
			it('should return true if all three are VALID', function () {
				var _setup5 = setup({ payment: {
						cardNumber: {
							status: inputStates.VALID
						},
						expirationDate: {
							status: inputStates.VALID
						},
						securityCode: {
							status: inputStates.VALID
						}
					} });
	
				var instance = _setup5.instance;
	
	
				(0, _expect2.default)(instance.isPageValid()).toBe(true);
			});
		});
	});

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _svgInlineReact = __webpack_require__(278);
	
	var _svgInlineReact2 = _interopRequireDefault(_svgInlineReact);
	
	var _Link = __webpack_require__(344);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	var _Button = __webpack_require__(347);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _BackButton = __webpack_require__(350);
	
	var _BackButton2 = _interopRequireDefault(_BackButton);
	
	var _NextButton = __webpack_require__(351);
	
	var _NextButton2 = _interopRequireDefault(_NextButton);
	
	var _PaymentInput = __webpack_require__(352);
	
	var _PaymentInput2 = _interopRequireDefault(_PaymentInput);
	
	var _Checkbox = __webpack_require__(353);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	__webpack_require__(356);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PaymentPage = _react2.default.createClass({
		displayName: 'PaymentPage',
	
	
		isPageValid: function isPageValid() {
	
			// Return true only if all three fields are VALID
			if (this.props.payment.cardNumber.status === inputStates.VALID && this.props.payment.expirationDate.status === inputStates.VALID && this.props.payment.securityCode.status === inputStates.VALID) {
				return true;
			}
	
			return false;
		},
	
		render: function render() {
			return _react2.default.createElement(
				'div',
				{ className: 'Page payment-page', style: this.props.style },
				_react2.default.createElement(_PaymentInput2.default, { icon: 'credit-card', payment: this.props.payment }),
				_react2.default.createElement(_Checkbox2.default, { name: 'remember-card', label: 'Remember my payment info on this device for future donations.' /*checked={this.props.savePaymentInfo}*/ }),
				_react2.default.createElement(_NextButton2.default, { text: 'Next', type: 'secondary next-page-button', icon: 'forward', iconPosition: 'right', disabled: !this.isPageValid() })
			);
		}
	});
	
	exports.default = PaymentPage;

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _svgInlineReact = __webpack_require__(278);
	
	var _svgInlineReact2 = _interopRequireDefault(_svgInlineReact);
	
	__webpack_require__(348);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Button = function Button(props) {
		var icon = null;
		if (props.icon) icon = _react2.default.createElement(_svgInlineReact2.default, { src: __webpack_require__(319)("./" + props.icon + '.svg') });
	
		return _react2.default.createElement(
			'button',
			{ className: 'button ' + props.type + (props.icon ? ' icon ' : '') + (props.iconPosition ? ' ' + props.iconPosition : ''),
				onClick: function onClick(e) {
					e.preventDefault();
					props.onClick();
				},
				disabled: props.disabled ? 'disabled' : ''
			},
			icon,
			props.text
		);
	};
	
	Button.propTypes = {
		onClick: _react.PropTypes.func,
		type: _react.PropTypes.string,
		text: _react.PropTypes.string,
		icon: _react.PropTypes.string,
		iconPosition: _react.PropTypes.string,
		disabled: _react.PropTypes.bool
	};
	
	exports.default = Button;

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(349);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(249)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./button.css", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./button.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(248)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Fonts */\n/* Colors */\n/* Spacing */\n/* Sizing */\n/* Animation */\n\nbutton {\n\t/* Reset browser defaults */\n\t-webkit-appearance: none;\n\t   -moz-appearance: none;\n\t        appearance: none;\n\toutline: none;\n\tbackground: none;\n\tborder: none;\n\tfont-family: \"Avenir\",helvetica,sans-serif;\n\n\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n\t\n\tborder: 1px solid #ffffff;\n\tpadding: 0 24px;\n\n\tfont-size: .75rem;\n\tline-height: 1.375em;\n\ttext-transform: uppercase;\n\tletter-spacing: 1px;\n\tfont-weight: 500;\n\n\tcursor: pointer;\n\t\n\tposition: relative;\n\n\n\t/* Set disabled state */\n\n\t/* Default size */\n\theight: 48px;\n\tborder-radius: calc(48px / 2);\n\tbox-sizing: border-box;\n\n}\n\n/*  Because Safari doesn't currently support displaying buttons as flex containers,\n\t\twe can add the flex container functionality to React's inner span isntead */\n\nbutton>span, button i {\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-align: center;\n\t-ms-flex-align: center;\n\talign-items: center;\n\t-webkit-box-pack: center;\n\t-ms-flex-pack: center;\n\tjustify-content: center;\n\n}\n\n/* Style an optional icon */\n\nbutton i {\n\tposition: absolute;\n\tleft: 24px;\n\ttop: calc(48px / 4);\n\theight: calc(48px / 2);\n\n}\n\n/* Darken button on highlight */\n\nbutton svg {\n\theight: calc(48px / 2);\n\n}\n\nbutton:focus, button:active {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\toutline: none;\n\t-webkit-tap-highlight-color: transparent;\n\n}\n\nbutton[disabled] {\n\topacity: 0.3;\n\tcursor: default;\n\t/* Don't do anything on hover, focus or active */\n\n}\n\nbutton[disabled]:focus, button[disabled]:hover, button[disabled]:active {\n\tbackground: none;\n\n}\n\nbutton:focus, button:hover {\n\tbackground-image: -webkit-linear-gradient(45deg, rgba(0,0,0,0.04), rgba(0,0,0,0.04));\n\tbackground-image: linear-gradient(45deg, rgba(0,0,0,0.04), rgba(0,0,0,0.04));\n\n}\n\nbutton:active {\n\tbackground-image: -webkit-linear-gradient(45deg, rgba(0,0,0,0.08), rgba(0,0,0,0.08));\n\tbackground-image: linear-gradient(45deg, rgba(0,0,0,0.08), rgba(0,0,0,0.08));\n\n}\n\nbutton.circle {\n\twidth: 48px;\n\tpadding: 0;\n\n}\n\nbutton.circle i {\n\tposition: relative;\n\tleft: auto;\n\ttop: auto;\n\n}\n\nbutton.icon:not(.circle) {\n\tpadding: 0 calc(24px * 2 + 48px / 2);\n\n}\n\nbutton.icon.right i {\n\tleft: auto;\n\tright: 24px;\n\n}\n\nbutton.primary {\n\tbackground-color: #ffffff;\n\tcolor: #00AB6B;\n\n}\n\n/* Style an optional icon */\n\nbutton.primary path {\n\tstroke: #00AB6B;\n\tfill: #00AB6B;\n\n}\n\nbutton.secondary {\n\tcolor: #ffffff;\n\n}\n\n/* Style an optional icon */\n\nbutton.secondary path {\n\tstroke: #ffffff;\n\tfill: #ffffff;\n\n}\n\nbutton.tertiary {\n\tcolor: #ffffff;\n\tborder: none;\n\n}\n\n/* Style an optional icon */\n\nbutton.tertiary path {\n\tstroke: #ffffff;\n\tfill: #ffffff;\n\n}\n\nbutton.quaternary {\n\tcolor: rgba(255, 255, 255, 0.7);\n\tfont-size: .75rem;\n\tline-height: 1.375em;\n\tborder: none;\n\ttext-transform: none;\n\tletter-spacing: 0px;\n\n}\n\n/* Style an optional icon */\n\nbutton.quaternary path {\n\tstroke: rgba(255, 255, 255, 0.7);\n\tfill: rgba(255, 255, 255, 0.7);\n\n}\n\nbutton.large {\n\theight: 72px;\n\tborder-radius: calc(72px / 2);\n\n}\n\n/* Style an optional icon */\n\nbutton.large i {\n\tposition: absolute;\n\tleft: 24px;\n\ttop: calc(72px / 4);\n\theight: calc(72px / 2);\n\n}\n\nbutton.large svg {\n\theight: calc(72px / 2);\n\n}\n\nbutton.large.circle {\n\twidth: 72px;\n\tfont-size: 24px;\n\tfont-weight: 100;\n\n}\n\nbutton.large.circle i {\n\tposition: relative;\n\tleft: auto;\n\ttop: auto;\n\n}\n\nbutton.large.icon:not(.circle) {\n\tpadding: 0 calc(24px * 2 + 72px / 2);\n\n}\n\nbutton.small {\n\theight: 32px;\n\tborder-radius: calc(32px / 2);\n\n}\n\n/* Style an optional icon */\n\nbutton.small svg {\n\theight: calc(32px / 2);\n\n}\n\nbutton.small i {\n\tposition: absolute;\n\tleft: 24px;\n\ttop: calc(32px / 4);\n\theight: calc(32px / 2);\n\n}\n\nbutton.small.circle {\n\twidth: 32px;\n\n}\n\nbutton.small.circle i {\n\tposition: relative;\n\tleft: auto;\n\ttop: auto;\n\n}", ""]);
	
	// exports


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var _Button = __webpack_require__(347);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onClick: function onClick() {
				dispatch((0, _actions.recedePage)());
			}
		};
	};
	
	var BackButton = (0, _reactRedux.connect)(null, mapDispatchToProps)(_Button2.default);
	
	exports.default = BackButton;

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var _Button = __webpack_require__(347);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onClick: function onClick() {
				dispatch((0, _actions.advancePage)());
			}
		};
	};
	
	var NextButton = (0, _reactRedux.connect)(null, mapDispatchToProps)(_Button2.default);
	
	exports.default = NextButton;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _reactRedux = __webpack_require__(280);
	
	var _actions = __webpack_require__(31);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _CreditCardPaymentInput = __webpack_require__(277);
	
	var _CreditCardPaymentInput2 = _interopRequireDefault(_CreditCardPaymentInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {
		return {
			onCardNumberChange: function onCardNumberChange(value, cursorPosition) {
				dispatch(actions.setCreditCardNumber(value, cursorPosition));
			},
			onExpirationDateChange: function onExpirationDateChange(value, cursorPosition) {
				dispatch(actions.setCreditCardExpirationDate(value, cursorPosition));
			},
			onSecurityCodeChange: function onSecurityCodeChange(value, cursorPosition) {
				dispatch(actions.setCreditCardSecurityCode(value, cursorPosition));
			},
			onCardNumberFocus: function onCardNumberFocus() {
				dispatch(actions.didStartEditingCreditCardNumber());
			},
			onExpirationDateFocus: function onExpirationDateFocus() {
				dispatch(actions.didStartEditingCreditCardExpirationDate());
			},
			onSecurityCodeFocus: function onSecurityCodeFocus() {
				dispatch(actions.didStartEditingCreditCardSecurityCode());
			}
		};
	};
	
	var PaymentInput = (0, _reactRedux.connect)(null, mapDispatchToProps)(_CreditCardPaymentInput2.default);
	
	exports.default = PaymentInput;

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(77);
	
	var _react2 = _interopRequireDefault(_react);
	
	__webpack_require__(354);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Checkbox = function Checkbox(props) {
		return _react2.default.createElement(
			'div',
			{ className: 'Checkbox' },
			_react2.default.createElement('input', { type: 'checkbox', id: props.name, checked: props.checked, defaultChecked: 'true' }),
			_react2.default.createElement(
				'label',
				{ htmlFor: props.name },
				props.label
			)
		);
	};
	
	exports.default = Checkbox;

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(355);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(249)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./checkbox.css", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./checkbox.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(248)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Fonts */\n\n/* Colors */\n\n/* Spacing */\n\n/* Sizing */\n\n/* Animation */\n\n.Checkbox {\n\n\tcursor: pointer;\n\n\t/* Add some spacing on each side */\n\tmargin: calc(24px / 2) calc(24px);\n}\n\n/* Hide the default checkbox */\n\n.Checkbox [type=\"checkbox\"] {\n\n\tdisplay: none;\n}\n\n.Checkbox label {\n\n\tdisplay: -webkit-box;\n\n\tdisplay: -ms-flexbox;\n\n\tdisplay: flex;\n\n\t-webkit-box-align: center;\n\n\t-ms-flex-align: center;\n\n\talign-items: center;\n\n\ttext-align: left;\n\n\tcolor: rgba(255, 255, 255, 0.7);\n\n\tfont-size: .75rem;\n\n\tline-height: 1.375em;\n}\n\n/* Add the icon */\n\n.Checkbox label:before {\n\n\tcontent: '';\n\n\tdisplay: inline-block;\n\n\theight: 24px;\n\n\twidth: 24px;\n\n\t-ms-flex-negative: 0;\n\n\tflex-shrink: 0;\n\n\tbackground: url(../../icons/circle-thin.svg);\n\n\tmargin-right: calc(24px / 2);\n}\n\n.Checkbox [type=\"checkbox\"]:checked + label:before {\n\n\tbackground: url(../../icons/circle-check.svg);\n}\n\n\n\n", ""]);
	
	// exports


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(357);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(249)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./payment-page.css", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js?-url!./../../node_modules/postcss-loader/index.js!./payment-page.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(248)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Fonts */\n\n/* Colors */\n\n/* Spacing */\n\n/* Sizing */\n\n/* Animation */\n\n.payment-page .Input {\n\n    margin-top: 24px;\n}\n\n.payment-page .next-page-button {\n\n    margin-top: 24px;\n}", ""]);
	
	// exports


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _charity = __webpack_require__(359);
	
	var _charity2 = _interopRequireDefault(_charity);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		name: '',
		formattedName: '',
		mission: '',
		charityURL: '',
		orgHunterURL: ''
	};
	
	describe('Charity Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _charity2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle SET_CHARITY', function () {
			(0, _expect2.default)((0, _charity2.default)([], {
				type: types.SET_CHARITY,
				name: 'united states association for unhcr',
				formattedName: 'United States Association for UNHCR',
				mission: 'Over 36 million people, mostly women and children, have fled persecution and war. Help the UN Refugee Agency ensure that they receive life-saving humanitarian aid.',
				charityURL: 'www.unrefugees.org',
				orgHunterURL: 'http://www.orghunter.com/organization/521662800'
			})).toEqual({
				name: 'united states association for unhcr',
				formattedName: 'United States Association for UNHCR',
				mission: 'Over 36 million people, mostly women and children, have fled persecution and war. Help the UN Refugee Agency ensure that they receive life-saving humanitarian aid.',
				charityURL: 'www.unrefugees.org',
				orgHunterURL: 'http://www.orghunter.com/organization/521662800'
			});
		});
	});

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		name: '',
		formattedName: '',
		mission: '',
		charityURL: '',
		orgHunterURL: ''
	};
	
	var charity = function charity() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
			case types.SET_CHARITY:
				return Object.assign({}, state, {
					name: action.name,
					formattedName: action.formattedName,
					mission: action.mission,
					charityURL: action.charityURL,
					orgHunterURL: action.orgHunterURL
				});
	
			default:
				return state;
		}
	};
	
	exports.default = charity;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _navigation = __webpack_require__(361);
	
	var _navigation2 = _interopRequireDefault(_navigation);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		currentPage: 0,
		previousPage: 0
	};
	
	describe('Navigation Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _navigation2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle ADVANCE_PAGE', function () {
			(0, _expect2.default)((0, _navigation2.default)(initialState, {
				type: types.ADVANCE_PAGE
			})).toEqual({
				currentPage: 1,
				previousPage: 0
			});
		});
	
		it('should handle RECEDE_PAGE', function () {
			(0, _expect2.default)((0, _navigation2.default)(initialState, {
				type: types.RECEDE_PAGE
			})).toEqual({
				currentPage: 0,
				previousPage: 0
			});
	
			(0, _expect2.default)((0, _navigation2.default)({
				currentPage: 1,
				previousPage: 0
			}, {
				type: types.RECEDE_PAGE
			})).toEqual({
				currentPage: 0,
				previousPage: 1
			});
		});
	
		it('should handle JUMP_TO_PAGE', function () {
			(0, _expect2.default)((0, _navigation2.default)(initialState, {
				type: types.JUMP_TO_PAGE,
				page: 3
			})).toEqual({
				currentPage: 3,
				previousPage: 0
			});
		});
	
		it('should handle JUMP_TO_PREVIOUS_PAGE', function () {
			(0, _expect2.default)((0, _navigation2.default)({
				currentPage: 7,
				previousPage: 2
			}, {
				type: types.JUMP_TO_PREVIOUS_PAGE
			})).toEqual({
				currentPage: 2,
				previousPage: 7
			});
		});
	
		// it('should handle REQUEST_PAYMENT_TOKEN', function() {
		// 	epxect( reducer( [], {
		// 		type: types.REQUEST_PAYMENT_TOKEN
		// 	})).toEqual({
	
		// 	})
		// })
	});

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _Pages = __webpack_require__(74);
	
	var views = _interopRequireWildcard(_Pages);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		currentPage: 0,
		previousPage: 0
	};
	
	var navigation = function navigation() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
			case 'ADVANCE_PAGE':
	
				// TODO: If we're already on the past page, do nothing
				// if ( action.fromPage ==  )
				// 	return state
	
				return {
					currentPage: state.currentPage + 1,
					previousPage: state.currentPage
				};
	
			case 'RECEDE_PAGE':
	
				// If we're already on the first page, do nothing
				if (state.currentPage == 0) return state;
	
				return {
					currentPage: state.currentPage - 1,
					previousPage: state.currentPage
				};
	
			case 'JUMP_TO_PAGE':
	
				// If this is a valid page
				if (action.page < 0 || action.page === views.pages.length) return state;
	
				return {
					currentPage: action.page,
					previousPage: state.currentPage
				};
	
			case 'JUMP_TO_PREVIOUS_PAGE':
	
				return {
					currentPage: state.previousPage,
					previousPage: state.currentPage
				};
	
			case types.DECLINED_CREDIT_CARD:
	
				return {
					currentPage: views.pages.indexOf(views.PAYMENT_PAGE),
					previousPage: state.currentPage
				};
	
			case types.REQUEST_PAYMENT_TOKEN:
	
				return {
					currentPage: views.pages.indexOf(views.LOADING_PAGE),
					previousPage: state.currentPage
				};
	
			default:
				return state;
		}
	};
	
	exports.default = navigation;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _cardNumber = __webpack_require__(363);
	
	var _cardNumber2 = _interopRequireDefault(_cardNumber);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		status: '',
		value: '',
		type: '',
		formattedValue: '',
		cursorPosition: null
	};
	
	describe('Credit Card Number Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _cardNumber2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle SET_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.SET_CREDIT_CARD_NUMBER,
				status: inputStates.VALID,
				cardNumber: '1234567890123456',
				formattedCardNumber: '•••• •••• •••• 3456',
				cardType: 'amex',
				cardNumberCursorPosition: 2
			})).toEqual({
				status: inputStates.VALID,
				value: '1234567890123456',
				type: 'amex',
				formattedValue: '•••• •••• •••• 3456',
				cursorPosition: 2
			});
	
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.SET_CREDIT_CARD_NUMBER,
				status: inputStates.INVALID,
				cardNumber: '1234',
				formattedCardNumber: '1234',
				cardType: 'visa',
				cardNumberCursorPosition: 4
			})).toEqual({
				status: inputStates.INVALID,
				value: '1234',
				type: 'visa',
				formattedValue: '1234',
				cursorPosition: 4
			});
		});
	
		it('should handle INVALID_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.INVALID_CREDIT_CARD_NUMBER
			})).toEqual({
				status: inputStates.INVALID
			});
		});
	
		it('should handle INCORRECT_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.INCORRECT_CREDIT_CARD_NUMBER
			})).toEqual({
				status: inputStates.INCORRECT
			});
		});
	
		it('should handle EXPIRED_CREDIT_CARD', function () {
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.EXPIRED_CREDIT_CARD
			})).toEqual({
				status: inputStates.EXPIRED
			});
		});
	
		it('should handle DECLINED_CREDIT_CARD', function () {
			(0, _expect2.default)((0, _cardNumber2.default)([], {
				type: types.DECLINED_CREDIT_CARD
			})).toEqual({
				status: inputStates.DECLINED
			});
		});
	});

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		status: '',
		value: '',
		type: '',
		formattedValue: '',
		cursorPosition: null
	};
	
	var cardNumber = function cardNumber() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
	
			case types.SET_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					status: action.status,
					value: action.cardNumber,
					type: action.cardType,
					formattedValue: action.formattedCardNumber,
					cursorPosition: action.cardNumberCursorPosition
				});
	
			case types.INVALID_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					status: inputStates.INVALID
				});
	
			case types.INCORRECT_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					status: inputStates.INCORRECT
				});
	
			case types.EXPIRED_CREDIT_CARD:
	
				return Object.assign({}, state, {
					status: inputStates.EXPIRED
				});
	
			case types.DECLINED_CREDIT_CARD:
	
				return Object.assign({}, state, {
					status: inputStates.DECLINED
				});
	
			default:
				return state;
		}
	};
	
	exports.default = cardNumber;

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _email = __webpack_require__(365);
	
	var _email2 = _interopRequireDefault(_email);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		status: '',
		value: '',
		hasAttemptedValidation: false
	};
	
	describe('Payment Email Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _email2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle SET_EMAIL', function () {
			(0, _expect2.default)((0, _email2.default)(initialState, {
				type: types.SET_EMAIL,
				status: inputStates.VALID,
				email: 'jeremy@lubin.com'
			})).toEqual(Object.assign({}, initialState, {
				status: inputStates.VALID,
				value: 'jeremy@lubin.com',
				hasAttemptedValidation: false
			}));
		});
	
		it('should handle HAS_ATTEMPTED_EMAIL_VALIDATION', function () {
			var newState = Object.assign({}, initialState, {
				status: inputStates.INCOMPLETE
			});
			(0, _expect2.default)((0, _email2.default)(newState, {
				type: types.HAS_ATTEMPTED_EMAIL_VALIDATION
			})).toEqual({
				status: inputStates.INVALID,
				value: '',
				hasAttemptedValidation: true
			});
		});
	});

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		status: '',
		value: '',
		hasAttemptedValidation: false
	};
	
	var securityCode = function securityCode() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
	
			case types.SET_EMAIL:
	
				return Object.assign({}, state, {
					status: action.status,
					value: action.email,
					hasAttemptedValidation: state.hasAttemptedValidation
				});
	
			case types.HAS_ATTEMPTED_EMAIL_VALIDATION:
	
				// Generate a more aggressive state
				// so that the first render after settings
				// this validation attempt will reflect
				// the more aggressive error settings
				var newStatus = state.status;
				if (state.status === inputStates.BLANK || state.status === inputStates.INCOMPLETE) {
					newStatus = inputStates.INVALID;
				}
	
				return Object.assign({}, state, {
					status: newStatus,
					hasAttemptedValidation: true
				});
	
			default:
				return state;
		}
	};
	
	exports.default = securityCode;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _expirationDate = __webpack_require__(367);
	
	var _expirationDate2 = _interopRequireDefault(_expirationDate);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		status: '',
		values: {
			month: '',
			year: ''
		},
		cursorPosition: null
	};
	
	describe('Credit Card Expiration Date Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _expirationDate2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle SET_CREDIT_CARD_EXPIRATION_DATE', function () {
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
				status: inputStates.VALID,
				expirationDate: '12/20',
				expirationDateCursorPosition: 2
			})).toEqual({
				status: inputStates.VALID,
				values: {
					month: '12',
					year: '2020'
				},
				cursorPosition: 2
			});
	
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
				status: inputStates.INVALID,
				expirationDate: '',
				expirationDateCursorPosition: 2
			})).toEqual({
				status: inputStates.INVALID,
				values: {
					month: '',
					year: ''
				},
				cursorPosition: 2
			});
		});
	
		it('should handle SET_CREDIT_CARD_EXPIRATION_DATE without a year', function () {
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
				status: inputStates.INVALID,
				expirationDate: '12/',
				expirationDateCursorPosition: 2
			})).toEqual({
				status: inputStates.INVALID,
				values: {
					month: '12',
					year: ''
				},
				cursorPosition: 2
			});
		});
	
		it('should handle SET_CREDIT_CARD_EXPIRATION_DATE with an invalid month', function () {
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
				status: inputStates.INVALID,
				expirationDate: '16/',
				expirationDateCursorPosition: 2
			})).toEqual({
				status: inputStates.INVALID,
				values: {
					month: '12',
					year: ''
				},
				cursorPosition: 2
			});
	
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.SET_CREDIT_CARD_EXPIRATION_DATE,
				status: inputStates.INVALID,
				expirationDate: '43/16',
				expirationDateCursorPosition: 2
			})).toEqual({
				status: inputStates.INVALID,
				values: {
					month: '12',
					year: '2016'
				},
				cursorPosition: 2
			});
		});
	
		it('should handle INVALID_CREDIT_CARD_EXPIRATION_MONTH', function () {
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.INVALID_CREDIT_CARD_EXPIRATION_MONTH
			})).toEqual({
				status: inputStates.INVALID
			});
		});
	
		it('should handle INVALID_CREDIT_CARD_EXPIRATION_YEAR', function () {
			(0, _expect2.default)((0, _expirationDate2.default)([], {
				type: types.INVALID_CREDIT_CARD_EXPIRATION_YEAR
			})).toEqual({
				status: inputStates.INVALID
			});
		});
	});

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		status: '',
		values: {
			month: '',
			year: ''
		},
		cursorPosition: null
	};
	
	var expirationDate = function expirationDate() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
	
			case types.SET_CREDIT_CARD_EXPIRATION_DATE:
	
				// Split the date into month and year by the slash
	
				var _action$expirationDat = action.expirationDate.split('/');
	
				var _action$expirationDat2 = _slicedToArray(_action$expirationDat, 2);
	
				var expirationMonth = _action$expirationDat2[0];
				var expirationYear = _action$expirationDat2[1];
	
				// Make sure the month is valid
	
				expirationMonth = parseInt(expirationMonth) > 12 ? '12' : expirationMonth;
	
				// Append the century digits to the year
				// TODO update so this can go higher than 2099
				if (expirationYear) {
					expirationYear = '20' + expirationYear;
				} else {
					expirationYear = '';
				}
	
				return Object.assign({}, state, {
					status: action.status,
					values: {
						month: expirationMonth,
						year: expirationYear
					},
					cursorPosition: action.expirationDateCursorPosition
				});
	
			case types.INVALID_CREDIT_CARD_EXPIRATION_MONTH:
	
				return Object.assign({}, state, {
					status: inputStates.INVALID
				});
	
			case types.INVALID_CREDIT_CARD_EXPIRATION_YEAR:
	
				return Object.assign({}, state, {
					status: inputStates.INVALID
				});
	
			default:
				return state;
		}
	};
	
	exports.default = expirationDate;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _formState = __webpack_require__(369);
	
	var _formState2 = _interopRequireDefault(_formState);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		currentField: ''
	};
	
	describe('Payment Form State Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _formState2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle DID_START_EDITING_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.DID_START_EDITING_CREDIT_CARD_NUMBER
			})).toEqual({
				currentField: paymentFormStates.CARD_NUMBER
			});
		});
	
		it('should handle DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE
			})).toEqual({
				currentField: paymentFormStates.EXPIRATION_DATE
			});
		});
	
		it('should handle DID_START_EDITING_CREDIT_CARD_SECURITY_CODE', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.DID_START_EDITING_CREDIT_CARD_SECURITY_CODE
			})).toEqual({
				currentField: paymentFormStates.SECURITY_CODE
			});
		});
	
		it('should handle DID_FINISH_EDITING_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.DID_FINISH_EDITING_CREDIT_CARD_NUMBER
			})).toEqual({
				currentField: paymentFormStates.EXPIRATION_DATE
			});
		});
	
		it('should handle SET_EDITING_CREDIT_CARD_NUMBER', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.SET_EDITING_CREDIT_CARD_NUMBER
			})).toEqual({
				currentField: paymentFormStates.CARD_NUMBER
			});
		});
	
		it('should handle SET_EDITING_CREDIT_CARD_EXPIRATION_DATE', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.SET_EDITING_CREDIT_CARD_EXPIRATION_DATE
			})).toEqual({
				currentField: paymentFormStates.EXPIRATION_DATE
			});
		});
	
		it('should handle SET_EDITING_CREDIT_CARD_SECURITY_CODE', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.SET_EDITING_CREDIT_CARD_SECURITY_CODE
			})).toEqual({
				currentField: paymentFormStates.SECURITY_CODE
			});
		});
	
		it('should handle SET_CREDIT_CARD_NUMBER in order to grab DOM sizes for various fields', function () {
			(0, _expect2.default)((0, _formState2.default)([], {
				type: types.SET_CREDIT_CARD_NUMBER,
				formState: {
					cardNumberGhostWidth: 0,
					abbreviatedCardNumberGhostWidth: 0,
					fieldsWidth: 277
				}
			})).toEqual({
				cardNumberGhostWidth: 0,
				abbreviatedCardNumberGhostWidth: 0,
				fieldsWidth: 277
			});
		});
	});

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	var _PaymentFormStates = __webpack_require__(275);
	
	var paymentFormStates = _interopRequireWildcard(_PaymentFormStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		currentField: ''
	};
	
	var formState = function formState() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
	
			case types.DID_START_EDITING_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.CARD_NUMBER
				});
	
			case types.DID_START_EDITING_CREDIT_CARD_EXPIRATION_DATE:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.EXPIRATION_DATE
				});
	
			case types.DID_START_EDITING_CREDIT_CARD_SECURITY_CODE:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.SECURITY_CODE
				});
	
			case types.DID_FINISH_EDITING_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.EXPIRATION_DATE
				});
	
			case types.SET_EDITING_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.CARD_NUMBER
				});
	
			case types.SET_EDITING_CREDIT_CARD_EXPIRATION_DATE:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.EXPIRATION_DATE
				});
	
			case types.SET_EDITING_CREDIT_CARD_SECURITY_CODE:
	
				return Object.assign({}, state, {
					currentField: paymentFormStates.SECURITY_CODE
				});
	
			// Listen to payment set information in order to capture
			// the size of the fields for rendering purposes
			case types.SET_CREDIT_CARD_NUMBER:
	
				return Object.assign({}, state, {
					cardNumberGhostWidth: action.formState.cardNumberGhostWidth,
					abbreviatedCardNumberGhostWidth: action.formState.abbreviatedCardNumberGhostWidth,
					fieldsWidth: action.formState.fieldsWidth
				});
	
			default:
				return state;
		}
	};
	
	exports.default = formState;

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _expect = __webpack_require__(2);
	
	var _expect2 = _interopRequireDefault(_expect);
	
	var _securityCode = __webpack_require__(371);
	
	var _securityCode2 = _interopRequireDefault(_securityCode);
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var initialState = {
		status: '',
		value: '',
		cursorPosition: null
	};
	
	describe('Credit Card Security Code Reducer', function () {
		it('should return the initial state', function () {
			(0, _expect2.default)((0, _securityCode2.default)(undefined, {})).toEqual(initialState);
		});
	
		it('should handle SET_CREDIT_CARD_SECURITY_CODE', function () {
			(0, _expect2.default)((0, _securityCode2.default)([], {
				type: types.SET_CREDIT_CARD_SECURITY_CODE,
				status: inputStates.VALID,
				securityCode: '1234',
				securityCodeCursorPosition: 2
			})).toEqual({
				status: inputStates.VALID,
				value: '1234',
				cursorPosition: 2
			});
		});
	
		it('should handle INVALID_CREDIT_CARD_SECURITY_CODE', function () {
			(0, _expect2.default)((0, _securityCode2.default)([], {
				type: types.INVALID_CREDIT_CARD_SECURITY_CODE
			})).toEqual({
				status: inputStates.INVALID
			});
		});
	
		it('should handle INCORRECT_CREDIT_CARD_SECURITY_CODE', function () {
			(0, _expect2.default)((0, _securityCode2.default)([], {
				type: types.INCORRECT_CREDIT_CARD_SECURITY_CODE
			})).toEqual({
				status: inputStates.INCORRECT
			});
		});
	});

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _ActionTypes = __webpack_require__(72);
	
	var types = _interopRequireWildcard(_ActionTypes);
	
	var _InputStates = __webpack_require__(75);
	
	var inputStates = _interopRequireWildcard(_InputStates);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var initialState = {
		status: '',
		value: '',
		cursorPosition: null
	};
	
	var securityCode = function securityCode() {
		var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
		var action = arguments[1];
	
	
		switch (action.type) {
	
			case types.SET_CREDIT_CARD_SECURITY_CODE:
	
				return Object.assign({}, state, {
					status: action.status,
					value: action.securityCode,
					cursorPosition: action.securityCodeCursorPosition
				});
	
			case types.INVALID_CREDIT_CARD_SECURITY_CODE:
	
				return Object.assign({}, state, {
					status: inputStates.INVALID
				});
	
			case types.INCORRECT_CREDIT_CARD_SECURITY_CODE:
	
				return Object.assign({}, state, {
					status: inputStates.INCORRECT
				});
	
			default:
				return state;
		}
	};
	
	exports.default = securityCode;

/***/ }
/******/ ]);
//# sourceMappingURL=test.bundle.js.map